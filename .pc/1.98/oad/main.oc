
format elfobj64

importx "strlen" strlen
importx "malloc" malloc
importx "free" free
importx "memcpy" memcpy

override include_sec 1
include "common.h" "common.h.oh"

import "fcontent" fcontent
import "loop" loop

functionx oadata_make(ss swf_fullpath)
	sd size;add size strlen(swf_fullpath)
	char logext=".log";vstr slogext^logext
	char xext=".x";vstr sxext^xext
	char xxext=".xx";vstr sxxext^xxext
	sd allsize=\.logext;add allsize size
	sd mem;set mem malloc(allsize)
	if mem!=(NULL)
		sd exit
		call memcpy(mem,swf_fullpath,size)
		add size mem
		call memcpy(size,slogext,\.logext)
		sd logsize
		sd logcontent;set logcontent fcontent(mem,#logsize)
		if logcontent!=(NULL)
			call memcpy(size,sxext,\.xext)
			sd dummy
			sd xcontent;set xcontent fcontent(mem,#dummy)
			if xcontent!=(NULL)
				call memcpy(size,sxxext,\.xxext)
				sd xxcontent;set xxcontent fcontent(mem,#dummy)
				if xxcontent!=(NULL)
					set exit loop(logcontent,xcontent,xxcontent,logsize)
					call free(xxcontent)
				else
					set exit (EXIT_FAILURE)
				end
				call free(xcontent)
			else
				set exit (EXIT_FAILURE)
			end
			call free(logcontent)
		else
			set exit (EXIT_FAILURE)
		end
		call free(mem)
		return exit
	end
	return (EXIT_FAILURE)
end

#functionx oadata_ok(ss swf_fullpath)
# move ...last.data ...data
#end
