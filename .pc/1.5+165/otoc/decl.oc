
#D structure
function decl(sv pbuffer)
	charx field#1;call get_char(pbuffer,#field)
	if field!=(Xfile_declfield_const)
		if field=(Xfile_declfield_data)
			charx data#1;call get_char(pbuffer,#data)
		end
		charx type#1;call get_char(pbuffer,#type)
		charx feature#1;call get_char(pbuffer,#feature)
	end
	datax sz#1;valuex pointer#1
	call get_string(pbuffer,#sz,#pointer)
end

function functiondef_intern(sv pbuffer)
	datax args#1;call get_data(pbuffer,#args)
	sd n=0;while n!=args
		call decl(pbuffer)
		inc n
	end
end
#function functiondef_raw(sv pbuffer)
function functiondef_extern(sv pbuffer)
	charx e#1;call get_char(pbuffer,#e)
	call functiondef_intern(pbuffer)
end
#function functiondef_entry(sv pbuffer)

#at N structure
function normal(sv pbuffer)
	charx type#1;call get_char(pbuffer,#type)
end
function neg(sv pbuffer)
	charx type#1;call get_char(pbuffer,#type)
end
function not(sv pbuffer)
	charx type#1;call get_char(pbuffer,#type)
end
function notneg(sv pbuffer)
	charx type#1;call get_char(pbuffer,#type)
end
function open();end
function close();end
function add();end
function sub();end
function mul();end
function div();end
function divu();end
function and();end
function or();end
function xor();end
function pow();end
function rem();end
function remu();end
function shl();end
function sar();end
function shr();end
function equal();end
function inequal();end
function less();end
function greater();end
function lessequal();end
function greaterequal();end
function logicaland();end
function logicalor();end
function unsignedless();end
function unsignedgreater();end
function unsignedlessequal();end
function unsignedgreaterequal();end
function parity();end
function odd();end
