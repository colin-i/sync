
#aftercalli

#N structure
function number(sv pbuffer)
include "number.h"
	charx item#1;call get_char(pbuffer,#item)
	while item!=(Xfile_numbers_done)
		value functions^normal;               value  *^neg;            value  *^not;            value  *^notneg;            value  *^open;                 value  *^close;                 value *^add;                value *^sub;                value *^mul;                value *^div;                value *^divu;                value *^and;                value *^or;                value *^xor;                value *^pow;                value *^rem;                value *^remu;                value *^shl;                value *^sar;                value *^shr;                value *^equal;                value *^inequal;                value *^less;                value *^greater;                value *^lessequal;                value *^greaterequal;                value *^logicaland;                value *^logicalor;                value *^unsignedless;                value *^unsignedgreater;                value *^unsignedlessequal;                value *^unsignedgreaterequal;                value *^parity;                value *^odd;
		if item>^(Xfile_numbers_last)
			callret aftercallenable()
		end
		ss n;set n #data
		add n item
		sv &f;set f n#
		if f=(Xfile_numbers_notmapped)
			callret aftercallenable()
		end
		mult f :
		add f #functions
		set f f#
		call f(pbuffer)
		call get_char(pbuffer,#item)
	end
end
