
format elf

#!
multi
line
!

override include_sec 1
include "stddef.h" "include.h"

orphan off

char c1=1
chars c2={2,3}
char c3="45"
word c5=1;datau c6=1;str c7=1;value c8=1
vstr c9="";vword ca=1;vdata cb=1
char cc="\taz"^

#constu a1=1
const a1=1

char a#3
value b^a

function intern(data a,sd b,sv c,svu d) #commenting
	inc a
	dec a
	incst c
	decst c
	neg c
	not c
	base c
	leave c
	shl1 c
	shr1 c
	sar1 c
	return d
end
function st()
	datax a#1
end
functionxx f(sd dummy) #void f(...) was working with gcc13 but with 5 still is: ISO C requires a named argument before '...'
	valuex a#1
	value b=\main.c2
	set a #b
	set b a#
	set b a#s
	set b a#w
	set b a#d
	set b a#v
	datax c#1
	value d^c
	set a d#:st.a
	if 2=2
		ret
	end
end

library "a"
import "b" puts

entryx main(sd argc)
	set b b
	add b 1
	sub b 1
	mult b 1
	div c1 1
	divu c1 1
	rem c1 1
	remu c1 1
	and c1 1
	or c1 1
	xor b 1

	hex -:,~\,~-\\+(1+01+0x2+\intern+\\intern+\intern.a+\intern.a\)

	call intern(1,"q\nw\re\tr",main.a:a,main.a)
	set b puts()

	if 1=1
	#elseif 1!!1
	#elseif 1!1
	end
	if 1!=1
	elseif 1<1
	else;end
	if 1>1;end
	if 1<=1;end
	if 1>=1;end
	if 1<^1;end
	if 1>^1;end
	if 1<=^1;end
	if 1>=^1;end

	callex b b 1
	while 1=2
		continue
	end
	whiletrue
		break
	end

	char z=0xff+077+12-3+(4*3/2//1&1|1^1%5%%5<<3>>3>>>3=2!=2<3>3<=4>=4&&7||7<^6>^6<=^6>=^6) ;#char er=3!!2 char er=3!2 char er=3$2
	char z2=a1;char z3=-a1;char z4=~a1;char z5=~-a1

	char q1=:;char q2=\st;char q3=\st.a\;char q4=\st.a

	aftercall *tst
	override x_file 1
	i3
	exit 2
