Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 audapa (1-j16) jammy; urgency=medium
 .
   * automation
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-05-18

--- audapa-1.orig/.github/workflows/appimage.yml
+++ /dev/null
@@ -1,169 +0,0 @@
-
-on:
- workflow_dispatch:
-  inputs:
-   ppa:
-    description: "ppa sufix"
-
-jobs:
- build:
-  runs-on: ubuntu-22.04
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      name2=Audapa
-      sname=auda
-      #
-      mkdir -p AppDir
-      file=runtime
-      arch_ai=-x86_64
-      archfile=${file}${arch_ai}
-      kitpart () {
-       #https://github.com/AppImage/pkg2appimage
-       #in searching for fuse3, was latest
-       #urlpart=`wget -q https://github.com/AppImage/AppImageKit/releases/continuous -O - | grep "${archfile}" | head -n 1 | cut -d '"' -f 2`
-       #this is at o urlpart=AppImage/AppImageKit/releases/latest/download/${archfile}
-       #this is from a browser, not tested at this comment
-       urlpart=AppImage/AppImageKit/releases/download/continuous/${archfile}
-      }
-      if [ ! -e "${file}" ]; then
-       kitpart
-       #"pkg2appimage-.*-x86_64.AppImage"
-       wget -c https://github.com/${urlpart}
-       mv ${archfile} ${file}
-       chmod a+x ${file}
-      fi
-      if [ ! -e "${name}.deb" ]; then
-       version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-       if [ ! -e "lp2.py" ]; then
-        wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
-        #is already sudo apt install python3-launchpadlib
-       fi
-       OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} amd64)
-       wget ${OUTPUT}/+files/${name}_${version}_all.deb -O ${name}.deb
-       dpkg -x ${name}.deb AppDir
-       mv AppDir/usr/lib/python3.10 AppDir/usr/lib/python3 #it's ok on jammy
-       pya=`wget -q https://raw.githubusercontent.com/colin-i/pyaudioo/master/debian/changelog -O - | head -1 | grep -Poe "[^\(]*(?=\))"`
-       OUTPUT=$(python3 lp2.py ppa pyaudioo ${pya} amd64)
-       wget ${OUTPUT}/+files/pyaudioo_${pya}_all.deb -O pyaudio.deb
-       dpkg -x pyaudio.deb AppDir
-      fi
-      #dependencies
-      downdeb () {
-       pkg=${1}
-       repo=${2}
-       src="ro.archive.ubuntu.com"
-       inter=Packages
-       fullinter=${inter}${repo}
-       if [ ! -e "${fullinter}" ]; then
-        wget http://${src}/ubuntu/dists/jammy/${repo}/binary-amd64/${inter}.xz -O ${fullinter}.xz
-        xz -d ${fullinter}.xz
-       fi
-       debfilename=`grep "^Filename.*/${pkg}_" ${fullinter}`
-       debfilename=`echo ${debfilename} | tail -1 | cut -d ' ' -f 2`
-       wget_url=http://${src}/ubuntu/${debfilename}
-       maindeb=${pkg}.deb
-       wget ${wget_url} -O ${maindeb}
-       dpkg -x ${maindeb} AppDir
-      }
-      downdeb libportaudio2 universe
-      downdeb python3-appdirs main
-      #downdeb python3-pyaudio universe
-      #
-      apd=AppDir
-      cd ${apd}
-      file2=AppRun
-      if [ ! -e "${file2}" ]; then
-       if [ -z "${urlpart}" ]; then
-        kitpart
-       fi
-       archfile2=${file2}${arch_ai}
-       urlpart=${urlpart:0:`echo ${urlpart} | grep -ob '[^/]*$' | cut -d ':' -f 1`}${archfile2}
-       wget -c https://github.com/${urlpart}
-       chmod a+x ${archfile2}
-       mv ${archfile2} ${file2}
-      fi
-      pngfile=${name}.png
-      if [ ! -e "${pngfile}" ]; then
-       wget https://github.com/colin-i/test/releases/download/1.5/${name}.png -O ${pngfile}
-       cat > ${name}.desktop <<EOF
-      [Desktop Entry]
-      Type=Application
-      Name=${name2}
-      Exec=${name}
-      Icon=${name}
-      Categories=Utility
-      EOF
-       ln -s ${pngfile} .DirIcon
-      fi
-      #launcher
-      if [ ! -e "usr/bin/${sname}" ]; then
-       echo launcher
-       cd usr/bin
-       mv ${name} ${sname}
-       #PYTHONHOME is also set by AppRun wrong
-       cat > ${name} <<EOF
-      #!/bin/bash
-      cd "\$(dirname "\$0")"
-      cd ../
-      unset PYTHONHOME
-      LD_LIBRARY_PATH="\$(pwd)/lib/x86_64-linux-gnu" \
-       PYTHONPATH="\$(pwd)/lib/python3/dist-packages" \
-       python3 bin/${sname}
-      EOF
-       chmod 755 ${name}
-       cd ../../
-      fi
-      #metadata file
-      mi=usr/share/metainfo
-      mif=${mi}/com.colin.${name}.appdata.xml
-      if [ ! -e "${mif}" ]; then
-       page=`cat ../debian/control | grep "^Homepage" | cut -d ' ' -f2`
-       srcname=`echo ${page} | grep -o "[^/]*$"`
-       mkdir -p ${mi}
-       cat > ${mif} <<EOF
-      <?xml version="1.0" encoding="UTF-8"?>
-      <!-- Copyright 2022 -->
-      <component type="desktop-application">
-       <id>com.colin.${name}</id>
-       <metadata_license>FSFAP</metadata_license>
-       <name>${name2}</name>
-       <summary>Audio wave file manipulator</summary>
-       <description>
-        <ul>
-         <li>Sound effects: loudness,spread,and edit</li>
-         <li>Sound player</li>
-         <li>Sound recorder</li>
-        </ul>
-       </description>
-       <url type="homepage">${page}</url>
-       <screenshots>
-        <screenshot type="default">
-         <caption>${name2} image</caption>
-         <image>https://raw.github.com/colin-i/${srcname}/master/arh/${name}.png</image>
-        </screenshot>
-       </screenshots>
-       <content_rating/>
-      </component>
-      EOF
-      fi
-      #
-      cd ..
-      #
-      if [ ! -e "${name}.AppImage" ]; then
-       mksquashfs AppDir ${name}.squashfs -root-owned -noappend
-       cat runtime >> ${name}.AppImage
-       cat ${name}.squashfs >> ${name}.AppImage
-       chmod a+x ${name}.AppImage
-      fi
-      #glibc=`readelf -V ${apd}/usr/bin/${name} | grep -Po "(?<= GLIBC_)[^ ]*" | sort -Vr | head -1 | sed "s/\./-/g"`
-      #echo -n ${glibc} > version #"glibc" will not be ok for upload-artifact
-   - name: artifact
-     uses: actions/upload-artifact@v3
-     with:
-      name: appimage
-      path: |
-       ./*.AppImage
-      # ./version
--- audapa-1.orig/.github/workflows/deb.yml
+++ audapa-1/.github/workflows/deb.yml
@@ -11,13 +11,14 @@ jobs:
       path: in
    - uses: actions/checkout@master
      with:
-      repository: colin-i/test
+      repository: colin-i/sync
       path: in2
+      ref: audapa-jammy
    - name: Run a multi-line script
      run: |
       name=`cat in/debian/changelog | head -1 | grep -o ^[^\ ]*`
-      cp -r in2/sync/${name}/debian/patches in/debian
-      cp -r in2/sync/${name}/.pc in
+      mv in2/debian/patches in/debian/patches
+      mv in2/.pc in/.pc
       if [ -z "`dpkg -s devscripts>/dev/null 2>&1 && echo x`" ]; then
        sudo apt install -y devscripts debhelper dh-python python3-all
        #python3-setuptools is already
--- audapa-1.orig/.github/workflows/rel.yml
+++ /dev/null
@@ -1,41 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- rbuild:
-  runs-on: ubuntu-latest
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      #get the version from changelog/launchpad/input
-      tag=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-      echo "tag=${tag}" >> $GITHUB_ENV
-   - name: Create Release
-     id: create_release
-     uses: actions/create-release@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      tag_name: ${{ env.tag }}
-      release_name: Release ${{ env.tag }}
-      draft: false
-      prerelease: false
-      #this can be undone. example: git push origin :refs/tags/1.6
-   - name: Store upload url for assets
-     run: |
-      #echo straight will not escape {}
-      a=${{ steps.create_release.outputs.upload_url }}
-      echo -n ${a} > 1.txt
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      echo "proj=${name}" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: https://uploads.github.com/repos/colin-i/test/releases/67484178/assets{?name,label}
-      asset_path: ./1.txt
-      asset_name: ${{ env.proj }}
-      asset_content_type: text/plain
--- audapa-1.orig/.github/workflows/rpm.yml
+++ /dev/null
@@ -1,38 +0,0 @@
-on:
- workflow_dispatch:
-  inputs:
-   ppa:
-    description: "ppa sufix"
-
-jobs:
- rpbuild:
-  runs-on: ubuntu-22.04 #focal alien is not testing ok on docker fedora
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      #get deb
-      arh=`cat debian/control | grep ^Architecture | cut -d ' ' -f2` #all
-      arh_lp=amd64
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-      #dist=`cat debian/changelog | head -1 | grep -Poe "[^ ]*(?=;)"`
-      if [ ! -e "lp2.py" ]; then
-       wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
-      fi
-      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} ${arh_lp})
-      wget ${OUTPUT}/+files/${name}_${version}_${arh}.deb -O ${name}.deb
-      #make rpm
-      mkdir out
-      cd out
-      #sudo apt update
-      sudo apt install alien
-      sudo alien -rk ../${name}.deb
-      fname=`ls`
-      mv ${fname} ../
-      echo "file=${fname}" >> $GITHUB_ENV
-   - name: artifact
-     uses: actions/upload-artifact@v3
-     with:
-      name: rpm
-      path: ./${{ env.file }}
--- audapa-1.orig/.github/workflows/upapp.yml
+++ /dev/null
@@ -1,40 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- uabuild:
-  runs-on: ubuntu-latest
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      #proj
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      #get up_url
-      wget https://github.com/colin-i/test/releases/download/1.5/${name} -O 1.txt
-      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
-      #get appimage artifact
-      id=$(gh run list --workflow=appimage.yml -b $(git rev-parse --abbrev-ref HEAD) | cut -f7 | head -1)
-      repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o [^/]*$`
-      #
-      url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
-      url=${url:1:-1}
-      echo ${url}
-      curl -L -H "Authorization: token ${{ secrets.PAT }}" ${url} --output a.zip
-      #to env
-      unzip ./a.zip
-      echo "file=${name}.AppImage" >> $GITHUB_ENV
-      echo "fullfile=${name}.amd64.AppImage" >> $GITHUB_ENV
-     env:
-      #for gh
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: ${{ env.up_url }}
-      asset_path: ./${{ env.file }}
-      asset_name: ${{ env.fullfile }}
-      asset_content_type: application/x-executable
--- audapa-1.orig/.github/workflows/uprpm.yml
+++ /dev/null
@@ -1,24 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- urbuild:
-  runs-on: ubuntu-18.04
-  steps:
-   - name: Run a multi-line script
-     run: |
-      if [ -n "${{ env.init }}" ]; then
-       exit 1
-      fi
-      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
-      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: ${{ env.up_url }}
-      asset_path: ./${{ env.file }}
-      asset_name: ${{ env.file }}
-      asset_content_type: application/x-rpm
--- audapa-1.orig/_audapacache_/example.wav.json
+++ audapa-1/_audapacache_/example.wav.json
@@ -1 +1 @@
-[[[512, 0, false, true], [519, -1149, false, true], [525, 3066, false, true], [534, -2180, false, true], [541, 0, false, true], [552, -5365, false, true], [559, 9581, false, true], [569, -10156, false, true], [576, 8048, false, true], [586, -8718, false, true], [594, 5940, false, true], [604, -2252, false, true], [620, 2956, false, true], [633, -3198, false, true], [642, 3319, false, true], [647, 0, false, true], [661, 0, false, true], [666, 2353, false, true], [676, -3439, false, true], [684, 1267, false, true], [692, -9353, false, true], [696, 10560, false, true], [706, -13095, false, true], [715, 9595, false, true], [723, -9353, false, true], [732, 5612, false, true], [740, -1387, false, true], [752, -1748, false, true], [756, 3439, false, true], [768, -2836, false, true], [779, 4767, false, true], [790, -3439, false, true], [799, 2956, false, true], [807, -5129, true, true], [817, -7422, false, true], [821, 13336, false, true], [832, -13336, false, true], [841, 9474, false, true], [848, -7422, false, true], [858, 4646, false, true], [863, 181, false, true], [869, -1387, true, true], [880, -2112, false, true], [883, 4405, false, true], [895, -2836, false, true], [907, 4888, false, true], [917, -4043, false, true], [926, 3560, false, true], [934, -10439, false, true], [942, 12733, false, true], [952, -12008, false, true], [959, 9232, false, true], [967, -5612, false, true], [976, 3560, false, true], [986, 0, false, true], [997, -1870, false, true], [1004, 3681, false, true], [1018, -2232, false, true], [1024, 4163, false, true], [1037, -4284, false, true], [1045, 1991, false, true], [1051, -6819, false, true], [1059, 10319, false, true], [1068, -11767, false, true], [1077, 10439, false, true], [1085, -8026, false, true], [1095, 5008, false, true], [1101, -1508, false, true], [1116, -1508, false, true], [1120, 3681, false, true], [1130, -1750, false, true], [1142, 2474, false, true], [1156, -3319, false, true], [1162, 0, false, true], [1169, -5612, false, true], [1175, 9957, false, true], [1185, -11043, false, true], [1194, 8750, false, true], [1202, -5974, false, true], [1213, 4405, false, true], [1220, -1750, false, true], [1230, -1267, false, true], [1238, 3439, false, true], [1250, -1508, false, true], [1260, 2836, false, true], [1275, -4646, false, true], [1281, 0, false, true], [1288, -4284, false, true], [1293, 9353, false, true], [1303, -11164, false, true], [1312, 9836, false, true], [1321, -7301, false, true], [1330, 5612, false, true], [1337, -2474, false, true], [1352, 0, false, true], [1355, 4525, false, true], [1367, -2715, false, true], [1376, 4163, false, true], [1389, -4525, false, true], [1395, 0, false, true], [1403, -4767, false, true], [1410, 9715, false, true], [1417, -11405, false, true], [1427, 10922, false, true], [1434, -7663, false, true], [1444, 7181, false, true], [1454, -4163, false, true], [1462, 0, false, true], [1473, 2956, false, true], [1483, -905, false, true], [1493, 3198, false, true], [1503, -4767, false, true], [1512, 0, false, true], [1517, -3439, false, true], [1525, 8388, false, true], [1532, -10319, false, true], [1543, 8991, false, true], [1550, -5491, false, true], [1560, 4767, false, true], [1568, -3319, false, true], [1576, 0, false, true], [1592, 3077, false, true], [1600, -2232, false, true], [1609, 3801, false, true], [1619, -5491, false, true], [1631, 0, false, true], [1639, 7905, false, true], [1648, -9715, false, true], [1657, 8146, false, true], [1666, -3560, false, true], [1673, 3319, false, true], [1683, -1746, false, true], [1693, 0, false, true], [1705, 3198, false, true], [1714, -1025, false, true], [1725, 1508, false, true], [1738, -6577, false, true], [1746, 8508, false, true], [1756, -8146, false, true], [1767, 4888, false, true], [1773, 0, false, true], [1781, 3560, false, true], [1789, -3319, false, true], [1799, 2956, false, true], [1807, -1750, false, true], [1816, 3560, false, true], [1825, 0, false, true], [1842, 0, false, true], [1854, -5853, false, true], [1861, 8146, false, true], [1873, -7422, false, true], [1881, 5008, false, true], [1889, 0, false, true], [1898, 3801, false, true], [1905, -3077, false, true], [1914, 3077, false, true], [1923, -2352, false, true], [1931, 3681, false, true], [1939, 0, false, true], [1959, 0, false, true], [1967, -6457, false, true], [1977, 9595, false, true], [1986, -9112, false, true], [1997, 5974, false, true], [2002, -1629, false, true], [2011, 3922, false, true], [2019, -3439, false, true], [2027, 3922, false, true], [2036, -2594, false, true], [2047, 4043, false, true], [2052, 0, false, true], [2075, 0, false, true], [2083, -6698, false, true], [2093, 10319, false, true], [2102, -9474, false, true], [2110, 5612, false, true], [2118, -1870, false, true], [2126, 4163, false, true], [2134, -4284, false, true], [2143, 3922, false, true], [2151, -2353, false, true], [2159, 4043, false, true], [2166, 0, false, true], [2189, 0, false, true], [2199, -6577, false, true], [2208, 8750, false, true], [2217, -8146, false, true], [2227, 5370, false, true], [2233, -1387, false, true], [2242, 4767, false, true], [2249, -4405, false, true], [2258, 3560, false, true], [2268, -1991, false, true], [2274, 3801, false, true], [2282, 0, false, true], [2304, 0, false, true], [2315, -5732, false, true], [2324, 8146, false, true], [2331, -7663, false, true], [2343, 4888, false, true], [2350, -1146, false, true], [2359, 4525, false, true], [2366, -4043, false, true], [2374, 3681, false, true], [2384, -1990, false, true], [2393, 4043, false, true], [2400, -2594, false, true], [2411, 1746, false, true], [2420, -120, false, true], [2432, -7060, false, true], [2441, 8750, false, true], [2450, -8026, false, true], [2460, 4646, false, true], [2466, 0, false, true], [2476, 4163, false, true], [2484, -4284, false, true], [2493, 4646, false, true], [2501, -2594, false, true], [2511, 3077, false, true], [2519, 0, false, true], [2540, 0, false, true], [2548, -6577, false, true], [2559, 8991, false, true], [2569, -7905, false, true], [2578, 4888, false, true], [2584, 0, false, true], [2592, 2956, false, true], [2601, -2836, false, true], [2611, 3077, false, true], [2618, -1146, false, true], [2626, 2112, false, true], [2631, 0, false, true], [2640, 1128, false, true], [2647, -1267, false, true], [2654, 2594, false, true], [2666, -6939, false, true], [2678, 7784, false, true], [2687, -7301, false, true], [2696, 4888, false, true], [2705, 0, false, true], [2713, 3560, false, true], [2720, -3439, false, true], [2730, 2956, false, true], [2738, -1749, false, true], [2745, 2353, false, true], [2754, -905, false, true], [2762, 2232, false, true], [2768, 0, false, true], [2780, 0, false, true], [2787, -6215, false, true], [2798, 8629, false, true], [2808, -6819, false, true], [2815, 3560, false, true], [2823, -1508, false, true], [2830, 4888, false, true], [2841, -5370, false, true], [2851, 4525, false, true], [2859, -2112, false, true], [2867, 2594, false, true], [2876, -2353, false, true], [2882, 3198, false, true], [2889, -1146, false, true], [2899, 1870, false, true], [2909, -6819, false, true], [2922, 8870, false, true], [2930, -7060, false, true], [2941, 4043, false, true], [2948, 0, false, true], [2955, 3922, false, true], [2966, -3922, false, true], [2972, 2715, false, true], [2984, -1267, false, true], [2992, 2353, false, true], [3001, -3319, false, true], [3011, 5974, false, true], [3018, -2592, false, true], [3026, 1266, false, true], [3037, -4888, false, true], [3048, 6457, false, true], [3057, -5008, false, true], [3068, 3077, false, true], [3075, -1025, false, true], [3084, 4043, false, true], [3092, -4767, false, true], [3103, 3560, false, true], [3112, -1267, false, true], [3119, 1508, false, true], [3126, -1991, false, true], [3133, 3198, false, true], [3146, 0, false, false], [3165, -1508, true, false], [3174, -4767, false, true], [3181, 7422, false, true], [3194, -4888, false, true], [3204, 1870, false, true], [3213, 0, false, true], [3218, 2956, false, true], [3229, -3560, false, true], [3235, 3198, false, true], [3248, -1629, false, true], [3255, 1146, false, true], [3263, -181, false, true], [3270, 1870, false, true], [3281, -1025, false, true], [3290, 1267, false, true], [3300, 0, false, true], [3314, 0, false, true], [3316, -1750, true, true], [3325, -3681, false, true], [3334, 5008, false, true], [3344, -3198, false, true], [3365, 3198, false, true], [3378, -3198, false, true], [3388, 2594, false, true], [3399, 0, false, true], [3411, 0, false, true], [3417, -1629, false, true], [3425, 2112, false, true], [3439, -1267, false, true], [3456, -543, false, true], [3461, 1508, false, true], [3472, 0, false, true], [3492, 0, false, true], [3497, 1387, false, true], [3506, -784, false, true], [3519, 1387, false, true], [3538, -1629, false, true], [3549, 1507, false, true], [3559, 0, false, true], [3571, 0, false, true], [3578, -1267, false, true], [3587, 1750, false, true], [3597, -663, false, true], [3606, 0, false, true]], [2, 1, 22050, 4742]]
\ No newline at end of file
+[[[381, -1, false, false], [415, -1, true, true], [507, 0, false, true], [695, -1, false, false], [704, -1, true, true], [781, 0, false, true], [905, -1, false, true], [954, 0, true, false], [955, 1, false, true], [981, 1, false, false], [996, 1, true, true], [997, 3, false, false], [1006, 3, true, true], [1010, 4, false, true], [1023, 2, false, true], [1029, -17, false, false], [1035, -3, true, false], [1038, 20, false, false], [1043, 20, true, false], [1044, 24, false, true], [1051, -14, false, true], [1054, 24, true, true], [1056, 35, false, true], [1061, -18, false, true], [1062, -1, true, true], [1068, 0, false, true], [1069, 0, true, false], [1073, 26, false, true], [1078, -31, false, true], [1083, -32, false, true], [1085, -32, true, true], [1088, 19, false, true], [1093, -7, false, true], [1098, -25, false, true], [1101, 12, true, true], [1106, 50, false, true], [1111, -7, false, true], [1113, 42, true, true], [1116, 43, false, true], [1120, 43, true, true], [1121, 60, false, true], [1127, 19, false, true], [1132, -31, false, true], [1134, -31, true, true], [1137, 29, false, false], [1140, 46, true, false], [1142, 74, false, true], [1148, -1, false, true], [1152, -1, true, true], [1153, 39, false, true], [1154, 58, true, false], [1158, 63, false, true], [1163, -33, false, true], [1164, -18, true, false], [1168, -11, false, true], [1172, 104, true, true], [1173, 123, false, true], [1178, 48, false, true], [1183, -169, false, true], [1184, -118, true, false], [1188, -95, false, true], [1190, 42, true, true], [1193, 116, false, true], [1198, -31, false, true], [1201, -9, true, false], [1203, 35, false, true], [1208, -8, false, true], [1211, 28, true, false], [1213, 62, false, true], [1220, -30, false, true], [1225, -47, false, true], [1226, 31, true, true], [1230, 312, false, true], [1235, -23, false, true], [1240, -113, false, true], [1244, -35, true, true], [1245, -16, false, true], [1250, -84, false, true], [1255, -184, false, true], [1260, -263, false, true], [1262, -247, true, true], [1265, -67, false, true], [1267, 449, true, true], [1270, 675, false, true], [1275, -118, false, true], [1280, -734, false, true], [1283, -301, true, true], [1285, 69, false, true], [1286, 186, true, true], [1290, 187, false, true], [1291, 190, true, true], [1295, 191, false, true], [1300, 129, false, true], [1305, 36, false, true], [1310, -102, false, true], [1316, -423, false, true], [1320, -12, true, true], [1321, 239, false, true], [1323, 868, true, true], [1326, 1137, false, true], [1331, 78, false, true], [1332, 385, true, false], [1336, 644, false, true], [1341, -982, false, true], [1344, -982, true, true], [1346, 492, false, true], [1347, 1320, true, false], [1351, 2326, false, true], [1356, -1207, false, true], [1361, -2030, false, true], [1363, -636, true, false], [1366, 96, false, true], [1371, -1622, false, true], [1376, -5870, false, true], [1380, 3015, true, true], [1381, 7267, false, true], [1386, 5363, false, true], [1391, -9285, false, true], [1393, -9284, true, true], [1396, -1016, false, true], [1397, -1016, true, false], [1401, 8421, false, true], [1406, -1550, false, true], [1411, -5930, false, true], [1416, 3711, false, true], [1421, 3526, false, true], [1426, -2202, false, true], [1427, -2128, true, true], [1431, -2127, false, true], [1434, -127, true, true], [1436, 59, false, true], [1439, 59, true, true], [1441, 805, false, true], [1442, 1111, true, false], [1446, 1971, false, true], [1451, -153, false, true], [1456, -3069, false, true], [1461, 1297, false, true], [1465, 2718, true, true], [1466, 3238, false, true], [1471, -851, false, true], [1474, 318, true, false], [1476, 322, false, true], [1481, 40, false, true], [1483, 628, true, true], [1486, 946, false, true], [1488, 2087, true, false], [1491, 2125, false, true], [1496, -2473, false, true], [1501, -3110, false, true], [1506, 1068, false, true], [1511, -2249, false, true], [1516, -8126, false, true], [1518, 10050, true, false], [1521, 10349, false, true], [1526, 2100, false, true], [1531, -12484, false, true], [1536, 6304, false, true], [1537, 8424, true, true], [1541, 8425, false, true], [1546, -9805, false, true], [1549, -5851, true, true], [1551, -1726, false, true], [1553, 3903, true, true], [1556, 5907, false, true], [1561, -418, false, true], [1566, -1093, false, true], [1571, -1518, false, true], [1576, -1772, false, true], [1579, 1486, true, true], [1581, 3506, false, true], [1586, 1845, false, true], [1591, -2447, false, true], [1594, -2447, true, true], [1596, -788, false, true], [1597, -271, true, true], [1601, 1563, false, true], [1602, 2456, true, false], [1606, 3605, false, true], [1611, -924, false, true], [1616, -3898, false, true], [1621, 1915, false, true], [1622, 2133, true, true], [1626, 3027, false, true], [1631, -3591, false, true], [1636, -6775, false, true], [1639, -6775, true, true], [1641, -3075, false, true], [1643, 4202, true, false], [1646, 12914, false, true], [1651, 1286, false, true], [1656, -13268, false, true], [1661, 4576, false, true], [1662, 4577, true, false], [1666, 9582, false, true], [1671, -6253, false, true], [1674, -6253, true, true], [1676, -3911, false, true], [1681, 4452, false, true], [1686, 1620, false, true], [1691, -925, false, true], [1696, -1619, false, true], [1701, -2250, false, true], [1705, 808, true, true], [1706, 2373, false, true], [1707, 3430, true, true], [1711, 3431, false, true], [1716, -1216, false, true], [1721, -2840, false, true], [1726, 688, false, false], [1728, 1427, true, false], [1731, 4745, false, true], [1736, -410, false, true], [1741, -4856, false, true], [1745, -1471, true, true], [1746, -28, false, true], [1748, 2099, true, true], [1751, 3542, false, true], [1756, -5260, false, true], [1761, -7958, false, true], [1766, 11884, false, true], [1771, 3655, false, true], [1776, -12376, false, true], [1779, -3148, true, true], [1781, 3510, false, true], [1782, 5208, true, false], [1786, 7993, false, true], [1791, -5780, false, true], [1793, -5695, true, true], [1796, -1573, false, true], [1798, 2293, true, true], [1801, 3928, false, true], [1806, 258, false, true], [1811, -1185, false, true], [1814, -632, true, false], [1816, -331, false, true], [1821, -2263, false, true], [1825, 974, true, true], [1826, 1803, false, true], [1828, 2893, true, true], [1831, 3469, false, true], [1836, -509, false, true], [1841, -2509, false, true], [1844, -1410, true, true], [1846, 18, false, true], [1851, 3939, false, true], [1856, 986, false, true], [1861, -4284, false, true], [1864, -4258, true, true], [1866, -2391, false, true], [1868, 746, true, true], [1871, 1669, false, true], [1876, -7068, false, true], [1878, -6259, true, true], [1881, 3634, false, true], [1882, 6255, true, false], [1886, 8552, false, true], [1891, -8825, false, true], [1895, -8259, true, true], [1896, -4558, false, true], [1898, 5950, true, true], [1901, 10200, false, true], [1906, 1182, false, true], [1911, -7337, false, true], [1916, 2716, false, true], [1917, 3927, true, false], [1921, 3935, false, true], [1926, -1736, false, true], [1928, -1718, true, false], [1931, -1086, false, true], [1936, -1716, false, true], [1939, -1650, true, true], [1941, 479, false, true], [1943, 3276, true, false], [1946, 3291, false, true], [1951, 1038, false, true], [1956, -2078, false, true], [1959, -576, true, true], [1961, 348, false, true], [1963, 348, true, true], [1966, 2117, false, true], [1971, 1015, false, true], [1976, -1002, false, true], [1981, -4158, false, true], [1986, -654, false, true], [1991, -2864, false, true], [1996, -3063, false, true], [1997, -3062, true, false], [2001, 9771, false, true], [2006, -1155, false, true], [2011, -10433, false, true], [2016, 5770, false, true], [2017, 6659, true, true], [2021, 6660, false, true], [2026, -6324, false, true], [2029, -3857, true, true], [2031, -700, false, true], [2032, -700, true, false], [2036, 4652, false, true], [2041, -368, false, true], [2046, -1961, false, true], [2047, -1741, true, false], [2051, -1736, false, true], [2054, -1044, true, true], [2056, -346, false, true], [2061, 2806, false, true], [2066, 1773, false, true], [2071, -482, false, true], [2076, -1051, false, true], [2077, -288, true, true], [2081, 593, false, true], [2082, 595, true, false], [2086, 2510, false, true], [2091, 252, false, true], [2096, -4964, false, true], [2098, -4792, true, true], [2101, -1974, false, true], [2102, -938, true, false], [2106, -812, false, true], [2111, -3704, false, true], [2114, 7339, true, true], [2116, 9074, false, true], [2121, 1613, false, true], [2126, -11653, false, true], [2130, -77, true, true], [2131, 3737, false, true], [2132, 4344, true, false], [2136, 9163, false, true], [2141, -5674, false, true], [2144, -5673, true, true], [2146, -3145, false, true], [2151, 5437, false, true], [2156, 903, false, true], [2161, -2692, false, true], [2163, -1992, true, true], [2166, -1530, false, true], [2168, -929, true, false], [2171, -926, false, true], [2173, -629, true, true], [2176, 2473, false, true], [2177, 3353, true, false], [2181, 3666, false, true], [2186, -1072, false, true], [2191, -1767, false, true], [2196, 1131, false, true], [2197, 1136, true, false], [2201, 3471, false, true], [2206, -460, false, true], [2211, -4945, false, true], [2213, -4833, true, true], [2216, -1906, false, true], [2217, -1021, true, false], [2221, -516, false, true], [2226, -5033, false, true], [2230, 5812, true, true], [2231, 8524, false, true], [2236, 4360, false, true], [2241, -11566, false, true], [2245, -4079, true, true], [2246, 77, false, true], [2247, 78, true, false], [2251, 10643, false, true], [2256, -3726, false, true], [2261, -5204, false, true], [2266, 5977, false, true], [2271, 2855, false, true], [2276, -4470, false, true], [2277, -4470, true, true], [2281, -2077, false, true], [2283, -2077, true, false], [2286, 1223, false, true], [2291, 553, false, true], [2296, 2568, false, true], [2301, 1482, false, true], [2306, -1260, false, true], [2309, -1234, true, true], [2311, -752, false, true], [2316, 2330, false, true], [2321, 1584, false, true], [2326, -4190, false, true], [2330, -4190, true, true], [2331, -4048, false, true], [2332, -4046, true, false], [2336, -389, false, true], [2341, -3799, false, true], [2345, 5084, true, true], [2346, 7359, false, true], [2351, 5219, false, true], [2356, -9866, false, true], [2358, -9382, true, true], [2361, -2399, false, true], [2363, 6229, true, true], [2366, 8575, false, true], [2371, 291, false, true], [2376, -5076, false, true], [2381, 2962, false, true], [2382, 3400, true, false], [2386, 3405, false, true], [2391, -3207, false, true], [2394, -3207, true, true], [2396, -2410, false, true], [2401, 791, false, true], [2406, 716, false, true], [2407, 1001, true, true], [2411, 2064, false, true], [2412, 2070, true, false], [2416, 2845, false, true], [2421, -1399, false, true], [2426, -2140, false, true], [2429, 958, true, true], [2431, 2754, false, true], [2436, 2388, false, true], [2441, -3569, false, true], [2446, -5153, false, true], [2447, -5153, true, false], [2451, -1910, false, true], [2456, -2319, false, true], [2459, 3389, true, true], [2461, 7651, false, true], [2466, 4826, false, true], [2471, -9930, false, true], [2473, -9153, true, true], [2476, -2187, false, true], [2478, 5677, true, true], [2481, 7925, false, true], [2486, 602, false, true], [2491, -3211, false, true], [2496, 1922, false, true], [2501, 1536, false, true], [2506, -1927, false, true], [2509, -1361, true, true], [2511, -924, false, true], [2514, 158, true, false], [2516, 163, false, true], [2521, 44, false, true], [2523, 1776, true, true], [2526, 2591, false, true], [2531, 2027, false, true], [2536, -853, false, true], [2541, -1195, false, true], [2545, 16, true, true], [2546, 390, false, true], [2551, 1341, false, true], [2556, -2259, false, true], [2561, -6786, false, true], [2563, -6442, true, true], [2566, -1354, false, true], [2567, -1351, true, false], [2571, 8494, false, true], [2576, 1877, false, true], [2581, -8428, false, true], [2585, -2633, true, true], [2586, -850, false, true], [2589, 4521, true, true], [2591, 5129, false, true], [2596, -625, false, true], [2599, -624, true, true], [2601, 660, false, true], [2603, 2525, true, true], [2606, 3276, false, true], [2611, -2133, false, true], [2616, -2965, false, true], [2621, 1570, false, true], [2622, 1593, true, true], [2626, 1594, false, true], [2631, -2090, false, true], [2633, -1925, true, true], [2636, 550, false, true], [2637, 558, true, false], [2641, 3221, false, true], [2646, 678, false, true], [2651, -456, false, true], [2652, -336, true, false], [2656, -39, false, true], [2661, -204, false, true], [2664, -204, true, true], [2666, 10, false, true], [2671, -2678, false, true], [2676, -5992, false, true], [2678, -5992, true, true], [2681, -1107, false, true], [2682, -1106, true, false], [2686, 8102, false, true], [2691, 1457, false, true], [2696, -7883, false, true], [2700, -2200, true, true], [2701, -406, false, true], [2706, 5102, false, true], [2711, -1064, false, true], [2714, -215, true, true], [2716, 434, false, true], [2718, 434, true, false], [2721, 3400, false, true], [2726, -1876, false, true], [2731, -3135, false, true], [2734, 606, true, true], [2736, 2244, false, true], [2741, 1421, false, true], [2746, -2387, false, true], [2748, -2293, true, true], [2751, 874, false, true], [2752, 875, true, false], [2756, 3226, false, true], [2761, 603, false, true], [2766, -623, false, true], [2771, -745, false, true], [2774, -617, true, false], [2776, -115, false, true], [2780, 745, true, true], [2781, 853, false, true], [2786, -3224, false, true], [2791, -6665, false, true], [2793, -6638, true, true], [2796, 342, false, true], [2797, 343, true, false], [2801, 9396, false, true], [2806, 179, false, true], [2811, -9107, false, true], [2814, -3716, true, true], [2816, 400, false, true], [2817, 400, true, false], [2821, 5585, false, true], [2826, -1750, false, true], [2829, -443, true, true], [2831, 675, false, true], [2833, 1911, true, false], [2836, 3901, false, true], [2841, -3167, false, true], [2845, -3167, true, true], [2846, -2948, false, true], [2851, 3570, false, true], [2856, -48, false, true], [2861, -2788, false, true], [2865, 496, true, true], [2866, 1870, false, true], [2867, 2788, true, false], [2871, 3111, false, true], [2876, 102, false, true], [2881, -340, false, true], [2882, -308, true, true], [2886, -307, false, true], [2891, -422, false, true], [2894, 754, true, true], [2896, 1059, false, true], [2901, -3416, false, true], [2906, -6969, false, true], [2908, -6858, true, true], [2911, 662, false, true], [2913, 9440, true, false], [2916, 9462, false, true], [2921, -94, false, true], [2926, -9262, false, true], [2929, -2538, true, true], [2931, 802, false, true], [2932, 802, true, false], [2936, 5329, false, true], [2941, -1765, false, true], [2944, -444, true, true], [2946, 915, false, true], [2948, 3794, true, false], [2951, 3816, false, true], [2956, -3535, false, true], [2960, -3535, true, true], [2961, -2969, false, true], [2966, 3603, false, true], [2971, 278, false, true], [2976, -2326, false, true], [2980, 1241, true, true], [2981, 2746, false, true], [2986, 2477, false, true], [2991, -555, false, true], [2995, -554, true, true], [2996, -169, false, true], [2997, -169, true, false], [3001, 828, false, true], [3006, -341, false, true], [3010, 9, true, true], [3011, 232, false, true], [3016, -2528, false, true], [3021, -6271, false, true], [3024, -5955, true, true], [3026, -1132, false, true], [3027, -1132, true, false], [3031, 8993, false, true], [3036, 1567, false, true], [3041, -8122, false, true], [3044, -4042, true, true], [3046, -528, false, true], [3047, -527, true, false], [3051, 5421, false, true], [3056, -1431, false, false], [3059, -1429, true, true], [3061, -249, false, true], [3062, -243, true, false], [3066, 4362, false, true], [3071, -2295, false, true], [3076, -4135, false, true], [3079, 259, true, true], [3081, 2891, false, true], [3086, 1532, false, true], [3091, -1921, false, true], [3092, -1921, true, true], [3096, 1454, false, true], [3097, 2219, true, false], [3101, 2224, false, true], [3106, 31, false, true], [3111, -187, false, true], [3112, 424, true, false], [3116, 683, false, true], [3121, -149, false, true], [3125, -149, true, true], [3126, 137, false, true], [3131, -2137, false, true], [3136, -5139, false, true], [3140, -5138, true, true], [3141, -4377, false, true], [3143, -4377, true, false], [3146, 7853, false, true], [3151, 5099, false, true], [3156, -7696, false, true], [3160, -4726, true, true], [3161, -3237, false, true], [3166, 4369, false, true], [3171, -458, false, true], [3175, -457, true, true], [3176, 85, false, true], [3177, 661, true, true], [3181, 3673, false, true], [3186, -1046, false, true], [3191, -3987, false, true], [3192, -3987, true, true], [3196, 1314, false, true], [3197, 2624, true, true], [3201, 2625, false, true], [3206, -1061, false, true], [3210, -1061, true, true], [3211, -777, false, true], [3212, -777, true, false], [3216, 3747, false, true], [3221, 853, false, true], [3226, -1900, false, true], [3228, -32, true, true], [3231, 855, false, true], [3235, 1564, true, true], [3236, 1662, false, true], [3241, -293, false, true], [3246, -583, false, true], [3251, -4699, false, true], [3256, -6548, false, true], [3260, 2923, true, true], [3261, 6612, false, true], [3262, 8155, true, true], [3266, 8156, false, true], [3271, -4904, false, true], [3276, -5465, false, true], [3281, 2388, false, true], [3286, 1617, false, true], [3291, -374, false, true], [3295, 1498, true, true], [3296, 2546, false, true], [3301, 2355, false, true], [3306, -3719, false, true], [3310, -3719, true, true], [3311, -2310, false, true], [3313, -1453, true, false], [3316, 4103, false, true], [3321, 400, false, true], [3326, -2473, false, true], [3329, 298, true, true], [3331, 2166, false, true], [3332, 2253, true, false], [3336, 2257, false, true], [3341, -923, false, true], [3344, -711, true, false], [3346, 441, false, true], [3351, 110, false, true], [3356, 66, false, true], [3360, 1158, true, true], [3361, 1345, false, true], [3366, -2001, false, true], [3371, -6014, false, true], [3375, -6014, true, true], [3376, -4758, false, true], [3379, 8353, true, true], [3381, 8845, false, true], [3386, 5808, false, true], [3391, -7709, false, true], [3394, -5769, true, true], [3396, -3160, false, true], [3401, 4229, false, true], [3406, -77, false, true], [3410, 281, true, true], [3411, 424, false, true], [3414, 1764, true, true], [3416, 2679, false, true], [3421, -1048, false, true], [3426, -2873, false, true], [3430, -738, true, true], [3431, 380, false, true], [3433, 2124, true, true], [3436, 2125, false, true], [3441, -657, false, true], [3445, -656, true, false], [3446, -332, false, true], [3449, 1166, true, true], [3451, 1669, false, true], [3456, 369, false, true], [3458, 752, true, true], [3461, 870, false, true], [3466, 234, false, true], [3471, -1176, false, true], [3475, 182, true, true], [3476, 1040, false, true], [3477, 1455, true, true], [3481, 1456, false, true], [3486, -3731, false, true], [3491, -6899, false, true], [3492, -6277, true, true], [3496, -1035, false, true], [3498, 7376, true, false], [3501, 7382, false, true], [3506, 2954, false, true], [3511, -7192, false, true], [3512, -7192, true, true], [3516, -1978, false, true], [3521, 4718, false, true], [3526, -226, false, true], [3529, -225, true, true], [3531, -111, false, true], [3536, 2999, false, true], [3541, -1885, false, true], [3546, -3614, false, true], [3550, 413, true, true], [3551, 1565, false, true], [3553, 2505, true, false], [3556, 2508, false, true], [3561, -805, false, true], [3565, -805, true, true], [3566, -36, false, true], [3567, 556, true, false], [3571, 1525, false, true], [3576, -690, false, true], [3578, -690, true, true], [3581, 454, false, true], [3586, 2181, false, true], [3591, 217, false, true], [3596, -181, false, true], [3601, 1108, false, true], [3606, -2177, false, true], [3611, -6482, false, true], [3612, -6482, true, true], [3616, -2603, false, true], [3619, 7468, true, true], [3621, 8187, false, true], [3626, 4105, false, true], [3631, -6849, false, true], [3633, -6574, true, true], [3636, -1685, false, true], [3638, 1627, true, true], [3641, 3248, false, true], [3646, -1520, false, true], [3649, -198, true, true], [3651, 1223, false, true], [3653, 1223, true, false], [3656, 4683, false, true], [3661, -2231, false, true], [3666, -5407, false, true], [3670, -496, true, true], [3671, 1366, false, true], [3672, 1529, true, false], [3676, 4044, false, true], [3681, -832, false, true], [3686, -1812, false, true], [3688, 791, true, true], [3691, 2199, false, true], [3696, 154, false, true], [3701, -2555, false, true], [3706, 2292, false, true], [3711, 2207, false, true], [3716, -1426, false, true], [3720, 407, true, true], [3721, 971, false, true], [3722, 1187, true, true], [3726, 1188, false, true], [3731, -4944, false, true], [3736, -6989, false, true], [3740, -317, true, true], [3741, 3182, false, true], [3743, 8401, true, true], [3746, 8402, false, true], [3751, -788, false, true], [3756, -6881, false, true], [3759, -2301, true, true], [3761, 105, false, true], [3762, 118, true, false], [3766, 3259, false, true], [3771, -1174, false, true], [3773, -178, true, true], [3776, 629, false, true], [3778, 2791, true, false], [3781, 4019, false, true], [3786, -2160, false, true], [3791, -3951, false, true], [3796, 1939, false, true], [3797, 2149, true, true], [3801, 2150, false, true], [3806, -1456, false, true], [3808, -1293, true, true], [3811, 642, false, true], [3812, 728, true, false], [3816, 2061, false, true], [3821, -2611, false, true], [3826, -2885, false, true], [3831, 3970, false, true], [3832, 3972, true, true], [3836, 3973, false, true], [3841, -2036, false, true], [3845, -2036, true, true], [3846, -1398, false, true], [3848, 753, true, false], [3851, 759, false, true], [3856, -2342, false, true], [3861, -4870, false, true], [3864, -3835, true, true], [3866, -1410, false, true], [3868, 360, true, false], [3871, 6375, false, true], [3876, 3435, false, true], [3881, -5309, false, true], [3885, -3466, true, true], [3886, -2376, false, true], [3891, 3000, false, true], [3896, -250, false, true], [3901, -1247, false, true], [3904, 1702, true, true], [3906, 3109, false, true], [3911, 1630, false, true], [3916, -3810, false, true], [3919, -3808, true, true], [3921, -1667, false, true], [3926, 3347, false, true], [3931, 1108, false, true], [3936, -1479, false, true], [3938, 209, true, true], [3941, 671, false, true], [3946, -171, false, true], [3951, -2071, false, true], [3954, -294, true, true], [3956, 664, false, true], [3957, 664, true, false], [3961, 2807, false, true], [3966, 1188, false, true], [3971, 275, false, true], [3976, 53, false, true], [3981, -555, false, true], [3986, -1057, false, true], [3991, -2463, false, true], [3996, -4256, false, true], [3998, -4256, true, true], [4001, 1200, false, true], [4002, 3929, true, true], [4006, 6440, false, true], [4011, 2094, false, true], [4016, -4863, false, true], [4018, -4863, true, true], [4021, -3480, false, true], [4023, -2409, true, false], [4026, 1765, false, true], [4031, 1221, false, true], [4036, -467, false, true], [4039, 1852, true, true], [4041, 3009, false, true], [4046, 1139, false, true], [4051, -3627, false, true], [4055, -1808, true, true], [4056, -859, false, true], [4058, 1371, true, true], [4061, 2607, false, true], [4066, 320, false, true], [4071, -1404, false, true], [4075, -209, true, true], [4076, 210, false, true], [4081, 176, false, true], [4086, -304, false, true], [4088, -287, true, true], [4091, 518, false, true], [4092, 834, true, false], [4096, 1061, false, true], [4101, 42, false, true], [4106, -960, false, true], [4108, -382, true, true], [4111, -66, false, true], [4113, 757, true, false], [4116, 763, false, true], [4121, -75, false, true], [4125, -74, true, true], [4126, -55, false, true], [4131, 759, false, true], [4136, 9, false, true], [4141, -2213, false, true], [4146, -3223, false, true], [4148, -3223, true, true], [4151, 711, false, true], [4152, 2272, true, true], [4156, 3923, false, true], [4161, 1730, false, true], [4166, -2623, false, true], [4170, -2623, true, true], [4171, -2397, false, true], [4173, -265, true, true], [4176, 417, false, true], [4181, 204, false, false], [4185, 249, true, true], [4186, 416, false, true], [4189, 2336, true, true], [4191, 3084, false, true], [4196, 760, false, true], [4201, -3556, false, true], [4204, -3021, true, true], [4206, -2077, false, true], [4211, 1742, false, true], [4216, 1563, false, true], [4221, 246, false, true], [4224, 247, true, true], [4226, 355, false, true], [4231, 162, false, true], [4236, -794, false, true], [4241, -1400, false, true], [4242, -985, true, true], [4246, 364, false, true], [4247, 366, true, false], [4251, 1806, false, true], [4256, 56, false, true], [4261, -1192, false, true], [4264, -789, true, true], [4266, -419, false, true], [4271, -420, false, true], [4276, -526, false, true], [4280, 145, true, true], [4281, 331, false, true], [4286, 966, false, true], [4291, 62, false, true], [4296, -551, false, true], [4300, 150, true, true], [4301, 402, false, true], [4306, 96, false, true], [4311, -430, false, true], [4312, -429, true, true], [4316, 406, false, true], [4317, 523, true, false], [4321, 887, false, true], [4326, 51, false, true], [4331, -599, false, true], [4333, -599, true, true], [4336, -137, false, true], [4338, 376, true, true], [4341, 632, false, true], [4342, 663, true, false], [4346, 707, false, true], [4351, 223, false, true], [4356, -725, false, true], [4361, -1610, false, true], [4363, -1609, true, true], [4366, -794, false, true], [4368, 95, true, true], [4371, 635, false, true], [4372, 778, true, true], [4376, 779, false, true], [4381, -364, false, true], [4385, -363, true, true], [4386, -292, false, true], [4389, 549, true, true], [4391, 660, false, true], [4396, -269, false, true], [4401, -1197, false, true], [4405, -207, true, true], [4406, 192, false, true], [4408, 862, true, true], [4411, 1186, false, true], [4416, 210, false, true], [4421, -703, false, true], [4423, -703, true, true], [4426, -302, false, true], [4427, -302, true, false], [4431, 143, false, true], [4436, 68, false, true], [4440, 73, true, true], [4441, 200, false, true], [4442, 278, true, true], [4446, 332, false, true], [4451, 319, false, true], [4455, 323, true, true], [4456, 383, false, true], [4461, -45, false, true], [4466, -312, false, true], [4469, -113, true, true], [4471, 15, false, true], [4474, 234, true, true], [4476, 235, false, true], [4481, 49, false, true], [4486, -97, false, true], [4487, -65, true, false], [4491, -60, false, true], [4494, -60, true, true], [4496, -46, false, true], [4501, -171, false, true], [4502, -151, true, true], [4506, -150, false, true], [4511, -186, false, true], [4513, -39, true, true], [4516, 115, false, true], [4518, 328, true, true], [4521, 329, false, true], [4526, -164, false, true], [4531, -621, false, true], [4532, -431, true, true], [4536, 282, false, true], [4537, 376, true, false], [4541, 682, false, true], [4546, -597, false, true], [4550, -597, true, true], [4551, -538, false, true], [4556, 606, false, true], [4561, 167, false, true], [4566, -592, false, true], [4570, -140, true, true], [4571, -19, false, true], [4576, 545, false, true], [4581, 138, false, true], [4586, -274, false, true], [4590, -273, true, true], [4591, -152, false, true], [4592, 46, true, true], [4596, 47, false, true], [4598, 195, true, false], [4601, 217, false, true], [4605, 224, true, false], [4606, 236, false, true], [4611, -43, false, true], [4616, -349, false, true], [4621, -358, false, true], [4626, 41, false, true], [4627, 134, true, true], [4631, 251, false, true], [4636, 188, false, true], [4641, -28, false, true], [4647, -95, false, true], [4652, -146, false, true], [4654, -146, true, true], [4657, -143, false, true], [4660, -36, true, true], [4662, 84, false, true], [4663, 87, true, false], [4667, 242, false, true], [4672, 183, false, true], [4677, 43, false, true], [4682, -7, false, true], [4692, -162, false, true], [4696, 37, true, true], [4697, 103, false, true], [4698, 154, true, true], [4703, 312, false, true], [4708, 47, false, true], [4713, -154, false, true], [4717, -66, true, true], [4718, -18, false, true], [4720, 117, true, true], [4723, 118, false, true], [4728, -124, false, true], [4733, -258, false, true], [4735, -165, true, true], [4738, 19, false, true], [4739, 20, true, false], [4743, 167, false, true], [4751, -189, false, true], [4753, -183, true, true], [4756, -80, false, true], [4759, 51, true, true], [4761, 53, false, true], [4766, -107, false, true], [4772, -113, false, true], [4774, 19, true, true], [4777, 64, false, true], [4791, 32, false, true], [4797, 22, false, true], [4803, -53, false, true], [4812, 96, false, true], [4817, 33, false, true], [4824, -71, false, true], [4828, -36, true, false], [4832, -21, false, true], [4840, -37, false, true], [4842, -10, true, true], [4848, 4, false, true], [4859, -1, false, true], [4865, 5, true, true], [4878, 6, false, true], [4895, -2, false, true], [4909, -3, false, true], [4917, -2, true, false], [4925, 4, false, true], [4939, -10, false, false], [4948, -2, true, false], [4955, 9, false, true], [4965, 2, false, true], [4985, -4, false, false], [5000, -4, true, false], [5004, 4, false, true], [5022, -5, false, true], [5027, -2, true, true], [5038, -1, false, true], [5057, -1, false, true], [5081, -1, false, true], [5083, 2, true, true], [5104, 3, false, true], [5121, -2, false, true], [5124, -1, true, true], [5145, 1, false, false], [5165, 1, true, true], [5166, 2, false, true], [5181, 2, false, true]], [2, 1, 22050, 5184]]
\ No newline at end of file
--- audapa-1.orig/a
+++ audapa-1/a
@@ -5,20 +5,4 @@ else
 z="python"
 fi
 
-if [ -n "$2" ]; then
-x=$2
-else
-x=0
-fi
-
-if [ -z "$GTK_DEBUG" ]; then
-if [ -n "$3" ]; then
-GDK_BACKEND=broadway BROADWAY_DISPLAY=:$x GTK_DEBUG=$3 $z -m audapa.main
-exit
-fi
-fi
-
-if [ -n "$3" ]; then
-GTK_DEBUG+=",$3"
-fi
-GDK_BACKEND=broadway BROADWAY_DISPLAY=:$x $z -m audapa.main
+${z} -m audapa.main
--- /dev/null
+++ audapa-1/arh/pub
@@ -0,0 +1,10 @@
+
+~/test/debinit "${1}" && \
+~/test/pub deb && \
+~/test/keyring2 && \
+~/test/deb && \
+~/test/publp && \
+~/test/publp2 && \
+~/test/lp 0 kinetic && \
+~/test/lp x kinetic
+# && ~/test/pypi
--- audapa-1.orig/arh/re
+++ /dev/null
@@ -1,13 +0,0 @@
-
-#Requires:      libportaudio2\n
-#Requires:      gir1.2-gtk-4.0\nRequires:      gir1.2-glib-2.0\nRequires:      python3-gi\n
-
-ver=`cat ${1}/v2`
-name=audapa
-
-sed '/^#Requires.*CompressedFileNames.*$/i Requires:      libgtk-4.so.1\nRequires:      python3-appdirs\nRequires:      python3-pyaudio\nRequires:      python3-cairo\n' text > text2 && \
-mkdir -p ./usr/lib64/python3.10/site-packages && \
-sed "/^%doc.*copyright.*$/a %ghost \"/usr/lib64/python3.10/site-packages/${name}-${ver}.egg-info\"\n%ghost \"/usr/lib64/python3.10/site-packages/${name}\"\n" text2 > text3 && \
-printf "\n%%post\nln -s /usr/lib/python3.10/dist-packages/${name}-${ver}.egg-info /usr/lib64/python3.10/site-packages/${name}-${ver}.egg-info\nln -s /usr/lib/python3.10/dist-packages/${name} /usr/lib64/python3.10/site-packages/${name}\n" >> text3 && \
-rm text2 && \
-sudo mv text3 text
--- audapa-1.orig/audapa/arc.py
+++ audapa-1/audapa/arc.py
@@ -5,7 +5,7 @@ from . import point
 
 import math
 
-def draw(cr,x0,y0,x1,y1,convex):
+def draw(cr,x0,y0,x1,y1,concav):
 	land=drawscroll.landscape
 	if land:
 		x=x1-x0
@@ -14,12 +14,12 @@ def draw(cr,x0,y0,x1,y1,convex):
 		x=abs(x1-x0)
 		y=y1-y0
 	c,raddif=radius(x,y)
-	xc,yc,rstart,rend=center(x0,y0,x1,y1,convex,x,y,c,raddif,land)
+	xc,yc,rstart,rend=center(x0,y0,x1,y1,concav,x,y,c,raddif,land)
 	#will be a heavy cpu load with radsmall when moveing an inter up a stable at angle 0 cr.arc(xc,yc,c,rstart+radsmall,rend-radsmall)
 	cr.arc(xc,yc,c,rstart,rend)
-def center(x0,y0,x1,y1,convex,x,y,c,raddif,land=True):
+def center(x0,y0,x1,y1,concav,x,y,c,raddif,land=True):
 	if land:
-		if convex: #convex on land
+		if concav: #concav on land
 			if x>y:
 				if y0<y1:
 					#...
@@ -91,7 +91,7 @@ def center(x0,y0,x1,y1,convex,x,y,c,radd
 					a=0
 					b=raddif
 	else:
-		if convex:
+		if concav:
 			if x>y:
 				if x0<x1:
 					#...
--- audapa-1.orig/audapa/arcbutton.py
+++ audapa-1/audapa/arcbutton.py
@@ -17,15 +17,16 @@ def conv_conc(b,d):
 	p=point.lastselect
 	pnts=points.points
 	ix=pnts.index(p)
-	b._set_text_(set(p))
 	if pnts[ix]._inter_ or (ix<(len(pnts)-1) and pnts[ix+1]._inter_):
 		if p.get_parent() or pnts[ix+1].get_parent():
 			arc_change(p,pnts[ix+1])
+			b._set_text_(set(p))
 			return
-	p._convex_=False if p._convex_ else True
+	p._concav_=False if p._concav_ else True
+	b._set_text_(set(p))
 
 def set(p):
-	if p._convex_:
+	if p._concav_:
 		return chr(0x23dc)
 	else:
 		return chr(0x23dd)
@@ -39,7 +40,7 @@ def arc_change(p0,p1):
 	graph.clearline(cr,p0,p1,w,h)
 	cr.set_operator(ope)
 	#
-	p0._convex_=False if p0._convex_ else True
+	p0._concav_=False if p0._concav_ else True
 	#
 	co=Gdk.RGBA()
 	if co.parse(sets.get_fgcolor2()):
--- /dev/null
+++ audapa-1/audapa/automation.py
@@ -0,0 +1,421 @@
+
+from gi.repository import Gtk
+
+import os
+import pathlib
+import json
+import time
+
+from . import sets   #colorLabel,...
+from . import play   #wavefile,entry
+from . import draw   #samples,...
+from . import points #points,...
+from . import save   #apply,...
+from . import point  #lastselect
+from . import move   #saved
+from . import pbox   #close
+
+default_toler="1"
+toler=Gtk.EntryBuffer(text=default_toler)
+
+#there is a min dist in Settigs, why another one? That is for manually placed points.
+default_mdist="5"
+mdist=Gtk.EntryBuffer(text=default_mdist)
+
+stop=Gtk.CheckButton()
+default_stop="100"
+stop_after=Gtk.EntryBuffer(text=default_stop)
+
+print_test=Gtk.CheckButton()
+tests_str1="dif sum "
+tests_str2="points len "
+tests_str3="phase1/orig "
+
+skip_phase2=Gtk.CheckButton()
+pause=Gtk.CheckButton()
+default_pause="100"
+pause_points=Gtk.EntryBuffer(text=default_pause)
+pause_points_minimum=1
+
+#tests_time
+
+def data(b,combo):
+	box=Gtk.Grid(hexpand=True)
+
+	box.attach(sets.colorLabel("Tolerance"),0,0,2,1)
+	box.attach(sets.colorEntry(toler),2,0,1,1)
+	box.attach(sets.colorLabel("‰"),3,0,1,1)
+
+	box.attach(sets.colorLabel("Min distance"),0,1,2,1)
+	box.attach(sets.colorEntry(mdist),2,1,2,1)
+
+	box.attach(sets.colorLabel("Stop after N non-inter points"),0,2,1,1)
+	box.attach(stop,1,2,1,1)
+	box.attach(sets.colorEntry(stop_after),2,2,2,1)
+
+	box.attach(sets.colorLabel("Skip phase 2"),0,3,2,1)
+	box.attach(skip_phase2,2,3,2,1)
+
+	common_options(box,4)
+
+	pos=6
+	if fastpath(False):
+		box.attach(sets.colorButton("Fast Resume",restore,"Restore",combo),0,pos,4,1)
+		pos+=1
+
+	box.attach(sets.colorButton("Cancel",cancel,"Abort",combo),0,pos,4,1)
+	box.attach(sets.colorButton("Done",done,"Apply",combo),0,pos+1,4,1)
+	combo[0].set_child(box)
+
+def common_options(box,column):
+	box.attach(sets.colorLabel("Verbosity"),0,column,2,1)
+	box.attach(print_test,2,column,2,1)
+	column+=1
+
+	box.attach(sets.colorLabel("At phase 2, pause every N points"),0,column,1,1)
+	box.attach(pause,1,column,1,1)
+	box.attach(sets.colorEntry(pause_points),2,column,2,1)
+
+def cancel(b,combo):
+	combo[0].set_child(combo[1])
+
+def done(b,combo):
+	a=toler.get_text()
+	abool=a.isdigit()
+	b=mdist.get_text()
+	bbool=b.isdigit()
+	c=stop_after.get_text()
+	cbool=c.isdigit()
+	d=pause_points.get_text()
+	dbool=d.isdigit()
+	if abool and bbool and cbool and dbool:
+		a=int(a)
+		b=int(b)
+		c=int(c)
+		d=int(d)
+		if a>1000:
+			toler.set_text("1000",-1)
+		elif b==0:
+			mdist.set_text("1",-1)
+		elif c<2:
+			stop_after.set_text("2",-1)
+		elif d<pause_points_minimum:
+			pause_points.set_text(str(pause_points_minimum),-1)
+		else:
+			a=round(pow(2,8*play.wavefile.getsampwidth())*a/1000)
+
+			points.points.clear()
+
+			pack=worker(a,b,c,d,draw.samples.copy(),combo)
+			if pack!=None:
+				waiter(combo,pack)
+	else:
+		if not abool:
+			toler.set_text(default_toler,-1)
+		if not bbool:
+			mdist.set_text(default_mdist,-1)
+		if not cbool:
+			stop_after.set_text(default_stop,-1)
+		if not dbool:
+			pause_points.set_text(default_pause,-1)
+
+def precalculate1():
+	points.add(0,0,False,True,0) #p1
+	points.add(0,0,False,True,1) #p2
+def precalculate2():
+	points.add(0,0,False,True,2) #p3
+	points.points[1]._inter_=True
+
+#None/continue_pack
+def calculate(samples,length,tolerance,min_dist,max,pause_after,samplesorig):
+	#exclude blank extremes
+	for i in range(0,length): #not including length element
+		if samples[i]!=0:
+			break
+	for j in range(length-1,-1,-1):
+		if samples[j]!=0:
+			break
+	j=j+1
+
+	if (i+min_dist+1)<j: #only if there is a length of min 2 points
+		pnts=[]
+		pnts.append(points.newp(i,samples[i],False,True))
+
+		precalculate1()
+
+		if print_test.get_active():
+			tests=0
+			tests2=0
+			tests3=0
+
+		while (i+min_dist+1)<j:  #j can be length
+			points.points[0]._offset_=i
+			points.points[0]._height_=samplesorig[i]
+
+			for k in range(i+min_dist+1,j):
+				points.points[1]._offset_=k
+				points.points[1]._height_=samplesorig[k]
+				save.apply() #or save.apply_line, will exclude at right
+				newdif=0
+				for l in range(i,k):
+					newdif+=abs(samples[l]-samplesorig[l])
+
+				if newdif>tolerance: #get back one place
+					k=k-1
+					samples[k]=samplesorig[k]  #this can be restored at last, why not there? who cares, too much code
+					points.points[1]._offset_=k
+					points.points[1]._height_=samplesorig[k]
+					save.apply()
+					if print_test.get_active():
+						newdif=0
+						for l in range(i,k):
+							newdif+=abs(samples[l]-samplesorig[l])
+					break
+			pnts.append(points.newp(k,samplesorig[k],False,True)) #'struct' object has no attribute 'copy'
+
+			if print_test.get_active():
+				tests+=newdif
+				tests2+=k-i
+				for l in range(i,k):
+					tests3+=abs(samplesorig[l])
+
+			if stop.get_active():
+				if len(pnts)==max:
+					break
+
+			i=k
+		if print_test.get_active():
+			print(tests_str1+str(tests))  #the two tolerances at start will trade precision for more code
+			print(tests_str2+str(len(pnts)))
+			print(tests_str3+str(tests/tests3))
+			print("avg dist "+str(tests2/len(pnts)))
+			testspack=[0,0,0,0,0]
+		else:
+			testspack=[]
+
+		#phase 2 apply arcs for better match
+		pnts2=pnts.copy()
+		if skip_phase2.get_active()==False:
+			precalculate2()
+
+			i,ix,is_done=calculate_resume(pnts,pnts2,samples,samplesorig,0,0,pause_after,testspack)
+			if is_done==False:
+				return [pnts,pnts2,samples,samplesorig,i,ix,pause_after,testspack]
+
+		points.points=pnts2
+	return None
+
+def tests_phase2(pnts2,testspack,remainings):
+	print()
+	print(tests_str1+str(testspack[0]))
+	print(tests_str2+str(len(pnts2)))
+	p1_o=testspack[2]/testspack[1]
+	print(tests_str3+str(p1_o))
+	d_o=testspack[0]/testspack[1]
+	print("dif/orig "+str(d_o))
+	print(" change "+str(d_o-p1_o))
+
+	t=time.time()-tests_time
+	testspack[3]+=1
+	testspack[4]+=t
+	print("seconds/pauses "+str(int(testspack[4]/testspack[3]))) #time.time() is float
+	if remainings:
+		print("remaining points "+str(remainings))
+
+def arc(a,b,xleft,xright,ystart,yend,bestmatch,samples,samplesorig):
+	points.points[0]._concav_=a;points.points[1]._concav_=b
+	for x in range(xleft,xright):
+		points.points[1]._offset_=x
+		for y in range(ystart,yend):
+			points.points[1]._height_=y
+			save.apply() #or save.apply_arc
+
+			thisdif=0
+			for k in range(xleft,xright):
+				thisdif+=abs(samples[k]-samplesorig[k])
+
+			if thisdif<bestmatch[0]:
+				bestmatch[0]=thisdif
+				bestmatch[1]=a
+				bestmatch[2]=b
+				bestmatch[3]=x
+				bestmatch[4]=y
+
+def waiter(combo,pack):
+	box=Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
+	box.append(sets.colorLabel("Resume Screen"))
+	box.append(sets.colorButton("Fast Resume Save &amp; Done",fastsavedone,"Restore Save & Stop",[pack,combo]))
+	box.append(sets.colorButton("Fast Resume Save &amp; Resume",fastsaveresume,"Restore Save & Resume",[pack,combo]))
+	box.append(sets.colorButton("Resume",resumefn,"Continue",[pack,combo]))
+	combo[0].set_child(box)
+
+def resumefn(b,bigpack):
+	pack,combo=bigpack
+	resume(combo,pack)
+
+def terminate(combo,pnts2,samplesorig,testspack):
+	points.points=pnts2
+	finish(samplesorig,combo)
+
+def resume(combo,pack):
+	pnts2=pack[1];samplesorig=pack[3];testspack=pack[7]
+	pack[4],pack[5],is_done=calculate_resume(pack[0],pnts2,pack[2],samplesorig,pack[4],pack[5],pack[6],testspack)
+	if is_done:
+		terminate(combo,pnts2,samplesorig,testspack)
+		fastsavefinish()
+
+#same as calculate+for finish
+def worker(tolerance,min_dist,max,pause_after,samplesorig,combo): #used to not store height on another var at phase1, and at phase2
+	pack=calculate(draw.samples,draw.length,tolerance,min_dist,max,pause_after,samplesorig)
+	if pack!=None:
+		return pack
+	finish(samplesorig,combo)
+	fastsavefinish()
+	return None
+
+def finish(samplesorig,combo):
+	if point.lastselect:
+		pbox.close()
+		point.lastselect=None
+	if not sets.get_fulleffect():
+		draw.samples=samplesorig
+	move.saved(combo)
+	if sets.get_fulleffect():
+		save.saved()
+
+#i,ix,is_done
+def calculate_resume(pnts,pnts2,samples,samplesorig,i,ix,pause_after,testspack):
+	if print_test.get_active():
+		global tests_time
+		tests_time=time.time()
+
+	aux=points.points[1]
+	sz=len(pnts)-1
+	for i in range(i,sz):
+		xleft=pnts[i]._offset_;xright=pnts[i+1]._offset_
+		ystart=pnts[i]._height_;yend=pnts[i+1]._height_
+		points.points[0]._offset_=xleft;points.points[0]._height_=ystart
+		points.points[2]._offset_=xright;points.points[2]._height_=yend
+
+		#calculate current dif
+		startdif=0
+		for k in range(xleft,xright):
+			startdif+=abs(samples[k]-samplesorig[k])
+
+		bestmatch=[startdif]+([None]*4)
+		arc(True,True  ,xleft,xright,ystart,yend,bestmatch,samples,samplesorig)
+		arc(True,False ,xleft,xright,ystart,yend,bestmatch,samples,samplesorig)
+		arc(False,True ,xleft,xright,ystart,yend,bestmatch,samples,samplesorig)
+		arc(False,False,xleft,xright,ystart,yend,bestmatch,samples,samplesorig)
+
+		if bestmatch[0]!=startdif:
+			points.points[0]._concav_=bestmatch[1];points.points[1]._concav_=bestmatch[2]
+			points.points[1]._offset_=bestmatch[3];points.points[1]._height_=bestmatch[4]
+			save.apply()
+
+			pnts2[ix]._concav_=points.points[0]._concav_
+			ix+=1
+			pnts2.insert(ix,points.newp(points.points[1]._offset_,points.points[1]._height_,True,points.points[1]._concav_))
+		else: #restore the line
+			points.points[1]=points.points[2]
+			points.points.pop()
+			save.apply()
+			points.points.insert(1,aux)
+		ix+=1
+
+		if print_test.get_active():
+			testspack[0]+=bestmatch[0]
+			for l in range(xleft,xright):
+				testspack[1]+=abs(samplesorig[l])
+			print(" "+str(i+1),end='',flush=True)  #+1? at least on 50 will be 1,2,...,49
+			testspack[2]+=startdif    #again, for changes
+
+		if pause.get_active():
+			if ((i+2)%pause_after)==0:  #example: stop after 3, pase after 2, will stop at 2
+				if (i+1)<sz: #not if was last
+					if print_test.get_active():
+						tests_phase2(pnts2,testspack,len(pnts)-(i+2))
+					return (i+1,ix,False)
+	if print_test.get_active():
+		tests_phase2(pnts2,testspack,0)
+	return (i,ix,True)
+
+def fastsave(pack):
+	fp=fastpath(True)
+	with open(fp,"w") as f:
+		pk=[points.serialize(pack[0]),points.serialize(pack[1])]+pack[2:] #pack is needed outside
+		json.dump(pk,f)
+
+def fastpath(is_save):
+	f_in=play.entry.get_text()
+	p=points.dpath(f_in)
+	f=points.fpath(f_in,"fastresume")
+	if is_save:
+		pathlib.Path(p).mkdir(exist_ok=True)
+		return f
+	return os.path.exists(f)
+
+def restore(b,combo):
+	with open(fastpath(True)) as f:
+		if d:=f.read():
+			pack=json.loads(d)
+
+			box=Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
+			box.append(sets.colorLabel("Fast Resume Continue"))
+
+			print_test.get_parent().remove(print_test) #gtk critical without this
+			pause.get_parent().remove(pause)
+			bx=Gtk.Grid(hexpand=True)
+			common_options(bx,0)
+			box.append(bx)
+			if not len(pack[7]):
+				print_test.set_active(False)
+				print_test.set_sensitive(False) #can't resume verbosity when was not
+			else:
+				print_test.set_active(True) #in case is not
+			pause.set_active(True) #in case is not
+			pause_points.set_text(str(pack[6]),-1)
+
+			box.append(sets.colorButton("Continue",fastresumefn,"Start",[pack,combo]))
+			combo[0].set_child(box)
+
+def fastsavedone(b,bigpack):
+	pack,combo=bigpack
+	fastsave(pack)
+	terminate(combo,pack[1],pack[3],pack[7])
+def fastsaveresume(b,bigpack):
+	pack,combo=bigpack
+	fastsave(pack)
+	resume(combo,pack)
+
+def fastsavefinish():
+	if fastpath(False):
+		os.remove(fastpath(True))
+
+def fastresumefn(b,bigpack):
+	d=pause_points.get_text()
+	dbool=d.isdigit()
+	if dbool:
+		d=int(d)
+		if d<pause_points_minimum:
+			pause_points.set_text(str(pause_points_minimum),-1)
+		else:
+			pack,combo=bigpack
+
+			pack[6]=d
+			if not print_test.get_sensitive():
+				print_test.set_sensitive(True) #for another use at this
+			elif not print_test.get_active():
+				pack[7]=[] #user wants to unset verbosity from now
+
+			points.points.clear()
+			precalculate1()
+			precalculate2()
+
+			pack[0]=points.deserialize(pack[0])
+			pack[1]=points.deserialize(pack[1])
+			draw.samples=pack[2]
+
+			waiter(combo,pack)
+	else:
+		pause_points.set_text(default_pause,-1)
--- audapa-1.orig/audapa/bar.py
+++ audapa-1/audapa/bar.py
@@ -19,6 +19,7 @@ def init(combo):
 	box.append(sets.colorButton(chr(0x2699), sets.sets, "Settings", combo))
 	box.append(sets.colorButton("X", cl, "Exit"))
 	box.append(play.entry)
+	box.append(play.openbutton)
 	box.append(play.button)
 	box.append(build.init())
 	return box
--- audapa-1.orig/audapa/forms.py
+++ audapa-1/audapa/forms.py
@@ -14,6 +14,7 @@ from . import spread
 from . import blank
 from . import move
 from . import distance
+from . import automation
 
 #button
 control=None
@@ -36,6 +37,8 @@ def init(combo):
 	box.append(bt)
 	bt=sets.colorButton(chr(0x2422),blank.open,"Blanks",combo)
 	box.append(bt)
+	bt=sets.colorButton(chr(0x1F3E7),automation.data,"Automation",combo)
+	box.append(bt)
 	for bt in box:
 		bt.set_sensitive(False)
 	b.append(box)
--- audapa-1.orig/audapa/graph.py
+++ audapa-1/audapa/graph.py
@@ -41,7 +41,7 @@ def line_draw(cr,c0,c1,w,h):
 	a0=c0._coord_(w,h)
 	a1=c1._coord_(w,h)
 	if c0._inter_ or c1._inter_:
-		arc.draw(cr,a0[0],a0[1],a1[0],a1[1],c0._convex_)
+		arc.draw(cr,a0[0],a0[1],a1[0],a1[1],c0._concav_)
 	else:
 		#don't let line width corners to intersect
 		p0,p1=coords(a0[0],a0[1],a1[0],a1[1])
@@ -81,7 +81,7 @@ def clearline(cr,a0,a1,w,h):
 	c1=a1._coord_(w,h)
 	#arc is lineing to circle start, not convenient
 	if a0._inter_ or a1._inter_:
-		arc.draw(cr,c0[0],c0[1],c1[0],c1[1],a0._convex_)
+		arc.draw(cr,c0[0],c0[1],c1[0],c1[1],a0._concav_)
 		lw=cr.get_line_width()
 		cr.set_line_width(lw+1)  #only this here
 		cr.stroke()
--- audapa-1.orig/audapa/level.py
+++ audapa-1/audapa/level.py
@@ -18,7 +18,7 @@ sign_positive="+"
 
 def open(b,combo):
 	global signbutton,maxlabel,calculated,middlerate,pausesbool,anchorbool
-	global box,distancebutton,pointsorig,samplesorig,pointsorigh #since pauses can be more points
+	global box,distancebutton,pointsorig,pointsorigh,samplesorig #since pauses can be more points
 	box=Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
 	#+/- button or not   entry   maxim
 	b2=Gtk.Box()
@@ -59,12 +59,14 @@ def open(b,combo):
 	box.append(bt)
 	bt=sets.colorButton("Done",ready,"Set & Return",combo)
 	box.append(bt)
+
 	#copies
 	#.copy() => it is not deep, _height_ same
 	pointsorig=points.points.copy()
 	pointsorigh=[]
 	for p in points.points:
 		pointsorigh.append(p._height_)
+
 	samplesorig=draw.samples.copy()
 	distancebutton=None
 	#and set
@@ -277,4 +279,4 @@ def resolve(pauses):
 
 def insert(ix,more):
 	p=points.points[ix]
-	points.add(p._offset_,0,False,point.default_convex,ix+more)
+	points.add(p._offset_,0,False,point.default_concav,ix+more)
--- audapa-1.orig/audapa/play.py
+++ audapa-1/audapa/play.py
@@ -18,7 +18,7 @@ output=0x25B6
 #23F5
 timer=0
 
-def activate(en,d):
+def activate(wd,d):
 	terminate()
 	launch()
 def toggle(b,d):
@@ -32,8 +32,9 @@ def toggle(b,d):
 		pause()
 
 def init():
-	global entry,button
+	global entry,button,openbutton
 	entry=sets.colorEntry()
+	openbutton=sets.colorButton(chr(0x1f4d6), activate, "Open")
 	button=sets.colorButton(chr(output), toggle, "Play")
 	entry.connect('activate',activate,None)
 
--- audapa-1.orig/audapa/point.py
+++ audapa-1/audapa/point.py
@@ -11,11 +11,13 @@ from . import arcbutton
 from . import distance
 
 const=6 #this is the radius
-default_convex=True
+default_concav=True
 
 class struct(Gtk.DrawingArea):
 	_drag_=False
-	#offset,height,inter,convex
+	#offset,height,inter,concav
+	#                    here is like the Arc Orientation button that at start is /\ that is concav
+	#                    https://math.stackexchange.com/questions/2364116/how-to-remember-which-function-is-concave-and-which-one-is-convex
 	#control
 	def __init__(self,*args):
 		Gtk.DrawingArea.__init__(self)
@@ -27,7 +29,7 @@ class struct(Gtk.DrawingArea):
 			self.set_draw_func(self._draw_none_,None,None)
 			return
 		self._inter_=False
-		self._convex_=default_convex
+		self._concav_=default_concav
 		self._pos_(args[0],args[1])
 		ix=points.insert(self)
 		puts,dels=self._take_(ix)
--- audapa-1.orig/audapa/points.py
+++ audapa-1/audapa/points.py
@@ -120,7 +120,7 @@ def write(f_in):
 		with open(f_out,"w") as f:
 			d=[]
 			for po in points:
-				d.append([po._offset_,po._height_,po._inter_,po._convex_])
+				d.append([po._offset_,po._height_,po._inter_,po._concav_])
 			a=play.wavefile
 			d=[d,(a.getsampwidth(),a.getnchannels(),a.getframerate(),draw.length)]
 			json.dump(d,f)
@@ -139,10 +139,24 @@ def read(f_in,fast):
 					add(p[0],p[1],p[2],p[3],len(points))
 				return d[1]
 
-def add(o,h,i,c,pos):
+def newp(o,h,i,c):
 	po=point.struct()
 	po._offset_=o
 	po._height_=h
 	po._inter_=i
-	po._convex_=c
-	points.insert(pos,po)
+	po._concav_=c
+	return po
+
+def add(o,h,i,c,pos):
+	points.insert(pos,newp(o,h,i,c))
+
+def serialize(pnts):
+	s=[]
+	for p in pnts:
+		s.append([p._offset_,p._height_,p._inter_,p._concav_])
+	return s
+def deserialize(arr):
+	pnts=[]
+	for a in arr:
+		pnts.append(newp(a[0],a[1],a[2],a[3]))
+	return pnts
--- audapa-1.orig/audapa/reload.py
+++ audapa-1/audapa/reload.py
@@ -5,6 +5,7 @@ from . import play
 from . import points
 
 def file():
+	global temp
 	temp=loc()
 	play.save_opened(temp)
 	play.wavefile.close()
@@ -14,6 +15,9 @@ def loc():
 	return points.fpath(play.entry.get_text(),"temp")
 
 def close():
-	temp=loc()
-	if os.path.exists(temp):
-		os.remove(temp)
+	#temp=loc()
+	try:  #can change the entry and temp need to be the last one, but then can be nothing, then use try
+		if os.path.exists(temp):
+			os.remove(temp)
+	except:
+		pass
--- audapa-1.orig/audapa/save.py
+++ audapa-1/audapa/save.py
@@ -12,7 +12,7 @@ def effect():
 	apply()
 	saved()
 def saved():
-	reload.file()
+	reload.file() #for playback , there is a wavefile.readframes at the callback
 	redraw()
 
 def redraw():
@@ -35,18 +35,19 @@ def apply():
 			y0=prev._height_
 			x1=cur._offset_
 			y1=cur._height_
+			#print(str(i-1)+"="+str(x0)+","+str(i)+"="+str(x1))
 			if cur._inter_ or prev._inter_:
-				apply_arc(x0,y0,x1,y1,prev._convex_)
+				apply_arc(x0,y0,x1,y1,prev._concav_)
 			else:
 				apply_line(x0,y0,x1,y1)
 
-def apply_arc(x0,y0,x1,y1,conv):
+def apply_arc(x0,y0,x1,y1,conc):
 	x=x1-x0
 	y=abs(y1-y0)
 	#get radius
 	radius,rads=arc.radius(x,y)
 	#get center
-	_,yc,rstart,rend=arc.center(x0,y0,x1,y1,conv,x,y,radius,rads)
+	_,yc,rstart,rend=arc.center(x0,y0,x1,y1,conc,x,y,radius,rads)
 	#iterate
 	if rstart==0 or rend==math.pi or rstart==math.pi or rend==0:
 	#x axis
@@ -54,9 +55,11 @@ def apply_arc(x0,y0,x1,y1,conv):
 		if rstart==0 or rend==0:
 			startpoint=0
 			stoppoint=x
+			#print(4 if rend==0 else 1)
 		else:
 			startpoint=1
 			stoppoint=x+1
+			#print(2 if rstart==math.pi else 3)
 		for i in range(startpoint,stoppoint):
 			#supra radius
 			a=xpos/radius
@@ -77,11 +80,13 @@ def apply_arc(x0,y0,x1,y1,conv):
 	else:
 	#y axis
 		if rstart==math.pi*3/2 or rend==math.pi/2:
-			startpoint=x
-			stoppoint=0
-		else:
 			startpoint=x-1
 			stoppoint=-1
+			#print(6 if rstart==math.pi*3/2 else 7)
+		else:
+			startpoint=x
+			stoppoint=0
+			#print(5 if rstart==math.pi/2 else 8)
 		for i in range(startpoint,stoppoint,-1):
 			a=i/radius
 			a=math.asin(a)
--- audapa-1.orig/audapa/snap.py
+++ audapa-1/audapa/snap.py
@@ -26,56 +26,60 @@ def base(b,d):
 
 def left(b,d):
 	p=point.lastselect
-	_,y=draw.cont.get_child_position(p)
-	y+=point.const
-	if drawscroll.landscape:
-		ix=points.points.index(p)
-		if ix==0 or points.points[ix-1]._offset_<draw.offset:
-			autodrag(p,0,y)
+	if p.get_parent(): #only if in current cont, else will be an error, visible and gtk error
+		_,y=draw.cont.get_child_position(p)
+		y+=point.const
+		if drawscroll.landscape:
+			ix=points.points.index(p)
+			if ix==0 or points.points[ix-1]._offset_<draw.offset:
+				autodrag(p,0,y)
+			else:
+				autodrag(p,points.points[ix-1]._offset_,y)
 		else:
-			autodrag(p,points.points[ix-1]._offset_,y)
-	else:
-		autodrag(p,0,y)
+			autodrag(p,0,y)
 
 def right(b,d):
 	p=point.lastselect
-	_,y=draw.cont.get_child_position(p)
-	y+=point.const
-	if drawscroll.landscape:
-		ix=points.points.index(p)
-		sz=len(points.points)
-		if ix+1==sz or points.points[ix+1]._offset_>(draw.offset+draw.size):
-			autodrag(p,draw.size,y)
+	if p.get_parent():
+		_,y=draw.cont.get_child_position(p)
+		y+=point.const
+		if drawscroll.landscape:
+			ix=points.points.index(p)
+			sz=len(points.points)
+			if ix+1==sz or points.points[ix+1]._offset_>(draw.offset+draw.size):
+				autodrag(p,draw.size,y)
+			else:
+				autodrag(p,points.points[ix+1]._offset_,y)
 		else:
-			autodrag(p,points.points[ix+1]._offset_,y)
-	else:
-		x,_=coord(p,level.get_size()-1)
-		autodrag(p,x,y)
+			x,_=coord(p,level.get_size()-1)
+			autodrag(p,x,y)
 
 def up(b,d):
 	p=point.lastselect
-	x,_=draw.cont.get_child_position(p)
-	x+=point.const
-	if drawscroll.landscape:
-		autodrag(p,x,0)
-	else:
-		ix=points.points.index(p)
-		if ix==0 or points.points[ix-1]._offset_<draw.offset:
+	if p.get_parent():
+		x,_=draw.cont.get_child_position(p)
+		x+=point.const
+		if drawscroll.landscape:
 			autodrag(p,x,0)
 		else:
-			autodrag(p,x,points.points[ix-1]._offset_)
+			ix=points.points.index(p)
+			if ix==0 or points.points[ix-1]._offset_<draw.offset:
+				autodrag(p,x,0)
+			else:
+				autodrag(p,x,points.points[ix-1]._offset_)
 
 def down(b,d):
 	p=point.lastselect
-	x,_=draw.cont.get_child_position(p)
-	x+=point.const
-	if drawscroll.landscape:
-		_,y=coord(p,level.get_size()-1) #simple get height will fall to 256 ([0,255] are the allowed heights)
-		autodrag(p,x,y)
-	else:
-		ix=points.points.index(p)
-		sz=len(points.points)
-		if ix+1==sz or points.points[ix+1]._offset_>(draw.offset+draw.size):
-			autodrag(p,x,draw.size)
+	if p.get_parent():
+		x,_=draw.cont.get_child_position(p)
+		x+=point.const
+		if drawscroll.landscape:
+			_,y=coord(p,level.get_size()-1) #simple get height will fall to 256 ([0,255] are the allowed heights)
+			autodrag(p,x,y)
 		else:
-			autodrag(p,x,points.points[ix+1]._offset_)
+			ix=points.points.index(p)
+			sz=len(points.points)
+			if ix+1==sz or points.points[ix+1]._offset_>(draw.offset+draw.size):
+				autodrag(p,x,draw.size)
+			else:
+				autodrag(p,x,points.points[ix+1]._offset_)
--- audapa-1.orig/audapa/step.py
+++ audapa-1/audapa/step.py
@@ -30,51 +30,55 @@ def autodrag(p,x,y):
 def left(b,d):
 	leftk()
 def leftk():
-	if drawscroll.landscape:
-		limit=left_type()
-	else:
-		limit=-point.const
 	p=point.lastselect
-	x,y=draw.cont.get_child_position(p)
-	x-=1 #on height is double
-	if x>limit:
-		autodrag(p,x,y)
+	if p.get_parent(): #only if in current cont, else will be an error, visible and gtk error
+		if drawscroll.landscape:
+			limit=left_type()
+		else:
+			limit=-point.const
+		x,y=draw.cont.get_child_position(p)
+		x-=1 #on height is double
+		if x>limit:
+			autodrag(p,x,y)
 
 def right(b,d):
 	rightk()
 def rightk():
-	if drawscroll.landscape:
-		limit=right_type()
-	else:
-		limit=draw.area.get_width()-point.const
 	p=point.lastselect
-	x,y=draw.cont.get_child_position(p)
-	x+=1
-	if x<limit:
-		autodrag(p,x,y)
+	if p.get_parent():
+		if drawscroll.landscape:
+			limit=right_type()
+		else:
+			limit=draw.area.get_width()-point.const
+		x,y=draw.cont.get_child_position(p)
+		x+=1
+		if x<limit:
+			autodrag(p,x,y)
 
 def up(b,d):
 	upk()
 def upk():
-	if drawscroll.landscape:
-		limit=-point.const
-	else:
-		limit=left_type()
 	p=point.lastselect
-	x,y=draw.cont.get_child_position(p)
-	y-=1
-	if y>limit:
-		autodrag(p,x,y)
+	if p.get_parent():
+		if drawscroll.landscape:
+			limit=-point.const
+		else:
+			limit=left_type()
+		x,y=draw.cont.get_child_position(p)
+		y-=1
+		if y>limit:
+			autodrag(p,x,y)
 
 def down(b,d):
 	downk()
 def downk():
-	if drawscroll.landscape:
-		limit=draw.area.get_height()-point.const
-	else:
-		limit=right_type()
 	p=point.lastselect
-	x,y=draw.cont.get_child_position(p)
-	y+=1
-	if y<limit:
-		autodrag(p,x,y)
+	if p.get_parent():
+		if drawscroll.landscape:
+			limit=draw.area.get_height()-point.const
+		else:
+			limit=right_type()
+		x,y=draw.cont.get_child_position(p)
+		y+=1
+		if y<limit:
+			autodrag(p,x,y)
--- audapa-1.orig/b
+++ audapa-1/b
@@ -1,6 +1,24 @@
 
-GTK_DEBUG=interactive GTK_INSPECTOR_DISPLAY=:1 ./a $@
-#x11          :0    is ok
-#broadway and :0    not visible
-#broadway and x11:0 failed
-#broadway and broadway:0 failed
+if [ -n "$1" ]; then
+z=$1
+else
+z="python"
+fi
+
+if [ -n "$2" ]; then
+x=$2
+else
+x=0
+fi
+
+if [ -z "$GTK_DEBUG" ]; then
+if [ -n "$3" ]; then
+GDK_BACKEND=broadway BROADWAY_DISPLAY=:$x GTK_DEBUG=$3 $z -m audapa.main
+exit
+fi
+fi
+
+if [ -n "$3" ]; then
+GTK_DEBUG+=",$3"
+fi
+GDK_BACKEND=broadway BROADWAY_DISPLAY=:$x $z -m audapa.main
--- audapa-1.orig/c
+++ audapa-1/c
@@ -1,2 +1,6 @@
 
-./a python 0 touchscreen
+GTK_DEBUG=interactive GTK_INSPECTOR_DISPLAY=:1 ./a $@
+#x11          :0    is ok
+#broadway and :0    not visible
+#broadway and x11:0 failed
+#broadway and broadway:0 failed
--- /dev/null
+++ audapa-1/d
@@ -0,0 +1,2 @@
+
+./a python 0 touchscreen
--- audapa-1.orig/setup.py
+++ audapa-1/setup.py
@@ -8,6 +8,9 @@
 #but then, to not see broken count now and then, must remove python3-pyaudio at audapa package dependencies from /var/lib/dpkg/status
 #A SOLUTION: overwrite ./build/lib.linux-x86_64-3.10/_portaudio.cpython-310-x86_64-linux-gnu.so at python3-pyaudio equivalent
 
+#pip install --user .
+#pip uninstall audapa
+
 pkname='audapa'
 
 import pathlib
@@ -15,11 +18,26 @@ HERE = pathlib.Path(__file__).parent
 README = (HERE / "info.md").read_text()
 ver=(HERE / "v2").read_text()
 
+#import subprocess
+#import setuptools.command.build_py
+#class BuildPyCommand(setuptools.command.build_py.build_py):
+#  """Custom build command."""
+#  def run(self):
+#    subprocess.run(['touch','qwerty.so'])
+#    subprocess.run(['mv','qwerty.so','audapa'])
+#    #MANIFEST.in include audapa/qwerty.so
+#    #and include_package_data=True
+#    setuptools.command.build_py.build_py.run(self)
+
 from setuptools import setup
 setup(name=pkname,
 	version=ver,
 	packages=[pkname],
 	#optionals
+	#cmdclass={
+	#	'build_py': BuildPyCommand
+	#},
+	#include_package_data=True,
 	python_requires='>=3.8',
 	install_requires=[
 		"pycairo>=1.20.0","PyGObject>=3.40",
