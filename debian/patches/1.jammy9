Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 sirc (1-jammy9) jammy; urgency=medium
 .
   * fix ";" server syntax
Author: bc <bc@bc-Type1ProductConfigId>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2024-01-03

--- sirc-1.orig/clean
+++ sirc-1/clean
@@ -1,2 +1,2 @@
 
-git clean -xdf -e .pc/ -e debian/patches/
+git clean -xdf -e .pc/ -e debian/patches/    #don't forget: make maintainer-clean
--- sirc-1.orig/configure.ac
+++ sirc-1/configure.ac
@@ -54,22 +54,30 @@ PKG_CHECK_MODULES([GLIB], [glib-2.0],[
 ])
 
 PKG_CHECK_MODULES([GTK], [gtk+-3.0],[
-
-CFLAGS="$GTK_CFLAGS"
-X_PROGRAM="#include<gtk/gtk.h>"
-AC_MSG_CHECKING([gtk/gtk.h])
-AC_COMPILE_IFELSE(
-   [AC_LANG_SOURCE([$X_PROGRAM])],
-   [
-      AC_MSG_RESULT([yes])
-      AC_DEFINE(HAVE_GTK_GTK_H, 1, [3])
-   ],
-   [AC_MSG_RESULT([no])
-    AC_SUBST([GTK_CFLAGS], '')]
-)
-#CFLAGS="$start_cflgs"
-
-], [AC_MSG_ERROR("pkg check modules failed for gtk")])
+	CFLAGS="$GTK_CFLAGS"
+	X_PROGRAM="#include<gtk/gtk.h>"
+	AC_MSG_CHECKING([gtk/gtk.h])
+	AC_COMPILE_IFELSE(
+	   [AC_LANG_SOURCE([$X_PROGRAM])],
+	   [
+	      AC_MSG_RESULT([yes])
+	      AC_DEFINE(HAVE_GTK_GTK_H, 1, [3])
+	   ],
+	   [AC_MSG_RESULT([no])
+	    AC_SUBST([GTK_CFLAGS], '')]
+	)
+	#CFLAGS="$start_cflgs"
+], [
+	#there is a headless build, but still lazy about @GTK_LIBS@ at link
+	#GTK_LIBS=" -lgtk-3 -lgdk-3 -lz -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 "
+	AC_MSG_CHECKING([whether GTK_LIBS is set])
+	if test "x${GTK_LIBS+set}" = xset; then
+		AC_MSG_RESULT(yes)
+	else
+		AC_MSG_RESULT(no)
+		AC_MSG_ERROR("pkg check modules failed for gtk")
+	fi
+])
 
 CFLAGS="-Werror=unknown-warning-option -Weverything"
 AC_MSG_CHECKING([-Weverything])
--- /dev/null
+++ sirc-1/headless
@@ -0,0 +1,11 @@
+
+#1 remove
+
+cp Makefile mk
+a="\-DHAVE_STDIO_H=1 \-DHAVE_STDLIB_H=1 \-DHAVE_STRING_H=1 \-DHAVE_INTTYPES_H=1 \-DHAVE_STDINT_H=1 \-DHAVE_STRINGS_H=1 \-DHAVE_SYS_STAT_H=1 \-DHAVE_SYS_TYPES_H=1 \-DHAVE_UNISTD_H=1 \-DSTDC_HEADERS=1 \-DHAVE_LIBGEN_H=1 \-DHAVE_FCNTL_H=1 \-DHAVE_NETDB_H=1 \-DHAVE_NETINET_IN_H=1 \-DHAVE_OPENSSL_SSL_H=1 \-DHAVE_PTHREAD_H=1 \-DHAVE_SIGNAL_H=1 \-DHAVE_STDIO_H=1 \-DHAVE_STDLIB_H=1 \-DHAVE_STRING_H=1 \-DHAVE_SYS_SOCKET_H=1 \-DHAVE_TIME_H=1 \-DHAVE_UNISTD_H=1 \-DFN_G_MEMDUP2=1 \-DHAVE_GTK_GTK_H=1"
+grep --color "${a}" mk
+sed -i "s/${a}//g" mk
+grep --color "${a}" mk
+make -f mk
+
+if [ -n "${1}" ]; then rm mk; fi
--- sirc-1.orig/heads
+++ /dev/null
@@ -1,8 +0,0 @@
-
-cp Makefile mk
-a="\-DHAVE_STDIO_H=1 \-DHAVE_STDLIB_H=1 \-DHAVE_STRING_H=1 \-DHAVE_INTTYPES_H=1 \-DHAVE_STDINT_H=1 \-DHAVE_STRINGS_H=1 \-DHAVE_SYS_STAT_H=1 \-DHAVE_SYS_TYPES_H=1 \-DHAVE_UNISTD_H=1 \-DSTDC_HEADERS=1 \-DHAVE_LIBGEN_H=1 \-DHAVE_FCNTL_H=1 \-DHAVE_NETDB_H=1 \-DHAVE_NETINET_IN_H=1 \-DHAVE_OPENSSL_SSL_H=1 \-DHAVE_PTHREAD_H=1 \-DHAVE_SIGNAL_H=1 \-DHAVE_STDIO_H=1 \-DHAVE_STDLIB_H=1 \-DHAVE_STRING_H=1 \-DHAVE_SYS_SOCKET_H=1 \-DHAVE_TIME_H=1 \-DHAVE_UNISTD_H=1 \-DFN_G_MEMDUP2=1 \-DHAVE_GTK_GTK_H=1"
-grep --color "${a}" mk
-sed -i "s/${a}//g" mk
-grep --color "${a}" mk
-make -f mk
-rm mk
--- sirc-1.orig/inc/stdio.h
+++ sirc-1/inc/stdio.h
@@ -1,6 +1,8 @@
 
 #include"inc/stddef.h"
 
+#define EOF (-1)
+
 #ifdef __cplusplus
 extern "C" {
 #endif
--- sirc-1.orig/main.c
+++ sirc-1/main.c
@@ -115,8 +115,8 @@ static char*info_path_name=nullptr;
 #define con_nr_min _con_nr_su
 #define con_nr_max _con_nr_u
 #define con_nr_nrs INT_CONV_STR(con_nr_min) "-" INT_CONV_STR(con_nr_max)
-#define con_nr_righttype1 _con_nr_us
-#define con_nr_righttype2 _con_nr_u
+//#define con_nr_righttype1 _con_nr_us
+//#define con_nr_righttype2 _con_nr_u
 #define help_text "Most of the parameters are set at start.\n\
 Launch the program with --help argument for more info.\n\
 Send irc commands from the " home_string " tab. Other tabs are sending " priv_msg_str " messages.\n\
@@ -129,7 +129,7 @@ Ctrl+X = Exit program\n\
 \n\
 Connection format:\n\
 [[nickname" parse_host_delim "]password" parse_host_left "]hostname[" parse_host_delim "port1[" parse_host_ports_delim "portN][" parse_host_ports_micro "portM...][" parse_host_ports_macro "portP...]]\n\
-A " parse_host_ports_macro_text " (" parse_host_ports_macro ") will override the connection type. Before " parse_host_ports_macro_text ", " con_nr_s " or " con_nr_su "; after " parse_host_ports_macro_text ", " con_nr_u " or " con_nr_us ".\n\
+A " parse_host_ports_macro_text " (" parse_host_ports_macro ") will override the connection type. Before " parse_host_ports_macro_text " are " con_nr_s " ports and after " parse_host_ports_macro_text " are " con_nr_u " ports.\n\
 Escape " parse_host_left " in password with the uri format (\"%40\").\n\
 e.g. newNick" parse_host_delim "a%40c" parse_host_left "127.0.0.1" parse_host_delim "7000" parse_host_ports_macro "6660" parse_host_ports_delim "6665" parse_host_ports_micro "6669"
 #define chan_sz 50
@@ -222,8 +222,10 @@ struct ajoin{
 };
 #define invite_str " invited you to join channel "
 static GtkWidget*menuwithtabs;
-#define sw_rule 0
 #define size_t_max (((unsigned long int)1<<(8*sizeof(size_t)-1))-1)+((unsigned long int)1<<(8*sizeof(size_t)-1))
+#define not_a_switch size_t_max
+//is also odd, there are pairs, and text size is also let small
+//at = and == is same asm against 1     and for other compilers can compare from bit sign and is faster
 static GQueue*send_entry_list;static GList*send_entry_list_cursor=nullptr;
 #define default_chan_min 250
 #define default_chans_max 150
@@ -441,24 +443,40 @@ static BOOL parse_host_str(const char*in
 		if(ptr==nullptr){
 			*pr=(unsigned short*)malloc(2*sizeof(unsigned short));
 			if(*pr==nullptr)return FALSE;
-			(*pr)[0]=6667;(*pr)[1]=6667;*pl=sw_rule;*swtch=sw_rule+1;
+			(*pr)[0]=6667;(*pr)[1]=6667;*pl=0;*swtch=not_a_switch;
 			return TRUE;
 		}
+		//at switch recon, can't test pl==switch because of :;port  /   pl<switch  :port;    =>    only not_a_switch = odd is ok
 		ptr++;
+		if(*ptr=='\0')return FALSE;//return here, else will return TRUE with two undefined
 		size_t i=1;
 		for(size_t j=0;ptr[j]!='\0';j++)if(ptr[j]==*parse_host_ports_micro||ptr[j]==*parse_host_ports_macro)i++;
-		unsigned short*por=(unsigned short*)malloc(i*2*sizeof(unsigned short));
+		size_t max=i*2;
+		unsigned short*por=(unsigned short*)malloc(max*sizeof(unsigned short));
 		if(por!=nullptr){
-			size_t j=0;size_t k=0;*swtch=size_t_max;
+			if(*ptr==*parse_host_ports_macro){//case when are induced unencrypted ports
+				ptr++;
+				if(*ptr=='\0'){free(por);return FALSE;}//case:   ;   return here, else will return TRUE with two undefined
+				*swtch=0;
+				max-=2;//because first two are not anymore
+			}else *swtch=not_a_switch;
+			size_t j=0;size_t k=0;
 			for(;;){
 				BOOL end=ptr[j]=='\0';BOOL sw=ptr[j]==*parse_host_ports_macro;
 				if(ptr[j]==*parse_host_ports_micro||end||sw){
 					int n=sscanf(ptr,"%hu" parse_host_ports_delim "%hu",&por[k],&por[k+1]);
-					if(n==0){free(por);return FALSE;}
+					if(n==0){free(por);return FALSE;}//this is not same as EOF, a "" is an EOF
 					if(n==1)por[k+1]=por[k];
-					if(end){*pl=i*2-2;*pr=por;return TRUE;}
+					if(end){
+						if(n==EOF)//this is the case: :port;    pl 0   switch 2      or :port,      EOF can also be an error but not here
+							max-=2;
+						*pl=max-2;*pr=por;return TRUE;
+					}
 					k+=2;
-					if(sw)*swtch=k;
+					if(sw){
+						if(*swtch!=not_a_switch){free(por);return FALSE;}//this is the second switch?
+						*swtch=k;
+					}
 					ptr=&ptr[j+1];j=0;continue;
 				}
 				j++;
@@ -1613,16 +1631,20 @@ static void clear_old_chat(GtkNotebook*n
 	start_old_clear(name_off_menu,nb);
 }
 static void proced_core(struct stk_s*ps,char*hostname,char*psw,char*nkn,unsigned short*ports,size_t port_last,size_t swtch){
-	GSList*lst=con_group;
-	unsigned char n=con_nr_max;
-	for(;;){
-		if(gtk_check_menu_item_get_active((GtkCheckMenuItem*)lst->data))break;
-		lst=lst->next;n--;
-	}
+	unsigned char n;
+	if(swtch==not_a_switch){
+		GSList*lst=con_group;
+		n=con_nr_max;
+		for(;;){
+			if(gtk_check_menu_item_get_active((GtkCheckMenuItem*)lst->data))break;
+			lst=lst->next;n--;
+		}
+	}else n=_con_nr_s;
 	for(;;){
 		size_t port_i=0;
-		if(swtch<=port_last&&(n==con_nr_righttype1||n==con_nr_righttype2))n--;
+		//if(swtch<=port_last&&(n==con_nr_righttype1||n==con_nr_righttype2))n--;//this is useless at :ssl;plain
 		for(;;){
+			if(swtch==port_i)n++;//this was moved up to let unencrypted only preferred
 			unsigned short port1=ports[port_i];unsigned short port2=ports[port_i+1];
 			for(;;){
 				create_socket(hostname,port1);
@@ -1645,7 +1667,7 @@ static void proced_core(struct stk_s*ps,
 								con_ssl(psw,nkn,ps);
 						}
 					}else if(n==_con_nr_s)con_ssl(psw,nkn,ps);
-					else con_plain(psw,nkn,ps);
+					else con_plain(psw,nkn,ps);//_con_nr_u
 					close_plain_safe
 				}
 				if(close_intention)return;
@@ -1660,7 +1682,7 @@ static void proced_core(struct stk_s*ps,
 			}
 			if(port_i==port_last)break;
 			port_i+=2;
-			if(swtch==port_i)n++;
+			//if(swtch==port_i)n++;
 		}
 	}
 }
--- sirc-1.orig/readme.md
+++ sirc-1/readme.md
@@ -20,14 +20,14 @@ yum install sirc-*.*.rpm
 On linux distributions, <i>.AppImage</i> file from [releases](https://github.com/colin-i/irc-ssl/releases).
 
 ## From source
+Using libssl-dev and libgtk-3-dev. There is a "headless" build file as well.
 ```sh
 autoreconf -i
 ./configure
 make install
 ```
 For *install*, *sudo make install* if it is the user.\
-*\-\-disable\-cpp* at *./configure* to set c rules.\
-GTK3 required.
+*\-\-disable\-cpp* at *./configure* to set c rules.
 
 ## Donations
 The *donations* section is here
