Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 sirc (1-jammy10) jammy; urgency=medium
 .
   * fixes with mem free, 0 at refresh, segmentation at cline arg err
Author: bc <bc@bc-Type1ProductConfigId>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2024-01-11

--- sirc-1.orig/inc/gtk.h
+++ sirc-1/inc/gtk.h
@@ -247,6 +247,7 @@ gboolean g_variant_dict_contains (GVaria
 gboolean g_variant_dict_lookup (GVariantDict *dict, const gchar *key, const gchar *format_string, ...);
 GVariant * g_variant_dict_lookup_value (GVariantDict *dict, const gchar *key, const GVariantType *expected_type);
 const gchar * g_variant_get_string (GVariant *value, gsize *length);
+void g_variant_unref (GVariant *value);
 guint gdk_keyval_to_upper (guint keyval) __attribute__((__const__));
 GdkPixbuf *gdk_pixbuf_new_from_data (const guchar *data,GdkColorspace colorspace,gboolean has_alpha,int bits_per_sample,int width, int height,int rowstride,GdkPixbufDestroyNotify destroy_fn,gpointer destroy_fn_data);
 void gtk_adjustment_set_value (GtkAdjustment *adjustment, gdouble value);
@@ -258,9 +259,11 @@ GtkWidget* gtk_box_new (GtkOrientation o
 void gtk_box_pack_end (GtkBox *box, GtkWidget *child, gboolean expand, gboolean fill, guint padding);
 void gtk_box_pack_start (GtkBox *box,GtkWidget *child,gboolean expand,gboolean fill,guint padding);
 void gtk_button_clicked (GtkButton *button);
+const gchar *gtk_button_get_label (GtkButton *button);
 GType gtk_button_get_type (void) __attribute__((__const__));
 GtkWidget* gtk_button_new (void);
 GtkWidget* gtk_button_new_with_label (const gchar *label);
+void gtk_button_set_label (GtkButton *button, const gchar *label);
 void gtk_button_set_image (GtkButton *button, GtkWidget *image);
 void gtk_button_set_relief (GtkButton *button, GtkReliefStyle relief);
 GtkCellRenderer *gtk_cell_renderer_text_new (void);
@@ -273,6 +276,7 @@ gint gtk_combo_box_get_active (GtkComboB
 GtkTreeModel*gtk_combo_box_get_model (GtkComboBox *combo_box);
 void gtk_combo_box_set_active (GtkComboBox *combo_box, gint index_);
 void gtk_combo_box_text_append_text (GtkComboBoxText *combo_box, const gchar *text);
+GtkWidget* gtk_combo_box_text_new (void);
 GtkWidget* gtk_combo_box_text_new_with_entry (void);
 void gtk_combo_box_text_remove (GtkComboBoxText *combo_box, gint position);
 void gtk_container_add (GtkContainer *container, GtkWidget *widget);
@@ -280,6 +284,7 @@ GList* gtk_container_get_children (GtkCo
 void gtk_container_remove (GtkContainer *container, GtkWidget *widget);
 void gtk_container_set_border_width (GtkContainer *container,guint border_width);
 GtkWidget * gtk_dialog_get_content_area (GtkDialog *dialog);
+GtkWidget *gtk_dialog_get_widget_for_response (GtkDialog *dialog, gint response_id);
 GtkWidget* gtk_dialog_new_with_buttons (const gchar *title,  GtkWindow *parent, GtkDialogFlags flags, const gchar *first_button_text, ...) __attribute__((__sentinel__));
 guint gtk_entry_buffer_delete_text (GtkEntryBuffer *buffer, guint position, gint n_chars);
 const gchar* gtk_entry_buffer_get_text (GtkEntryBuffer *buffer);
@@ -378,17 +383,20 @@ GtkWidget* gtk_widget_get_toplevel (GtkW
 void gtk_widget_grab_focus (GtkWidget *widget);
 gboolean gtk_widget_is_focus (GtkWidget *widget);
 void gtk_widget_set_has_tooltip (GtkWidget *widget, gboolean has_tooltip);
+void gtk_widget_set_sensitive (GtkWidget *widget, gboolean sensitive);
 void gtk_widget_set_size_request (GtkWidget *widget,gint width,gint height);
 void gtk_widget_set_tooltip_text (GtkWidget *widget, const gchar *text);
 void gtk_widget_show (GtkWidget *widget);
 void gtk_widget_show_all (GtkWidget *widget);
+void gtk_window_close (GtkWindow *window);
 void gtk_window_get_size (GtkWindow *window,gint *width,gint *height);
 void gtk_window_iconify (GtkWindow *window);
 gboolean gtk_window_is_active (GtkWindow *window);
+void gtk_window_maximize (GtkWindow *window);
+void gtk_window_present (GtkWindow *window);
 void gtk_window_set_default_size (GtkWindow *window, gint width, gint height);
 void gtk_window_set_icon (GtkWindow *window, GdkPixbuf *icon);
 void gtk_window_set_title (GtkWindow *window,const gchar *title);
-void gtk_window_maximize (GtkWindow *window);
 
 #ifdef __cplusplus
 }
--- sirc-1.orig/inc/in.h
+++ sirc-1/inc/in.h
@@ -1,10 +1,30 @@
+
+#include "sockaddr.h"
+
 struct in_addr {
-    unsigned long s_addr;  // load with inet_aton()
+    unsigned int s_addr;  // load with inet_aton()
 };
-struct sockaddr_in {
-    short            sin_family;   // e.g. AF_INET
-    unsigned short   sin_port;     // e.g. htons(3490)
-    struct in_addr   sin_addr;     // see struct in_addr, below
-    char             sin_zero[8];  // zero this if you want to
+
+typedef unsigned short int in_port_t;
+
+struct sockaddr_in
+{
+  sa_family_t sin_family;
+  in_port_t sin_port;
+  struct in_addr sin_addr;
+
+
+  unsigned char sin_zero[sizeof (struct sockaddr)
+    - (sizeof (unsigned short int))
+    - sizeof (in_port_t)
+    - sizeof (struct in_addr)];
 };
+
+//struct sockaddr_in {
+//   short            sin_family;   // e.g. AF_INET
+//    unsigned short   sin_port;     // e.g. htons(3490)
+//    struct in_addr   sin_addr;     // see struct in_addr, below
+//    char             sin_zero[8];  // zero this if you want to
+//};
+
 #define htons(a) (unsigned short)(((a)>>8) | ((a)<<8))
--- sirc-1.orig/inc/netdb.h
+++ sirc-1/inc/netdb.h
@@ -1,10 +1,13 @@
 
-struct hostent {
- char *h_name;
- char **h_aliases;
- int h_addrtype;
- int h_length;
- char **h_addr_list;
+struct hostent
+{
+  char *h_name;
+  char **h_aliases;
+  int h_addrtype;
+  int h_length;
+  char **h_addr_list;
+
+#define h_addr h_addr_list[0]
 
 };
 
--- /dev/null
+++ sirc-1/inc/sockaddr.h
@@ -0,0 +1,12 @@
+
+#ifndef sockaddr_set_once
+#define sockaddr_set_once
+
+typedef unsigned short sa_family_t;
+
+struct sockaddr {
+  sa_family_t sa_family;
+  char sa_data[14];
+};
+
+#endif
--- sirc-1.orig/inc/socket.h
+++ sirc-1/inc/socket.h
@@ -2,12 +2,9 @@
 #define AF_INET 2
 #define SOCK_STREAM 1
 
-typedef unsigned short sa_family_t;
-struct sockaddr {
-  sa_family_t sa_family;
-  char sa_data[14];
-};
-typedef int socklen_t;//int32_t
+#include "sockaddr.h"
+
+typedef unsigned int socklen_t;
 
 #ifdef __cplusplus
 extern "C" {
--- sirc-1.orig/inc/stdlib.h
+++ sirc-1/inc/stdlib.h
@@ -2,6 +2,7 @@
 #include "inc/stddef.h"
 
 #define EXIT_SUCCESS 0
+#define EXIT_FAILURE 1
 
 #ifdef __cplusplus
 extern "C" {
--- sirc-1.orig/main.c
+++ sirc-1/main.c
@@ -185,6 +185,8 @@ struct stk_s{
 	gboolean timestamp;gboolean wnotice;
 	BOOL user_irc_free;unsigned char con_type;BOOL show_msgs;
 	char args_short[number_of_args];
+	GtkWidget*organizer;
+	BOOL handle_command_line_callback_was_executed;
 };
 static int autoconnect=-1;static BOOL autoconnect_pending=FALSE;
 static GSList*con_group;
@@ -375,10 +377,14 @@ static void create_socket(char*hostname,
 		plain_socket = socket(AF_INET, SOCK_STREAM, 0);
 		if(plain_socket!=-1){
 			dest_addr.sin_family=AF_INET;
-			dest_addr.sin_port=htons(port);
-			dest_addr.sin_addr.s_addr = *(unsigned long*)((void*)(host->h_addr_list[0]));
+
+			//dest_addr.sin_addr.s_addr = *(unsigned long*)((void*)(host->h_addr_list[0]));
 			//  memset(&(dest_addr.sin_zero), '\0', 8);//string
 			//"setting it to zero doesn't seem to be actually necessary"
+			memcpy((char *) &dest_addr.sin_addr, (char *) host->h_addr,host->h_length);
+
+			dest_addr.sin_port=htons(port);
+
 			  /* ---------------------------------------------------------- *
 			   * Try to make the host connect here                          *
 			   * ---------------------------------------------------------- */
@@ -2090,6 +2096,9 @@ static void chan_reMin(struct stk_s*ps){
 	                       &ps->chan_min,nullptr,(GConnectFlags)0);
 	GtkWidget*box=gtk_dialog_get_content_area((GtkDialog*)dialog);
 	gtk_box_pack_start((GtkBox*)box, entry, TRUE, TRUE, 0);
+
+	gtk_widget_grab_focus(gtk_dialog_get_widget_for_response((GtkDialog*)dialog, GTK_RESPONSE_OK));//this to see the placeholder
+
 	gtk_widget_show_all (dialog);
 }
 static void reload_tabs(GtkWidget*menu_from,GtkWidget*menu,GtkNotebook*notebook){
@@ -2205,6 +2214,62 @@ static void gather_free(size_t sum,char*
 		free(ins);
 	}
 }
+
+#define bind "Bind"
+#define unbind "UnBind"
+static void deciderfn(GtkButton*a){
+	if(strcmp(gtk_button_get_label(a),bind)==0)gtk_button_set_label(a,unbind);
+	else gtk_button_set_label(a,bind);
+}
+
+static void organizer_populate(GtkWidget*window){
+	GtkNotebook*nb = (GtkNotebook*)gtk_notebook_new ();
+	GtkWidget*top=gtk_box_new(GTK_ORIENTATION_HORIZONTAL,0);
+
+	GtkWidget*decider=gtk_button_new_with_label(bind);
+	g_signal_connect_data (decider, "clicked",G_CALLBACK(deciderfn),nullptr,nullptr,(GConnectFlags)0);
+	gtk_box_pack_start((GtkBox*)top,decider,FALSE,FALSE,0);
+
+	GtkWidget*dirs=gtk_combo_box_text_new();
+	gtk_box_pack_start((GtkBox*)top,dirs,TRUE,TRUE,0);
+	GtkWidget*add_folder=gtk_button_new_with_label("+");
+	gtk_widget_set_sensitive (add_folder,FALSE);
+	gtk_box_pack_start((GtkBox*)top,add_folder,FALSE,FALSE,0);
+	GtkWidget*remove_folder=gtk_button_new_with_label("-");
+	gtk_widget_set_sensitive (remove_folder,FALSE);
+	gtk_box_pack_start((GtkBox*)top,remove_folder,FALSE,FALSE,0);
+	GtkWidget*box=gtk_box_new(GTK_ORIENTATION_VERTICAL,0);
+	gtk_box_pack_start((GtkBox*)box,top,FALSE,FALSE,0);
+	gtk_box_pack_start((GtkBox*)box,(GtkWidget*)nb,TRUE,TRUE,0);
+	gtk_container_add ((GtkContainer*)window, box);
+}
+
+static void organizer_destroy_from_mainclose(struct stk_s*ps){
+	gtk_widget_destroy(menuwithtabs);
+	if(ps->organizer!=nullptr)gtk_window_close(ps->organizer);
+}
+static void organizer_destroy_from_selfclose(struct stk_s*ps){
+	ps->organizer=nullptr;
+}
+static void organizer_popup(struct stk_s*ps){
+	if(ps->organizer==nullptr){
+		GtkWidget *dialog = gtk_application_window_new (ps->app);
+		ps->organizer=dialog;
+		//GtkWidget *dialog = gtk_dialog_new_with_buttons ("Organizer",  nullptr, (GtkDialogFlags)0,  "_Done",GTK_RESPONSE_NONE,nullptr);//still is on top
+
+		gtk_window_set_title ((GtkWindow*)dialog, "Organizer");
+		g_signal_connect_data (dialog,"destroy",G_CALLBACK(organizer_destroy_from_selfclose),ps,nullptr,G_CONNECT_SWAPPED);
+
+		int w;int h;
+		gtk_window_get_size (ps->main_win,&w,&h);w*=0xf;
+		gtk_window_set_default_size((GtkWindow*)dialog,w/0x10,h);//h is not doing right for this width
+
+		organizer_populate(dialog);
+
+		gtk_widget_show_all (dialog);
+		//gtk_window_unmaximize((GtkWindow*)dialog);//at this dims will be automaximized, at dims/2 will not be automaximized  //is not working here
+	}else gtk_window_present(ps->organizer);
+}
 static void
 activate (GtkApplication* app,
           struct stk_s*ps)
@@ -2213,7 +2278,10 @@ activate (GtkApplication* app,
 	/* Create a window with a title, and a default size */
 	GtkWidget *window = gtk_application_window_new (app);
 	menuwithtabs=gtk_menu_new();
-	g_signal_connect_data (window, "destroy",G_CALLBACK(gtk_widget_destroy),menuwithtabs,nullptr,G_CONNECT_SWAPPED);
+	//
+	g_signal_connect_data (window,"destroy",G_CALLBACK(organizer_destroy_from_mainclose),ps,nullptr,G_CONNECT_SWAPPED);
+	ps->organizer=nullptr;
+	//moved to organizer_destroy_from_mainclose: g_signal_connect_data (window,"destroy",G_CALLBACK(gtk_widget_destroy),menuwithtabs,nullptr,G_CONNECT_SWAPPED);
 	//
 	gtk_window_set_title ((GtkWindow*) window, "IRC");
 	if(ps->dim[0]!=-1)
@@ -2276,9 +2344,13 @@ activate (GtkApplication* app,
 	gtk_menu_item_set_submenu((GtkMenuItem*)menu_item,name_off_menu);
 	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
 	//
-	show_time=(GtkCheckMenuItem*)gtk_check_menu_item_new_with_label("Show Message Timestamp");
-	if(ps->timestamp)gtk_check_menu_item_set_active(show_time,TRUE);
-	gtk_menu_shell_append ((GtkMenuShell*)menu,(GtkWidget*)show_time);gtk_widget_show((GtkWidget*)show_time);
+	menu_item = gtk_menu_item_new_with_label ("Organizer");
+	g_signal_connect_data (menu_item, "activate",G_CALLBACK (organizer_popup),ps,nullptr,G_CONNECT_SWAPPED);
+	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
+	//
+	menu_item = gtk_menu_item_new_with_label ("Copy to Clipboard");
+	g_signal_connect_data (menu_item, "activate",G_CALLBACK (clipboard_tev),ps->notebook,nullptr,G_CONNECT_SWAPPED);
+	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
 	//
 	GtkWidget*menu_con=gtk_menu_item_new_with_label("Connection Type");
 	GtkMenuShell*menucon=(GtkMenuShell*)gtk_menu_new();
@@ -2291,19 +2363,19 @@ activate (GtkApplication* app,
 	gtk_menu_shell_append ((GtkMenuShell*)menu,menu_con);
 	gtk_widget_show_all(menu_con);
 	//
-	menu_item = gtk_menu_item_new_with_label ("Copy to Clipboard");
-	g_signal_connect_data (menu_item, "activate",G_CALLBACK (clipboard_tev),ps->notebook,nullptr,G_CONNECT_SWAPPED);
+	menu_item = gtk_menu_item_new_with_label ("Channel Minimum Users");
+	g_signal_connect_data (menu_item, "activate",G_CALLBACK (chan_reMin),ps,nullptr,G_CONNECT_SWAPPED);
 	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
 	//
+	show_time=(GtkCheckMenuItem*)gtk_check_menu_item_new_with_label("Show Message Timestamp");
+	if(ps->timestamp)gtk_check_menu_item_set_active(show_time,TRUE);
+	gtk_menu_shell_append ((GtkMenuShell*)menu,(GtkWidget*)show_time);gtk_widget_show((GtkWidget*)show_time);
+	//
 	channels_counted=(GtkCheckMenuItem*)gtk_check_menu_item_new_with_label("Sort Channels by Number");
 	gtk_check_menu_item_set_active(channels_counted,TRUE);
 	g_signal_connect_data (channels_counted, "toggled",G_CALLBACK(channels_sort),nullptr,nullptr,(GConnectFlags)0);
 	gtk_menu_shell_append ((GtkMenuShell*)menu,(GtkWidget*)channels_counted);gtk_widget_show((GtkWidget*)channels_counted);
 	//
-	menu_item = gtk_menu_item_new_with_label ("Channel Minimum Users");
-	g_signal_connect_data (menu_item, "activate",G_CALLBACK (chan_reMin),ps,nullptr,G_CONNECT_SWAPPED);
-	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
-	//
 	menu_item = gtk_menu_item_new_with_label ("Shutdown Connection");
 	g_signal_connect_data (menu_item, "activate",G_CALLBACK (action_to_close),nullptr,nullptr,(GConnectFlags)0);
 	gtk_menu_shell_append ((GtkMenuShell*)menu, menu_item);gtk_widget_show(menu_item);
@@ -2384,7 +2456,12 @@ static void remove_config(){
 		}
 	}
 }
+
+//struct stack_dict { GHashTable *values;  gsize magic;};
+//#define GVSD(d)                 ((struct stack_dict *) (d))
+
 static gint handle_local_options (struct stk_s* ps, GVariantDict*options){
+	//1 dimensions_id
 	char*result;
 	if(g_variant_dict_lookup (options, ps->args[dimensions_id], "s", &result)){//missing argument is not reaching here
 		char*b=strchr(result,'x');
@@ -2393,79 +2470,93 @@ static gint handle_local_options (struct
 		ps->dim[1]=b!=nullptr?atoi(b):ps->dim[0];
 		g_free(result);
 	}else ps->dim[0]=-1;//this is default at gtk
-	//
+	//2 connection_number_id
+	int nr;
+	if (g_variant_dict_lookup (options,ps->args[connection_number_id], "i", &nr)){//if 0 this is false here
+		if(nr<con_nr_min||nr>con_nr_max){
+			printf("%s must be from " con_nr_nrs " interval, \"%i\" given.\n",ps->args[connection_number_id],nr);
+			return EXIT_FAILURE;//warning: this is same as not executing this function, if wanting that return, change this
+		}
+		ps->con_type=(unsigned char)nr;
+	}else ps->con_type=default_connection_number;
+	//3 right_id
+	if (g_variant_dict_lookup (options,ps->args[right_id], "i", &ps->separator)==FALSE)//they are already G_OPTION_ARG_INT (gint)
+	ps->separator=default_right;//passed to gtk_widget_set_size_request
+	//4 refresh_id
+	//if (g_variant_dict_lookup (options,ps->args[refresh_id], "i", &ps->refresh)==FALSE)//but at 0 is not ok
+	//same for gpointer p;g_hash_table_lookup_extended(GVSD(options)->values,ps->args[refresh_id],nullptr,&p);//pointer(not getting the value)/0
+	char*temp;
+	if (g_variant_dict_lookup (options,ps->args[refresh_id], "s", &temp)){
+		if(sscanf(temp,"%u",&ps->refresh)!=1){//EOF is not, "" is error catched before entering the dict
+			puts("Refresh interval argument error");
+			return EXIT_FAILURE;
+		}
+		g_free(temp);
+	}else ps->refresh=default_refresh;//passed to g_timeout_add
+	//5 timestamp_id
+	ps->timestamp=g_variant_dict_contains(options,ps->args[timestamp_id]);
+	//6 chan_min_id
+	if (g_variant_dict_lookup (options,ps->args[chan_min_id], "i", &ps->chan_min)==FALSE)
+		ps->chan_min=default_chan_min;
+	//7 visible_id
+	ps->visible=g_variant_dict_contains(options,ps->args[visible_id]);
+	//8 hide_id
+	ps->show_msgs=g_variant_dict_contains(options,ps->args[hide_id])==FALSE;
+	//9 maximize_id
+	ps->maximize=g_variant_dict_contains(options,ps->args[maximize_id]);
+	//10 minimize_id
+	ps->minimize=g_variant_dict_contains(options,ps->args[minimize_id]);
+	//11 welcomeNotice_id
+	ps->wnotice=g_variant_dict_contains(options,ps->args[welcomeNotice_id]);
+	//12 chans_max_id
+	if (g_variant_dict_lookup (options,ps->args[chans_max_id], "i", &ps->chans_max)==FALSE)
+		ps->chans_max=default_chans_max;
+	//13 send_history_id
+	if (g_variant_dict_lookup (options,ps->args[send_history_id],"i",&ps->send_history)==FALSE)
+		ps->send_history=default_send_history;
+
+	//14 removeconf_id
+	if(g_variant_dict_contains(options,ps->args[removeconf_id])/*true*/){
+		remove_config();
+		return EXIT_SUCCESS;
+	}
+
+	//these are after allocs where set to allocated mem or 0/nullptr
+	ps->handle_command_line_callback_was_executed=TRUE;
+
+	//15 nick_id
 	if (g_variant_dict_lookup (options,ps->args[nick_id],"s",&ps->nick)==FALSE)
 		ps->nick=nullptr;
-	//
-	if (g_variant_dict_lookup (options,ps->args[right_id], "i", &ps->separator)==FALSE)
-		ps->separator=default_right;
-	//
-	if (g_variant_dict_lookup (options,ps->args[refresh_id], "i", &ps->refresh)==FALSE)
-		ps->refresh=default_refresh;
-	//
+	//16 welcome_id
 	if(g_variant_dict_lookup(options,ps->args[welcome_id],"s",&ps->welcome)==FALSE)
 		ps->welcome=nullptr;
-	//
-	ps->timestamp=g_variant_dict_contains(options,ps->args[timestamp_id]);
-	//
-	if(g_variant_dict_lookup(options,ps->args[user_id],"s",&ps->user_irc))
+	//17 user_id
+	if(g_variant_dict_lookup(options,ps->args[user_id],"s",&ps->user_irc))//they are already G_OPTION_ARG_STRING
 		ps->user_irc_free=TRUE;//-Wstring-compare tells the result is unspecified against a #define
 	else{ps->user_irc=default_user;ps->user_irc_free=FALSE;}
-	//
-	if (g_variant_dict_lookup (options,ps->args[chan_min_id], "i", &ps->chan_min)==FALSE)
-		ps->chan_min=default_chan_min;
-	//
-	ps->visible=g_variant_dict_contains(options,ps->args[visible_id]);
-	//
+	//18 log_id
 	GVariant*v=g_variant_dict_lookup_value(options,ps->args[log_id],G_VARIANT_TYPE_STRING);
 	if(v!=nullptr){
-		const char*a=g_variant_get_string(v,nullptr);
+		const char*a=g_variant_get_string(v,nullptr);//return [transfer none]
 		log_file=open(a,O_CREAT|O_WRONLY|O_TRUNC,S_IRUSR|S_IWUSR);
+		g_variant_unref(v);
 	}
-	//
+	//19 ignore_id
 	if(g_variant_dict_lookup(options,ps->args[ignore_id],"s",&ps->ignores_mem))
 		gather_parse(&ps->ignores_sum,ps->ignores_mem,&ps->ignores);
 	else ps->ignores_sum=0;
-	//
+	//20 run_id
 	if(g_variant_dict_lookup(options,ps->args[run_id],"s",&ps->execute_newmsg)==FALSE)
 		ps->execute_newmsg=nullptr;
-	//
+	//21 autojoin_id
 	if(g_variant_dict_lookup(options,ps->args[autojoin_id],"s",&ps->ajoins_mem))
 		parse_autojoin(ps);
 	else ps->ajoins_sum=0;
-	//
+	//22 password_id
 	if (g_variant_dict_lookup (options,ps->args[password_id],"s",&ps->password)==FALSE)
 		ps->password=nullptr;
-	//
-	ps->show_msgs=g_variant_dict_contains(options,ps->args[hide_id])==FALSE;
-	//
-	ps->maximize=g_variant_dict_contains(options,ps->args[maximize_id]);
-	//
-	ps->minimize=g_variant_dict_contains(options,ps->args[minimize_id]);
-	//
-	ps->wnotice=g_variant_dict_contains(options,ps->args[welcomeNotice_id]);
-	//
-	if (g_variant_dict_lookup (options,ps->args[chans_max_id], "i", &ps->chans_max)==FALSE)
-		ps->chans_max=default_chans_max;
-	//
-	if (g_variant_dict_lookup (options,ps->args[send_history_id],"i",&ps->send_history)==FALSE)
-		ps->send_history=default_send_history;
-
-	//these are after allocs where set to allocated mem or 0/nullptr
 
-	if(g_variant_dict_contains(options,ps->args[removeconf_id])/*true*/){
-		remove_config();
-		return 0;
-	}
-
-	int nr;
-	if (g_variant_dict_lookup (options,ps->args[connection_number_id], "i", &nr)){//if 0 this is false here
-		if(nr<con_nr_min||nr>con_nr_max){
-			printf("%s must be from " con_nr_nrs " interval, \"%i\" given.\n",ps->args[connection_number_id],nr);
-			return 0;
-		}
-		ps->con_type=(unsigned char)nr;
-	}else ps->con_type=default_connection_number;
+	//23 autoconnect_id has a callback
 
 	return -1;
 }
@@ -2501,7 +2592,7 @@ int main (int    argc,
 		ps.args[hide_id]="hide";ps.args_short[hide_id]='h';
 		g_application_add_main_option((GApplication*)app,ps.args[hide_id],ps.args_short[hide_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_NONE,"Don't display activity messages at " home_string " tab (join,part,...).",nullptr);
 		ps.args[ignore_id]="ignore";ps.args_short[ignore_id]='i';
-		g_application_add_main_option((GApplication*)app,ps.args[ignore_id],ps.args_short[ignore_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Ignore private messages from nicknames. The format is te same as \"" autojoin_str "\".","\"I1,N1,N2...NN I2... ... IN...\"");
+		g_application_add_main_option((GApplication*)app,ps.args[ignore_id],ps.args_short[ignore_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Ignore private messages from nicknames. The format is the same as \"" autojoin_str "\".","\"I1,N1,N2...NN I2... ... IN...\"");
 		ps.args[log_id]="log";ps.args_short[log_id]='l';
 		g_application_add_main_option((GApplication*)app,ps.args[log_id],ps.args_short[log_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Log private chat to filename.","FILENAME");//_FILENAME
 		ps.args[maximize_id]="maximize";ps.args_short[maximize_id]='z';
@@ -2512,8 +2603,8 @@ int main (int    argc,
 		g_application_add_main_option((GApplication*)app,ps.args[nick_id],ps.args_short[nick_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Default nickname","NICKNAME");
 		ps.args[password_id]="password";ps.args_short[password_id]='p';
 		g_application_add_main_option((GApplication*)app,ps.args[password_id],ps.args_short[password_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Default password (blank overwrite with \"" parse_host_left "host...\", the format is at the g.u.i. help)","PASSWORD");
-		ps.args[refresh_id]="refresh";ps.args_short[refresh_id]='f';
-		g_application_add_main_option((GApplication*)app,ps.args[refresh_id],ps.args_short[refresh_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_INT,"Refresh channels interval in seconds. Default " INT_CONV_STR(default_refresh) ". Less than 1 to disable.","SECONDS");
+		ps.args[refresh_id]="refresh";ps.args_short[refresh_id]='f';//when ARG_INT and comming 0 it will not go further into the dict to know, ARG_STRING can do it
+		g_application_add_main_option((GApplication*)app,ps.args[refresh_id],ps.args_short[refresh_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_STRING,"Refresh channels interval in seconds. Default " INT_CONV_STR(default_refresh) ". Less than 1 to disable.","SECONDS");
 		ps.args[right_id]="right";ps.args_short[right_id]='r';
 		g_application_add_main_option((GApplication*)app,ps.args[right_id],ps.args_short[right_id],G_OPTION_FLAG_IN_MAIN,G_OPTION_ARG_INT,"Right pane size, default " INT_CONV_STR(default_right),"WIDTH");
 		ps.args[run_id]="run";ps.args_short[run_id]='x';
@@ -2536,24 +2627,29 @@ int main (int    argc,
 		g_signal_connect_data (app, "activate", G_CALLBACK (activate), &ps, nullptr,(GConnectFlags) 0);
 		//  if(han>0)
 		ps.argc=argc;ps.argv=argv;
-		send_entry_list=g_queue_new();
+		ps.handle_command_line_callback_was_executed=FALSE;
 
+		send_entry_list=g_queue_new();
 		info_path_name_set(argv[0]);
-		g_application_run ((GApplication*)app, argc, argv);//gio.h>gapplication.h gio-2.0
+
+		int exitcode=g_application_run ((GApplication*)app, argc, argv);//gio.h>gapplication.h gio-2.0
 		g_object_unref (app);
 
-		g_queue_free_full(send_entry_list,g_free);
-		if(ps.nick!=nullptr)g_free(ps.nick);
-		if(ps.welcome!=nullptr)g_free(ps.welcome);
-		#pragma GCC diagnostic push
-		#pragma GCC diagnostic ignored "-Wcast-qual"		
-		if(ps.user_irc_free)g_free((gpointer)ps.user_irc);
-		#pragma GCC diagnostic pop
 		if(info_path_name!=nullptr)free(info_path_name);
-		if(log_file!=-1)close(log_file);
-		if(ps.execute_newmsg!=nullptr)g_free(ps.execute_newmsg);
-		gather_free(ps.ajoins_sum,ps.ajoins_mem,ps.ajoins);
-		gather_free(ps.ignores_sum,ps.ignores_mem,ps.ignores);
+		g_queue_free_full(send_entry_list,g_free);
+
+		if(ps.handle_command_line_callback_was_executed==TRUE){//or !=EXIT_FAILURE, but can be many exit scenarios
+			if(ps.nick!=nullptr)g_free(ps.nick);
+			if(ps.welcome!=nullptr)g_free(ps.welcome);
+			#pragma GCC diagnostic push
+			#pragma GCC diagnostic ignored "-Wcast-qual"
+			if(ps.user_irc_free)g_free((gpointer)ps.user_irc);
+			#pragma GCC diagnostic pop
+			if(log_file!=-1)close(log_file);
+			if(ps.execute_newmsg!=nullptr)g_free(ps.execute_newmsg);
+			gather_free(ps.ajoins_sum,ps.ajoins_mem,ps.ajoins);
+			gather_free(ps.ignores_sum,ps.ignores_mem,ps.ignores);
+		}
 	}else puts("openssl error");
 	return EXIT_SUCCESS;
 }
@@ -2561,12 +2657,11 @@ int main (int    argc,
 /* example entries for .sircinfo
 irc.libera.chat:6697
 chat.freenode.net:6697,7000,7070
-@192.168.4.3     
 @bucharest.ro.eu.undernet.org:6660-6669
 chat.freenode.net:6697,7000,7070;6665-6667,8000-8002
-@192.168.4.1
+@127.0.0.1
 zonder:@irc.us.ircnet.net
 @0.0.0.0
-@192.168.4.3:6666-6667
-@192.168.4.3:6667;6666,6667-6667
+@127.0.0.1:6666-6667
+@127.0.0.1:6697;6667-6669
 */
--- /dev/null
+++ sirc-1/test
@@ -0,0 +1,5 @@
+
+if [ -n "${1}" ]; then
+dbg="gdb --args "
+fi
+${dbg} ./sirc -z -t -f 0
