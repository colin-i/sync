Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+145) xenial; urgency=medium
 .
   * ounused reallocs better
Author: bc <bc@bc-Type1ProductConfigId>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2024-02-19

--- /dev/null
+++ ocompiler-1/old
@@ -0,0 +1,71 @@
+File ID: 12wMt7Pby5CEE9gb8poK7tGtnruTDvHpC
+<p>Found file: ./ocompiler-1-5+144.x86_64.rpm, 12wMt7Pby5CEE9gb8poK7tGtnruTDvHpC, 2024-02-19T08:16:05.783Z, 69641, https://drive.google.com/uc?id=12wMt7Pby5CEE9gb8poK7tGtnruTDvHpC&export=download
+anyoneWithLink</p>
+<p>Found file: ./ocompiler-1-5+142.x86_64.rpm, 1NuUvMKNCvor96eMNljeyvbNJyXvcs0dd, 2024-02-15T06:58:30.503Z, 69735, https://drive.google.com/uc?id=1NuUvMKNCvor96eMNljeyvbNJyXvcs0dd&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+141.x86_64.rpm, 1y1hyR5Lj9M2p0Yz65U553nCxlbX2NlpS, 2024-01-07T11:47:00.292Z, 69664, https://drive.google.com/uc?id=1y1hyR5Lj9M2p0Yz65U553nCxlbX2NlpS&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+140.x86_64.rpm, 16AJ1l28fkTsCvrfV1-xRdglpff0pU0-M, 2023-12-30T05:54:08.472Z, 70133, https://drive.google.com/uc?id=16AJ1l28fkTsCvrfV1-xRdglpff0pU0-M&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+139.x86_64.rpm, 1neBDKEBlwpDL-WajhK5bLyonyBuL7hVV, 2023-12-28T13:06:09.194Z, 69619, https://drive.google.com/uc?id=1neBDKEBlwpDL-WajhK5bLyonyBuL7hVV&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+138.x86_64.rpm, 1GgN1yYhZSB8YL5EVERaNKtp_r6VIpTvl, 2023-12-24T11:55:41.262Z, 69610, https://drive.google.com/uc?id=1GgN1yYhZSB8YL5EVERaNKtp_r6VIpTvl&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+137.x86_64.rpm, 1ra0VXgFWYbvaauEEQboNbR8OMTvhegUe, 2023-12-24T04:49:39.787Z, 69592, https://drive.google.com/uc?id=1ra0VXgFWYbvaauEEQboNbR8OMTvhegUe&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+136.x86_64.rpm, 1DmTIKJ-f-LqDsrN4TrrqKDEZlwtX-wef, 2023-12-23T15:59:55.368Z, 69763, https://drive.google.com/uc?id=1DmTIKJ-f-LqDsrN4TrrqKDEZlwtX-wef&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+135.x86_64.rpm, 1eIb9HxzUBYHFtGW5mMWyj5MnoX5O1KxZ, 2023-12-23T13:56:58.588Z, 69691, https://drive.google.com/uc?id=1eIb9HxzUBYHFtGW5mMWyj5MnoX5O1KxZ&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+134.x86_64.rpm, 1dsoBW85egpSX1DLzLg0quGWy8-UPTxpa, 2023-12-23T10:21:30.371Z, 69746, https://drive.google.com/uc?id=1dsoBW85egpSX1DLzLg0quGWy8-UPTxpa&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+133.x86_64.rpm, 1A_YjZQCguHQz03-CgP822HwdMcQmbdU1, 2023-12-23T04:36:44.076Z, 69344, https://drive.google.com/uc?id=1A_YjZQCguHQz03-CgP822HwdMcQmbdU1&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+132.x86_64.rpm, 1Z3YQwRRlBDWGS-7dAKB7TgqG0-wpEOXs, 2023-12-22T13:23:42.575Z, 69395, https://drive.google.com/uc?id=1Z3YQwRRlBDWGS-7dAKB7TgqG0-wpEOXs&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+131.x86_64.rpm, 1sgkT4zZkKK_g5XJDF2X2EPcf-NG9PH9D, 2023-12-20T12:27:23.298Z, 69055, https://drive.google.com/uc?id=1sgkT4zZkKK_g5XJDF2X2EPcf-NG9PH9D&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+130.x86_64.rpm, 1mn34G3kNJ6R6qhYHjbMN-nLv4CoikayM, 2023-12-18T13:26:09.306Z, 68922, https://drive.google.com/uc?id=1mn34G3kNJ6R6qhYHjbMN-nLv4CoikayM&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+129.x86_64.rpm, 1cnDZ8cSmvJzw4mFEajOIBuMONWl9_paL, 2023-12-17T16:43:23.017Z, 68913, https://drive.google.com/uc?id=1cnDZ8cSmvJzw4mFEajOIBuMONWl9_paL&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+127.x86_64.rpm, 1b919dA9xOnF7abXvogG65aUPbSevbD1v, 2023-12-17T13:50:27.308Z, 68980, https://drive.google.com/uc?id=1b919dA9xOnF7abXvogG65aUPbSevbD1v&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+126.x86_64.rpm, 1rymbZCtmIZ_4F29mHDRN0zrgEMBKktsL, 2023-12-15T13:52:42.465Z, 68885, https://drive.google.com/uc?id=1rymbZCtmIZ_4F29mHDRN0zrgEMBKktsL&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+125.x86_64.rpm, 10Jw0V0M1d4p6K6WI4Phz9org6ILOTHpY, 2023-12-14T21:21:33.652Z, 68913, https://drive.google.com/uc?id=10Jw0V0M1d4p6K6WI4Phz9org6ILOTHpY&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+124.x86_64.rpm, 1Q-l2Ovv4njUWQ5CQSfariZ0aoe-uVaDZ, 2023-12-14T13:22:31.316Z, 68864, https://drive.google.com/uc?id=1Q-l2Ovv4njUWQ5CQSfariZ0aoe-uVaDZ&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+123.x86_64.rpm, 1fSphOsqSyTjQXwz-PgKSGncrU5-_w3kA, 2023-12-12T11:15:42.185Z, 68473, https://drive.google.com/uc?id=1fSphOsqSyTjQXwz-PgKSGncrU5-_w3kA&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+119.x86_64.rpm, 1Ugb3Ix7-f8Ho7vSayqht_EpHtMP3cCi7, 2023-12-08T09:11:30.496Z, 68834, https://drive.google.com/uc?id=1Ugb3Ix7-f8Ho7vSayqht_EpHtMP3cCi7&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+118.x86_64.rpm, 1XhJ7mNelj8C9O7peSOhDm7xTbyc09EIv, 2023-12-07T17:00:54.254Z, 68231, https://drive.google.com/uc?id=1XhJ7mNelj8C9O7peSOhDm7xTbyc09EIv&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+117.x86_64.rpm, 1mPnNxVoS7UjAO9GiSnY2KeUuwLHeBH5H, 2023-12-07T14:00:38.468Z, 68305, https://drive.google.com/uc?id=1mPnNxVoS7UjAO9GiSnY2KeUuwLHeBH5H&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+116.x86_64.rpm, 1lHE4nDmPxHwvM8AMN6t9R87BFtbQxBZS, 2023-12-07T13:05:12.249Z, 68224, https://drive.google.com/uc?id=1lHE4nDmPxHwvM8AMN6t9R87BFtbQxBZS&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+115.x86_64.rpm, 1utqWfoFjLX4nJSDlFm81-MO7-Y_4TSm5, 2023-12-06T07:31:26.997Z, 68355, https://drive.google.com/uc?id=1utqWfoFjLX4nJSDlFm81-MO7-Y_4TSm5&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+114.x86_64.rpm, 1lrJuO2v99zp24qwEeom8h2uiHroO78i8, 2023-12-04T17:08:05.785Z, 68241, https://drive.google.com/uc?id=1lrJuO2v99zp24qwEeom8h2uiHroO78i8&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+113.x86_64.rpm, 1TF6p22aESDnfeJc9YRchf1anwCp5M28C, 2023-12-04T16:26:51.426Z, 68295, https://drive.google.com/uc?id=1TF6p22aESDnfeJc9YRchf1anwCp5M28C&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+110.x86_64.rpm, 1p9pR6w1wlJ7SMN06NuZc4MAY8mRLO5bB, 2023-12-04T08:48:00.105Z, 67194, https://drive.google.com/uc?id=1p9pR6w1wlJ7SMN06NuZc4MAY8mRLO5bB&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+109.x86_64.rpm, 18QL85KhT36MCDaAHvb1sYiTriMAmBu27, 2023-11-30T13:27:20.209Z, 66907, https://drive.google.com/uc?id=18QL85KhT36MCDaAHvb1sYiTriMAmBu27&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+108.x86_64.rpm, 10roEk-tuk6POWtpOB25MFyFoqmbAhzie, 2023-11-29T15:28:07.278Z, 66568, https://drive.google.com/uc?id=10roEk-tuk6POWtpOB25MFyFoqmbAhzie&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+107.x86_64.rpm, 1E16Y8q6SiNmf4pcKMDp_ZFrnnomaoSgw, 2023-11-26T09:02:42.259Z, 66955, https://drive.google.com/uc?id=1E16Y8q6SiNmf4pcKMDp_ZFrnnomaoSgw&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+105.x86_64.rpm, 1GCbazf8mz5iyI5CgImI0SMcA2onhyji7, 2023-11-25T16:40:31.101Z, 66879, https://drive.google.com/uc?id=1GCbazf8mz5iyI5CgImI0SMcA2onhyji7&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+102.x86_64.rpm, 1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O, 2023-11-24T14:29:49.425Z, 66231, https://drive.google.com/uc?id=1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+100.x86_64.rpm, 1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac, 2023-11-17T15:39:47.661Z, 65462, https://drive.google.com/uc?id=1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac&export=download
+anyoneWithLink</p>
+<p>Found file: ocompiler-1-5+98.x86_64.rpm, 1bNGKHelihqwRjqxpb43YwfcYlx1J_L78, 2023-11-17T15:27:56.867Z, 64802, https://drive.google.com/uc?id=1bNGKHelihqwRjqxpb43YwfcYlx1J_L78&export=download
+anyoneWithLink</p>
--- ocompiler-1.orig/ounused/files.oc
+++ ocompiler-1/ounused/files.oc
@@ -3,7 +3,10 @@ const FALSE=0
 const TRUE=1
 
 #const size_cont=dword+:
-const size_cont=:+dword
+const cont_mem=:
+const cont_size=dword
+const cont_sizes=cont_size+dword
+const size_cont=cont_mem+cont_sizes
 const size_conts=5*size_cont
 
 function fileentry_add(sd full,sd len)
@@ -73,7 +76,7 @@ function fileentry_exists(sd s)
 	sd init;set init fls#
 	sv p
 	set p init
-	add fls :
+	add fls (cont_mem)
 	set fls fls#d^
 	add fls p
 	while p!=fls
--- ocompiler-1.orig/ounused/inits.oc
+++ ocompiler-1/ounused/inits.oc
@@ -3,28 +3,39 @@ include "./mem.oc"
 
 function allocs()
 	sv ip%imp_mem_p
-	call alloc(ip)
+	call alloc1(ip)
 	sv fp%fn_mem_p
-	call alloc(fp)
-	#
+	call alloc1(fp)
+
 	sv cwd%cwd_p
 	setcall cwd# get_current_dir_name()
 	if cwd#=(NULL)
 		call erExit("get_current_dir_name error")
 	endif
-	sd size=:
+	sd size=cont_mem
 	add size cwd
 	sd sz
 	setcall sz strlen(cwd#)
 	inc sz
 	set size# sz
+	add size (cont_size)
+	set size# sz
 	call ralloc(cwd,(dword))
 	set cwd cwd#
 	add cwd sz
 	set cwd#d^ sz
-	#sv cursor=dword;add cursor cwd;setcall cursor# get_current_dir_name();if cursor#==(NULL);call erExit("get_current_dir_name error");endif;sd size;setcall size strlen(cursor#);inc size;set cwd#d^ size;call ralloc(cwd,(dword));set cursor cursor#;add cursor size;set cursor#d^ size
+
 	sv fls%files_p
-	call alloc(fls)
+	call alloc1(fls)
 	sv lvs%levels_p
-	call alloc(lvs)
+	call alloc1(lvs)
+
+	sv linemem%logf_mem_p
+	sd er;set er malloc_throwless(linemem,10)
+	if er=(NULL)
+		add linemem (cont_mem)
+		set linemem#d^ 10
+		ret
+	end
+	call erExit(er)
 endfunction
--- ocompiler-1.orig/ounused/loop.oc
+++ ocompiler-1/ounused/loop.oc
@@ -18,11 +18,11 @@ function log_file(ss file)
 		sv fp%logf_p
 		set fp# f
 		sv p%logf_mem_p
+		sd bsz=cont_mem;add bsz p
 		sd sz=0
 		sd link=TRUE
 		while sz!=-1
-			sd bsz
-			setcall sz getline(p,#bsz,f)
+			setcall sz getline(p,bsz,f)
 			if sz!=-1
 				#knowing line\r\n from ocompiler
 				sub sz 2
@@ -137,9 +137,9 @@ function incrementdir(ss s,sd sz)
 endfunction
 function decrementdir()
 	sv cwd%cwd_p
-	sd mem=:
+	sd mem=cont_mem
 	add mem cwd
-	set mem mem#v^
+	set mem mem#
 	add mem cwd#
 	#sd cwd%cwd_p;sd mem=dword;add mem cwd;set mem mem#v^;add mem cwd#
 	sub mem (dword)
--- /dev/null
+++ ocompiler-1/ounused/mdc
@@ -0,0 +1,3 @@
+
+make clean && \
+OFLAGSEXTRA="function_name 1 nul_res_pref 1" make linkerflags= $@
--- ocompiler-1.orig/ounused/mem.oc
+++ ocompiler-1/ounused/mem.oc
@@ -1,9 +1,9 @@
 
 const dword=4
 
-function alloc(sd p)
+function alloc1(sd p)
 	sd er
-	setcall er alloc_throwless(p)
+	setcall er alloc1_throwless(p)
 	if er=(NULL)
 		ret
 	endif
@@ -26,7 +26,7 @@ function addtocont(sv cont,ss s,sd sz)
 	call ralloc(cont,size)
 	sd mem
 	set mem cont#
-	add cont :
+	add cont (cont_mem)
 	add mem cont#d^
 	sub mem sz
 	call memcpy(mem,s,sz)
@@ -40,7 +40,7 @@ function addtocont_rev(sv cont,ss s,sd s
 	call ralloc(cont,size)
 	sd mem
 	set mem cont#
-	add cont :
+	add cont (cont_mem)
 	add mem cont#d^
 	sub mem (dword)
 	set mem# sz
@@ -52,7 +52,7 @@ function adddwordtocont(sv cont,sd the_d
 	call ralloc(cont,(dword))
 	sd pos=-dword
 	add pos cont#
-	add cont :
+	add cont (cont_mem)
 	add pos cont#d^
 	set pos# the_dword
 endfunction
--- ocompiler-1.orig/ounused/resolve.oc
+++ ocompiler-1/ounused/resolve.oc
@@ -4,7 +4,7 @@ function resolve(sd j)
 	sd p
 	sd mem
 	set p cont#
-	add cont :
+	add cont (cont_mem)
 	set mem cont#d^
 	add mem p
 	#set mem cont#d^;add cont (dword);set p cont#;add mem p
--- ocompiler-1.orig/ounused/throwless.oc
+++ ocompiler-1/ounused/throwless.oc
@@ -1,6 +1,9 @@
 
 #mem
 
+const a_size=0x1000
+const dummy_alloc=1
+
 function malloc_throwless(sv p,sd sz)
 	setcall p# malloc(sz)
 	if p#!=(NULL)
@@ -8,12 +11,14 @@ function malloc_throwless(sv p,sd sz)
 	endif
 	return "malloc error"
 endfunction
-function alloc_throwless(sd p)
+function alloc1_throwless(sd p)
 	sd er
-	setcall er malloc_throwless(p,0)
+	setcall er malloc_throwless(p,(dummy_alloc)) #malloc(0) on some platforms is NULL
 	if er=(NULL)
-		add p :
+		add p (cont_mem)
 		set p# 0
+		add p (cont_size)
+		set p# (dummy_alloc)
 		return (NULL)
 	endif
 	return er
@@ -21,15 +26,22 @@ function alloc_throwless(sd p)
 endfunction
 #function ralloc_throwless(sd p,sd sz);add sz p#;if sz>0;sv cursor=dword;add cursor p;setcall cursor# realloc(cursor#,sz);if cursor#!=(NULL);set p# sz
 function ralloc_throwless(sv p,sd sz)
-	sd cursor=:
+	sd cursor=cont_mem
 	add cursor p
 	add sz cursor#
 	if sz>0
-		setcall p# realloc(p#,sz)
+		sd all_size=cont_size;add all_size cursor
+		if sz<=all_size#
+			set cursor# sz
+			return (NULL)
+		end
+		set all_size# sz
+		add all_size# (a_size)
+		setcall p# realloc(p#,all_size#)
 		if p#!=(NULL)
 			set cursor# sz
 			return (NULL)
-		endif
+		end
 		return "realloc error"
 	elseif sz=0  #equal 0 discovered at decrementfiles, since C23 the behaviour is undefined
 	#using this quirk, lvs[0] will be used at constants at end, when size is 0
@@ -43,7 +55,7 @@ endfunction
 #-1/offset
 function pos_in_cont(sv cont,ss s,sd sz)
 	sd p
-	sd mem=:
+	sd mem=cont_mem
 	set p cont#
 	add mem cont
 	set mem mem#
@@ -70,29 +82,35 @@ endfunction
 #inits
 
 function inits()
-	value logf#1
-	const logf_p^logf
-	set logf (NULL)
-	value logf_mem#1
-	const logf_mem_p^logf_mem
-	set logf_mem (NULL)
-	value imp_mem#1;data *#1
+	value imp_mem#1;data *#1;data *#1
 	const imp_mem_p^imp_mem
 	set imp_mem (NULL)
-	value fn_mem#1;data *#1
+	value fn_mem#1;data *#1;data *#1
 	const fn_mem_p^fn_mem
 	set fn_mem (NULL)
-	value cwd#1;data *#1
+	value cwd#1;data *#1;data *#1
 	const cwd_p^cwd
 	set cwd (NULL)
-	value files#1;data files_d#1
+	value files#1;data files_d#1;data *#1
 	const files_p^files
 	const files_dp^files_d
 	set files (NULL)
-	value levels#1;data levels_d#1
+	value levels#1;data levels_d#1;data *#1
 	const levels_p^levels
 	const levels_dp^levels_d
 	set levels (NULL)
+
+	value logf_mem#1;data *#1
+	const logf_mem_p^logf_mem
+	set logf_mem (NULL)
+
+	value logf#1
+	const logf_p^logf
+	set logf (NULL)
+
+	#value aux#1;data *#1;data *#1
+	#const aux_p^aux
+
 	call uconst_resolved(0)
 endfunction
 
@@ -124,7 +142,11 @@ function freeall()
 					sv lvs%levels_p
 					if lvs#!=(NULL)
 						call free(lvs#)
-						call logclose()
+						sv p%logf_mem_p
+						if p#!=(NULL)
+							call free(p#)
+							call logclose()
+						endif
 					endif
 				endif
 			endif
@@ -137,11 +159,6 @@ function logclose()
 	if fp#!=(NULL)
 		call fclose(fp#)
 		set fp# (NULL)
-		sv p%logf_mem_p
-		if p#!=(NULL)
-			call free(p#)
-			set p# (NULL)
-		endif
 	endif
 endfunction
 
@@ -152,7 +169,7 @@ function freefiles()
 	sv container%files_p
 	sv start
 	set start container#
-	add container :
+	add container (cont_mem)
 	set container container#d^
 	add container start
 	while start!=container
@@ -179,7 +196,7 @@ function fileentry_init(sd cont)
 	sd b;set b cont;add b (size_conts)
 	while cont!=b
 		sd er
-		setcall er alloc_throwless(cont)
+		setcall er alloc1_throwless(cont)
 		if er!=(NULL)
 			call fileentry_uninit_base(a,cont)
 			return er
@@ -231,7 +248,7 @@ function constssize()
 	sv end%files_p
 	sv cursor
 	set cursor end#
-	add end :
+	add end (cont_mem)
 	set end end#d^
 	add end cursor
 	#sv cursor%files_p;sd end;set end cursor#d^;add cursor (dword);set cursor cursor#;add end cursor
@@ -247,7 +264,7 @@ endfunction
 function constssize_file(sv end)
 	sd cursor
 	set cursor end#
-	add end :
+	add end (cont_mem)
 	set end end#d^
 	add end cursor
 	sd sz=0
@@ -284,7 +301,7 @@ function importssize()
 	sd p
 	sd mem
 	set p cont#
-	add cont :
+	add cont (cont_mem)
 	set mem cont#d^
 	add mem p
 	#set mem cont#d^;add cont (dword);set p cont#;add mem p
--- ocompiler-1.orig/ounused/uconst.oc
+++ ocompiler-1/ounused/uconst.oc
@@ -42,7 +42,7 @@ endfunction
 function uconst_search(sv fs,sd s,sd sz,sd is_new)
 	sd cursor
 	set cursor fs#
-	add fs :
+	add fs (cont_mem)
 	set fs fs#d^
 	add fs cursor
 	sv fls%files_p
@@ -65,11 +65,11 @@ function uconst_unused(sv cont,sd ofs)
 	set uns cont
 	sd cursor
 	set cursor cont#
-	add cont :
+	add cont (cont_mem)
 	sd end
 	set end cont#d^
 	add end cursor
-	add cont (dword)
+	add cont (cont_sizes)
 	while cursor!=end
 		sd offset
 		set offset cursor#
--- ocompiler-1.orig/ounused/uconstres.oc
+++ ocompiler-1/ounused/uconstres.oc
@@ -19,20 +19,22 @@ function uconstres_spin(sd f,sd is_new)
 		add f (size_cont)
 		sd double
 		set double f
-		add double (size_cont+:)
+		add double (size_cont+cont_mem)
 		if double#!=0
-			sub double :
-			value aux#1;data *#1
+			sub double (cont_mem)
+
+			value aux#1;data *#1;data *#1
 			call memcpy(#aux,f,(size_cont))
 			call memcpy(f,double,(size_cont))
 			call memcpy(double,#aux,(size_cont))
+
 			set f double
 		endif
-		add f :
+		add f (cont_mem)
 		sd size
 		set size f#
 		if size!=0
-			sub f :
+			sub f (cont_mem)
 			call uconst_resolved(1,size)
 			neg size
 			call ralloc(f,size)
@@ -44,7 +46,7 @@ function uconstres_search(sv f,sd is_new
 #there is a segmentation if from a random (not log) file like "format elfobjso", TO DO when wanted
 	sd cursor
 	set cursor f#
-	add f :
+	add f (cont_mem)
 	set f f#d^
 	add f cursor
 	sv fls%files_p
@@ -61,14 +63,14 @@ function uconst_resolve(ss const_str,ss
 	sv fls%files_p
 	sv cursor
 	set cursor fls#
-	add fls :
+	add fls (cont_mem)
 	set fls fls#d^
 	add fls cursor
 	while cursor!=fls
-		sd pointer=3*size_cont+:
+		sd pointer=3*size_cont+(cont_mem)
 		add pointer cursor#
 		if pointer#!=0
-			sub pointer :
+			sub pointer (cont_mem)
 			set pointer pointer#v^
 			set cursor cursor#
 			set cursor cursor#
