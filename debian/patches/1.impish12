Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 torra (1-impish12) impish; urgency=medium
 .
   * sync
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-04-26

--- torra-1.orig/.github/workflows/appimage.yml
+++ /dev/null
@@ -1,141 +0,0 @@
-
-on:
- workflow_dispatch:
-  inputs:
-   ppa:
-    description: "ppa sufix"
-
-jobs:
- build:
-  runs-on: ubuntu-22.04
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      name2=Torra
-      #
-      mkdir -p AppDir
-      file=runtime
-      arch_ai=-x86_64
-      archfile=${file}${arch_ai}
-      kitpart () {
-       #https://github.com/AppImage/pkg2appimage
-       urlpart=`wget -q https://github.com/AppImage/AppImageKit/releases/latest -O - | grep "${archfile}" | head -n 1 | cut -d '"' -f 2`
-      }
-      if [ ! -e "${file}" ]; then
-       kitpart
-       #"pkg2appimage-.*-x86_64.AppImage"
-       wget -c https://github.com/${urlpart}
-       mv ${archfile} ${file}
-       chmod a+x ${file}
-      fi
-      if [ ! -e "${name}.deb" ]; then
-       version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-       if [ ! -e "lp2.py" ]; then
-        wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
-        sudo apt install python3-launchpadlib
-       fi
-       OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} amd64)
-       wget ${OUTPUT}/+files/${name}_${version}_all.deb -O ${name}.deb
-       dpkg -x ${name}.deb AppDir
-      fi
-      #dependencies
-      downdeb () {
-       pkg=${1}
-       src="ro.archive.ubuntu.com"
-       inter=Packages
-       if [ ! -e "${inter}" ]; then
-        wget http://${src}/ubuntu/dists/jammy/main/binary-amd64/Packages.xz -O ${inter}.xz
-        xz -d ${inter}.xz
-       fi
-       debfilename=`grep "^Filename.*/${pkg}_" ${inter}`
-       debfilename=`echo ${debfilename} | tail -1 | cut -d ' ' -f 2`
-       wget_url=http://${src}/ubuntu/${debfilename}
-       maindeb=${pkg}.deb
-       wget ${wget_url} -O ${maindeb}
-       dpkg -x ${maindeb} AppDir
-      }
-      array=( libboost-python1.74.0 libtorrent-rasterbar2.0 python3-appdirs python3-libtorrent )
-      for var in "${array[@]}"
-      do
-       downdeb ${var}
-      done
-      #
-      apd=AppDir
-      cd ${apd}
-      file2=AppRun
-      if [ ! -e "${file2}" ]; then
-       if [ -z "${urlpart}" ]; then
-        kitpart
-       fi
-       archfile2=${file2}${arch_ai}
-       urlpart=${urlpart:0:`echo ${urlpart} | grep -ob '[^/]*$' | cut -d ':' -f 1`}${archfile2}
-       wget -c https://github.com/${urlpart}
-       chmod a+x ${archfile2}
-       mv ${archfile2} ${file2}
-      fi
-      pngfile=${name}.png
-      if [ ! -e "${pngfile}" ]; then
-       wget https://github.com/colin-i/test/releases/download/1.5/${name}.png -O ${pngfile}
-       cat > ${name}.desktop <<EOF
-      [Desktop Entry]
-      Type=Application
-      Name=${name2}
-      Exec=${name}
-      Icon=${name}
-      Categories=Utility
-      EOF
-       ln -s ${pngfile} .DirIcon
-      fi
-      #metadata file
-      mi=usr/share/metainfo
-      mif=${mi}/com.colin.${name}.appdata.xml
-      if [ ! -e "${mif}" ]; then
-       page=`cat ../debian/control | grep "^Homepage" | cut -d ' ' -f2`
-       srcname=`echo ${page} | grep -o "[^/]*$"`
-       mkdir -p ${mi}
-       cat > ${mif} <<EOF
-      <?xml version="1.0" encoding="UTF-8"?>
-      <!-- Copyright 2022 -->
-      <component type="desktop-application">
-       <id>com.colin.${name}</id>
-       <metadata_license>FSFAP</metadata_license>
-       <name>${name2}</name>
-       <summary>Torrent client</summary>
-       <description>
-        <ul>
-         <li>Download/Upload torrents data</li>
-         <li>Fast resume</li>
-         <li>Detailed statistics</li>
-        </ul>
-       </description>
-       <url type="homepage">${page}</url>
-       <screenshots>
-        <screenshot type="default">
-         <caption>${name2} image</caption>
-         <image>https://raw.github.com/colin-i/${srcname}/master/arh/${name}.png</image>
-        </screenshot>
-       </screenshots>
-       <content_rating/>
-      </component>
-      EOF
-      fi
-      #
-      cd ..
-      #
-      if [ ! -e "${name}.AppImage" ]; then
-       mksquashfs AppDir ${name}.squashfs -root-owned -noappend
-       cat runtime >> ${name}.AppImage
-       cat ${name}.squashfs >> ${name}.AppImage
-       chmod a+x ${name}.AppImage
-      fi
-      #glibc=`readelf -V ${apd}/usr/bin/${name} | grep -Po "(?<= GLIBC_)[^ ]*" | sort -Vr | head -1 | sed "s/\./-/g"`
-      #echo -n ${glibc} > version #"glibc" will not be ok for upload-artifact
-   - name: artifact
-     uses: actions/upload-artifact@v3
-     with:
-      name: appimage
-      path: |
-       ./*.AppImage
-      # ./version
--- torra-1.orig/.github/workflows/deb.yml
+++ torra-1/.github/workflows/deb.yml
@@ -9,13 +9,20 @@ jobs:
    - uses: actions/checkout@v3
      with:
       path: in
+   - uses: actions/checkout@master
+     with:
+      repository: colin-i/sync
+      path: in2
+      ref: torra-impish
    - name: Run a multi-line script
      run: |
+      name=`cat in/debian/changelog | head -1 | grep -o ^[^\ ]*`
+      mv in2/debian/patches in/debian/patches
+      mv in2/.pc in/.pc
       if [ -z "`dpkg -s devscripts>/dev/null 2>&1 && echo x`" ]; then
        sudo apt install -y devscripts debhelper dh-python python3-all
        #python3-setuptools is already
       fi
-      name=`cat in/debian/changelog | head -1 | grep -o ^[^\ ]*`
       origf=${name}-1.tar.gz
       if [ ! -e "${origf}" ]; then
        origln=${name}_1.orig.tar.gz
--- torra-1.orig/.github/workflows/rel.yml
+++ /dev/null
@@ -1,41 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- rbuild:
-  runs-on: ubuntu-latest
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      #get the version from changelog/launchpad/input
-      tag=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-      echo "tag=${tag}" >> $GITHUB_ENV
-   - name: Create Release
-     id: create_release
-     uses: actions/create-release@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      tag_name: ${{ env.tag }}
-      release_name: Release ${{ env.tag }}
-      draft: false
-      prerelease: false
-      #this can be undone. example: git push origin :refs/tags/1.6
-   - name: Store upload url for assets
-     run: |
-      #echo straight will not escape {}
-      a=${{ steps.create_release.outputs.upload_url }}
-      echo -n ${a} > 1.txt
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      echo "proj=${name}" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: https://uploads.github.com/repos/colin-i/test/releases/67484178/assets{?name,label}
-      asset_path: ./1.txt
-      asset_name: ${{ env.proj }}
-      asset_content_type: text/plain
--- torra-1.orig/.github/workflows/rpm.yml
+++ /dev/null
@@ -1,38 +0,0 @@
-on:
- workflow_dispatch:
-  inputs:
-   ppa:
-    description: "ppa sufix"
-
-jobs:
- rpbuild:
-  runs-on: ubuntu-22.04 #focal alien is not testing ok on docker fedora
-  steps:
-   - uses: actions/checkout@v3
-   - name: Run a multi-line script
-     run: |
-      #get deb
-      arh=`cat debian/control | grep ^Architecture | cut -d ' ' -f2` #all
-      arh_lp=amd64
-      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
-      version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
-      #dist=`cat debian/changelog | head -1 | grep -Poe "[^ ]*(?=;)"`
-      if [ ! -e "lp2.py" ]; then
-       wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
-      fi
-      OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} ${arh_lp})
-      wget ${OUTPUT}/+files/${name}_${version}_${arh}.deb -O ${name}.deb
-      #make rpm
-      mkdir out
-      cd out
-      #sudo apt update
-      sudo apt install alien
-      sudo alien -rk ../${name}.deb
-      fname=`ls`
-      mv ${fname} ../${fnamefinal}
-      echo "file=${fname}" >> $GITHUB_ENV
-   - name: artifact
-     uses: actions/upload-artifact@v3
-     with:
-      name: rpm
-      path: ./${{ env.file }}
--- torra-1.orig/.github/workflows/uprpm.yml
+++ /dev/null
@@ -1,24 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- urbuild:
-  runs-on: ubuntu-18.04
-  steps:
-   - name: Run a multi-line script
-     run: |
-      if [ -n "${{ env.init }}" ]; then
-       exit 1
-      fi
-      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
-      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: ${{ env.up_url }}
-      asset_path: ./${{ env.file }}
-      asset_name: ${{ env.file }}
-      asset_content_type: application/x-rpm
--- torra-1.orig/README.md
+++ torra-1/README.md
@@ -11,6 +11,8 @@ Install:
 sudo apt-get install torra
 ```
 \
+On linux distributions, <i>.AppImage</i> file from [releases](https://github.com/colin-i/tora/releases).
+\
 On Fedora, <i>.rpm</i> file from [releases](https://github.com/colin-i/tora/releases).
 ```sh
 yum install torra-*.*.rpm
@@ -20,13 +22,14 @@ From pypi:
 ```sh
 pip3 install torra
 ```
-And having the dependencies.
 
 ## From source
 Using libtorrent (arvidn) with python bindings (example: python3-libtorrent, or unofficial binaries python package python-libtorrent-bin).\
 libgtk-4.so.1 required.\
 With setup.py or the other python setup script.
 
+## [Info](https://github.com/colin-i/tora/blob/master/info.md)
+
 ## Donations
 The *donations* section is here
 *https://gist.github.com/colin-i/e324e85e0438ed71219673fbcc661da6*
--- /dev/null
+++ torra-1/a
@@ -0,0 +1,12 @@
+
+if [ -z "$1" ]; then
+z="python"
+else
+z=${1}
+shift
+fi
+
+${z} -m torra.main $@
+
+#bitstorm starred/forked
+#rtorrent at debian/ubuntu
--- torra-1.orig/arh/re2
+++ /dev/null
@@ -1,15 +0,0 @@
-
-
-#this is warning is absolute
-#ln -s /usr/lib/python3/dist-packages/torra-1.0.26.egg-info ./usr/lib64/python3.10/site-packages/torra-1.0.26.egg-info && \
-#ln -s /usr/lib/python3/dist-packages/torra ./usr/lib64/python3.10/site-packages/torra && \
-#%%{buildroot}  there is an example without http://rpm.rutgers.edu/guide.html   the solution can be: it is a mount, then ln -s
-
-#sudo sed is still permission
-
-mkdir -p ./usr/lib64/python3.10/site-packages && \
-sed '/^Requires.*\/python3.*$/a Requires:      python3-appdirs\nRequires:      rb_libtorrent-python3\nRequires:      libgtk-4.so.1' text > text2 && \
-sed '/^%doc.*copyright.*$/a %ghost "/usr/lib64/python3.10/site-packages/torra-1.0.26.egg-info"\n%ghost "/usr/lib64/python3.10/site-packages/torra"' text2 > text3 && \
-printf "\n%%post\nln -s /usr/lib/python3/dist-packages/torra-1.0.26.egg-info /usr/lib64/python3.10/site-packages/torra-1.0.26.egg-info\nln -s /usr/lib/python3/dist-packages/torra /usr/lib64/python3.10/site-packages/torra" >> text3 && \
-rm text2 && \
-sudo mv text3 text
--- /dev/null
+++ torra-1/b
@@ -0,0 +1,2 @@
+
+./a pdb
--- /dev/null
+++ torra-1/c
@@ -0,0 +1,8 @@
+
+if [ -z "$1" ]; then
+z=./a
+else
+z=./b
+fi
+
+GTK_DEBUG=all ${z}
--- /dev/null
+++ torra-1/info.md
@@ -0,0 +1,4 @@
+Torrent client.\
+To specify another torrent list at start, launch with an argument:\
+For example ```torra ~/torrents.txt```\
+[Git Page](https://github.com/colin-i/tora)
--- torra-1.orig/setup-with-requirements.py
+++ torra-1/setup-with-requirements.py
@@ -5,12 +5,15 @@ import sys
 try:
    import libtorrent
 except Exception:
-	test=subprocess.run([sys.executable,'-m','pip','install','python-libtorrent-bin>=1.2.9'])
+	#test=subprocess.run([sys.executable,'-m','pip','install','python-libtorrent-bin>=1.2.9'])
+	#if test.returncode:
+	#	subprocess.run([sys.executable,'-m','pip','install','python-libtorrent>=1.2.9'])
+	#	if test.returncode:
+	#		exit(test.returncode)
+	subprocess.run([sys.executable,'-m','pip','install','libtorrent'])
 	if test.returncode:
-		subprocess.run([sys.executable,'-m','pip','install','python-libtorrent>=1.2.9'])
-		if test.returncode:
-			exit(test.returncode)
-		import libtorrent
+		exit(test.returncode)
+	import libtorrent
 print('libtorrent found')
 
 from ctypes import cdll
--- torra-1.orig/setup.py
+++ torra-1/setup.py
@@ -1,34 +1,38 @@
+
 #setuptools.setup is looking at one argv parameter; to "build" and "install":
 #python3 setup.py install
 
-#ok, package python-libtorrent-bin is old. install with pip install --no-deps but add somehow appdirs
-#                                          and python-libtorrent on ubuntu
-#                                          if it's not old python-libtorrent at pip:
-#                                          	that+(libtorrent-rasterbar2.0 on ubuntu) can be a solution
-#last python is at 3.9 on x86-64
+#libtorrent from pypi has bindings and library now, before was:
+#	python-libtorrent-bin is at extra require now, but, if was at install requires:
+#		ok, package python-libtorrent-bin is old. install with pip install --no-deps but add somehow appdirs
+#			and python-libtorrent on ubuntu
+#			if it's not old python-libtorrent at pip:
+#				that+(libtorrent-rasterbar2.0 on ubuntu) can be a solution
 
 pkname='torra'
 
 import pathlib
 HERE = pathlib.Path(__file__).parent
 #here README is ok, else will be README.md not found for pypi
-README = (HERE / "README.md").read_text()
+README = (HERE / "info.md").read_text()
+ver=(HERE / "v2").read_text()
 
 from setuptools import setup
 setup(name=pkname,
-	version='1.0.28',
+	version=ver,
 	packages=[pkname],
 	#opt
 	python_requires='>=3',
 	install_requires=["appdirs>=1.4.3"
-		#it's not updated at pypi (old 3.9)
+		,"libtorrent"
+		#python-libtorrent-bin it's not updated at pypi (old 3.9)
 		#,'python-libtorrent-bin>=1.2.9' #;platform_system=="Linux" and platform_machine=="x86_64"'
 		#,"python-apt"#is from 2012 0.7.8, missing DistUtilsExtra, sudo apt install python-apt is 2.2., verify with pip3 install python-apt
 	],
-	extras_require={
-		'bin': ['python-libtorrent-bin>=1.2.9']
-		#,'apt': ['python-apt']
-	},
+	#extras_require={
+	#	'bin': ['python-libtorrent-bin>=1.2.9']
+	#	#,'apt': ['python-apt']
+	#},
 	description='Torrent client',
 	long_description=README,
 	long_description_content_type="text/markdown",
--- torra-1.orig/torra/bencod.py
+++ torra-1/torra/bencod.py
@@ -1,19 +1,20 @@
 """ Module to construct / parse bencoded data """
 
+is_info=False
 
 def parse_blist(bdata):
     """ Convert bencoded data to python list """
-    
+
     blist = []
 
     if bdata[0:1] == b'l':
         bdata = bdata[1:]
-    
+
     while bdata[0:1] != b'' and bdata[0:1] != b'e':
         
         parse_func = btype_dict.get(bdata[0:1], parse_bstring)
         elem, bdata = parse_func(bdata) 
-    
+
         blist.append(elem)
 
     return blist, bdata[1:]
@@ -28,10 +29,10 @@ def parse_bdict(bdata):
         bdata = bdata[1:]
 
     while bdata[0:1] != b'' and bdata[0:1] != b'e':
-        
+
         parse_func = btype_dict.get(bdata[0:1], parse_bstring)
         key, bdata = parse_func(bdata)
-        
+
         if bdata[0:1] == '' or bdata[0:1] == 'e':
             value = None
         else:
@@ -40,7 +41,7 @@ def parse_bdict(bdata):
 
         if key in bdict:
             raise KeyError("Multiple keys in bencoded dictionary")
-        
+
         bdict[key] = value
 
     return bdict, bdata[1:]
@@ -48,7 +49,7 @@ def parse_bdict(bdata):
 
 def parse_bint(bdata):
     """ Convert bencoded data to int """
-    
+
     end_pos = bdata.index(ord('e'))
     num_str = bdata[1:end_pos]
     bdata = bdata[end_pos + 1:]
@@ -57,30 +58,36 @@ def parse_bint(bdata):
 
 
 def parse_bstring(bdata):
-    """ Convert bencoded data to string """
-    
-    delim_pos = bdata.index(ord(':'))
-    length = bdata[0:delim_pos]
-    length = int(length) 
-    
-    delim_pos += 1
-    bstring = bdata[delim_pos:delim_pos + length]
-    bdata = bdata[delim_pos + length:]
+	""" Convert bencoded data to string """
 
-    if len(bstring) != length:
-        raise ValueError("Incorrect bencoded string length")
+	delim_pos = bdata.index(ord(':'))
+	length = bdata[0:delim_pos]
+	length = int(length) 
+
+	delim_pos += 1
+	bstring = bdata[delim_pos:delim_pos + length]
+	bdata = bdata[delim_pos + length:]
+
+	sz=len(bstring)
+	if sz != length:
+		raise ValueError("Incorrect bencoded string length")
+
+	if is_info:
+		if sz>=1000:
+			#bencod is for meninfo,torben name, and overall sizes
+			bstring='*****'+sz.__str__()+'*****'
 
-    return bstring, bdata
+	return bstring, bdata
 
 
 def decode(bdata):
     """ Parse data and return a list of objects """
 
     return parse_blist(bdata)[0]
-    
+
 
 btype_dict = {
     b'd' : parse_bdict,
     b'l' : parse_blist,
     b'i' : parse_bint
-}
\ No newline at end of file
+}
--- torra-1.orig/torra/main.py
+++ torra-1/torra/main.py
@@ -10,6 +10,7 @@ def get_root_dir():
 get_root_dir().mkdir(exist_ok=True)
 def get_root_file(f):
 	return os.path.join(get_root_dir(),f)
+import sys
 
 from . import gtk
 from . import layout
@@ -46,6 +47,8 @@ def activate(app):
 	layout.layout(window)
 
 def main():
+	if len(sys.argv)>1:
+		listtor.config_filename=sys.argv[1]
 	a=k.gtk_application_new(None,0)
 	actv=b"activate"
 	k.g_signal_connect_data (a, actv, activate, None, None, 0)
--- torra-1.orig/torra/meninfo.py
+++ torra-1/torra/meninfo.py
@@ -6,7 +6,9 @@ k=gtk.k
 def go(path,window):
 	with open(path,'rb') as f:
 		d=f.read()
+		bencod.is_info=True
 		a=bencod.decode(d)
+		bencod.is_info=False
 		dialog = k.gtk_dialog_new_with_buttons (b"Info",window,
 			gtk.GtkDialogFlags.GTK_DIALOG_DESTROY_WITH_PARENT | gtk.GtkDialogFlags.GTK_DIALOG_MODAL,
 			b"_OK",gtk.GtkResponseType.GTK_RESPONSE_NONE,None)
--- torra-1.orig/torra/stats.py
+++ torra-1/torra/stats.py
@@ -12,12 +12,32 @@ class COLUMNS(IntEnum):
 	num_peers=3
 	state=4
 	N=5
+class COLUMNS2(IntEnum):
+	list_peers=0
+	num_complete=1
+	num_incomplete=2
+	next_announce=3
+	last_upload=4
+	N=5
+
+#this is violation
+#arr =  [24,64]
+#arr_c = (gtk.c_int * 2)(*arr)
+#k.gtk_list_store_newv.argtypes = [gtk.c_int, gtk.POINTER(gtk.c_int)]
+#list=k.gtk_list_store_newv(gtk.c_int(2),arr_c)
+
+#k.gtk_list_store_new is limited to 5 (five) entries, at six is violation
 
 list=k.gtk_list_store_new(COLUMNS.N, gtk.G_TYPE_INT, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING)
 i=gtk.GtkTreeIter()
 ip=gtk.byref(i)
 k.gtk_list_store_append(list,ip)
 
+list2=k.gtk_list_store_new(COLUMNS2.N, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING, gtk.G_TYPE_STRING)
+i2=gtk.GtkTreeIter()
+ip2=gtk.byref(i2)
+k.gtk_list_store_append(list2,ip2)
+
 def ini(box):
 	tree=k.gtk_tree_view_new_with_model(list)
 	k.g_object_unref(list)
@@ -37,6 +57,25 @@ def ini(box):
 	column = k.gtk_tree_view_column_new_with_attributes(b"State", renderer, b"text", COLUMNS.state, None)
 	k.gtk_tree_view_append_column(tree, column)
 	k.gtk_box_append(box,tree)
+	#
+	tree2=k.gtk_tree_view_new_with_model(list2)
+	k.g_object_unref(list2)
+	renderer = k.gtk_cell_renderer_text_new()
+	column = k.gtk_tree_view_column_new_with_attributes(b"Peers list", renderer, b"text", COLUMNS2.list_peers, None)
+	k.gtk_tree_view_append_column(tree2, column)
+	renderer = k.gtk_cell_renderer_text_new()
+	column = k.gtk_tree_view_column_new_with_attributes(b"Seeds", renderer, b"text", COLUMNS2.num_complete, None)
+	k.gtk_tree_view_append_column(tree2, column)
+	renderer = k.gtk_cell_renderer_text_new()
+	column = k.gtk_tree_view_column_new_with_attributes(b"Leeches", renderer, b"text", COLUMNS2.num_incomplete, None)
+	k.gtk_tree_view_append_column(tree2, column)
+	renderer = k.gtk_cell_renderer_text_new()
+	column = k.gtk_tree_view_column_new_with_attributes(b"Next Announce", renderer, b"text", COLUMNS2.next_announce, None)
+	k.gtk_tree_view_append_column(tree2, column)
+	renderer = k.gtk_cell_renderer_text_new()
+	column = k.gtk_tree_view_column_new_with_attributes(b"Last Upload", renderer, b"text", COLUMNS2.last_upload, None)
+	k.gtk_tree_view_append_column(tree2, column)
+	k.gtk_box_append(box,tree2)
 
 def show(h):
 	s = h.status()
@@ -61,3 +100,9 @@ def show(h):
 			COLUMNS.upload_rate, str(s.upload_rate / 1000).encode(),
 			COLUMNS.num_peers, str(s.num_peers).encode(),
 			COLUMNS.state, torrent.state_str[s.state])
+	gtk.gtk_list_store_set5(list2, ip2,
+		COLUMNS2.list_peers, str(s.list_peers).encode(),
+		COLUMNS2.num_complete, str(s.num_complete).encode(),
+		COLUMNS2.num_incomplete, str(s.num_incomplete).encode(),
+		COLUMNS2.next_announce, str(s.next_announce).encode(),
+		COLUMNS2.last_upload, str(s.last_upload).encode())
--- /dev/null
+++ torra-1/v2
@@ -0,0 +1 @@
+1.0.32
\ No newline at end of file
