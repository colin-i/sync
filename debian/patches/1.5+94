Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+94) xenial; urgency=medium
 .
   * pref file at deb
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-07-24

--- ocompiler-1.orig/arh/pub
+++ ocompiler-1/arh/pub
@@ -21,7 +21,6 @@ last=`curl https://api.github.com/repos/
 ~/test/lp && \
 ~/test/lp x && \
 ~/test/keyring && \
-~/test/del x ${last} && \
 ~/test/arh2 ${last}
 
 # && \
@@ -55,6 +54,8 @@ last=`curl https://api.github.com/repos/
 #will replace grep commands
 #can be for odbg or something new
 
+#another project otoc / or at the same time with o, another project c-o(can test with github actions maybe) / or o subproject
+
 #simple and or
 #={"a","b"}
 #~(page_sectionalignment-1)
--- ocompiler-1.orig/src/Makefile
+++ ocompiler-1/src/Makefile
@@ -1,5 +1,7 @@
 
-all: o
+projname=o
+
+all: ${projname}
 
 OB = obj
 OBJ = ${OB}.o
@@ -20,8 +22,32 @@ ifndef linker
 linker=/lib/ld-linux.so.2
 endif
 
+ifndef prefix
+prefix=/usr
+endif
+
+#set preffile data
+PREFFILE=.ocompiler.txt
+#there is not suposed to be a /usr/etc, /usr is read-only
+ifeq ($(prefix),/usr)
+	PREFFILEFULL=$(DESTDIR)/etc/${PREFFILE}
+	#also move back the usr folder: usr/bin/o
+	#$((3+1+3+1+${#projname}))
+	etchelper=9
+	etc_helper=usr/bin/o
+else
+	PREFFILEFULL=$(DESTDIR)$(prefix)/etc/${PREFFILE}
+	#move back only exec name and bin folder: /usr/local/etc is ok. bin/o
+	#$((3+1+${#projname}))
+	etchelper=5
+	etc_helper=bin/o
+endif
+etcinclude=etcinclude.s
+
 #OFLAGS=
 
+${FULLOBJS}: ${etcinclude}
+
 %.o: ${FULLOBJS}
 	if [ -s ${OBT} ];then \
 		echo text; \
@@ -36,16 +62,22 @@ endif
 _ATLDCOM = $(LD) ${linkerflags} -melf_i386 --dynamic-linker=${linker} -lc -entry main -o
 ATLDCOM = ${_ATLDCOM} $@
 
-o: ${OBJ}
+${etcinclude}:
+	echo sd etchelper=${etchelper}\;ss etc_helper=\"${etc_helper}\" > ${etcinclude}
+
+${projname}: ${OBJ}
 	${ATLDCOM} $^
+#$^ is all objects here, $< is first object
 
 install: all
 	install -D o \
 		$(DESTDIR)$(prefix)/bin/o
+	install -D ../${PREFFILE} ${PREFFILEFULL}
 
 clean-compile:
 	-rm -f ${OBJ}
 	-rm -f ${FULLOBJS}.log
+	-rm -f ${etcinclude}
 
 clean-link:
 	-rm -f o
@@ -60,6 +92,7 @@ distclean: clean
 
 uninstall:
 	-rm -f $(DESTDIR)$(prefix)/bin/o
+	-rm -f ${PREFFILEFULL}
 
 test:
 	echo "test"
--- ocompiler-1.orig/src/files/actions/main.s
+++ ocompiler-1/src/files/actions/main.s
@@ -109,7 +109,10 @@ While includesReg!=null
 					set errormsg endfnexp
 					Call Message(errormsg)
 				Else
-					call pref_restore()
+					if formatdefined==1
+					# a file with only comments, but cCOMMENT whitespaces is at pass write
+						call pref_restore()
+					endif
 					if parses==(pass_init)
 						set g_e_b_p# (FALSE)  #in case was set, for writes
 
--- ocompiler-1.orig/src/files/actions/main/index.s
+++ ocompiler-1/src/files/actions/main/index.s
@@ -128,7 +128,7 @@ if loop==1
 			if commandset==(cCOMMENT)
 				Call advancecursors(pcontent,pcomsize,comsize)
 				#1 is last
-				if parses==(pass_write)
+				if parses==(pass_write) #at init and calls cCOMMENT istead of many commands
 					set was_whitespaces content;dec was_whitespaces;setcall was_whitespaces is_whitespace(was_whitespaces#)
 					if was_whitespaces==(TRUE)
 					#this is comment ending in whitespace
@@ -223,14 +223,14 @@ if loop==1
 					elseIf was_whitespaces==(TRUE)
 						#mostly parses (pass_write), example: at cCALL is at all parses
 						#this is whitespace after command
-						#if parses==(pass_write) when show once check was not
+						#if parses==(pass_write) can be at init commands only, or write commands only, if all parses then extra code for wrongers (only at not w_as_e)
 						setcall errormsg warn_hidden_whitespaces_after(cursorforincludes,dot_comma_end) #includes,nameofstoffile
 					endelseIf
 				endIf
 			EndIf
 		EndIf
 	Elseif cursor_start!=content
-		#if parses==(pass_write) when show once check was not
+		#if parses==(pass_write) if all parses then extra code for wrongers (only at not w_as_e)
 		#this is only whitespace
 		setcall errormsg warn_hidden_whitespaces_after(cursorforincludes,dot_comma_end) #includes,nameofstoffile
 		#dot_comma_end check: is not like it accepts "    ;" but it accepts "...!    ;"
--- ocompiler-1.orig/src/files/functions/pref/preffuncs.s
+++ ocompiler-1/src/files/functions/pref/preffuncs.s
@@ -200,13 +200,13 @@ function initpreferences()
 	#this is used also at arguments
 
 	sv q%nr_of_prefs_pointers_p
-	set q# ptrwarningsbool;    incst q;set q# p_over_pref; incst q;set q# p_hidden_pref; incst q;set q# p_w_as_e; incst q;set q# ptrlogbool; incst q;set q# ptrcodeFnObj; incst q;set q# cb;           incst q;set q# ptrincludedir; incst q;set q# text_fn_info;    incst q;set q# conv_64;   incst q;set q# p_nul_res_pref; incst q;set q# sdsv_p;     incst q;set q# p_inplace_reloc_pref; incst q;set q# p_pref_reloc_64; incst q;set q# p_underscore_pref; incst q;set q# p_exit_end; incst q;set q# p_include_sec; incst q;set q# p_ignore_format_so; incst q;set q# ptr_call_align; incst q;set q# ptr_nobits_virtual; incst q;set q# ptr_has_debug; incst q;set q# p_o_w
+	set q# ptrwarningsbool; incst q;set q# p_over_pref; incst q;set q# p_hidden_pref; incst q;set q# p_w_as_e; incst q;set q# ptrlogbool; incst q;set q# ptrcodeFnObj; incst q;set q# cb;           incst q;set q# ptrincludedir; incst q;set q# text_fn_info;    incst q;set q# conv_64;   incst q;set q# p_nul_res_pref; incst q;set q# sdsv_p;     incst q;set q# p_inplace_reloc_pref; incst q;set q# p_pref_reloc_64; incst q;set q# p_underscore_pref; incst q;set q# p_exit_end; incst q;set q# p_include_sec; incst q;set q# p_ignore_format_so; incst q;set q# ptr_call_align; incst q;set q# ptr_nobits_virtual; incst q;set q# ptr_has_debug; incst q;set q# p_o_w
 	sv t%nr_of_prefs_strings_p
-	set t# "orphans";          incst t;set t# "over_pref"; incst t;set t# "hidden_pref"; incst t;set t# "w_as_e"; incst t;set t# "logfile";  incst t;set t# "codeFnObj";  incst t;set t# "const_warn"; incst t;set t# "includedir";  incst t;set t# "function_name"; incst t;set t# "conv_64"; incst t;set t# "nul_res_pref"; incst t;set t# "sd_as_sv"; incst t;set t# "inplace_reloc";      incst t;set t# "reloc_64";      incst t;set t# "underscore_pref"; incst t;set t# "exit_end"; incst t;set t# "include_sec"; incst t;set t# "ignore_format_so"; incst t;set t# "call_align";   incst t;set t# "nobits_virtual";   incst t;set t# "has_debug";   incst t;set t# "offset_warn"
+	set t# "orphans";       incst t;set t# "over_pref"; incst t;set t# "hidden_pref"; incst t;set t# "w_as_e"; incst t;set t# "logfile";  incst t;set t# "codeFnObj";  incst t;set t# "const_warn"; incst t;set t# "includedir";  incst t;set t# "function_name"; incst t;set t# "conv_64"; incst t;set t# "nul_res_pref"; incst t;set t# "sd_as_sv"; incst t;set t# "inplace_reloc";      incst t;set t# "reloc_64";      incst t;set t# "underscore_pref"; incst t;set t# "exit_end"; incst t;set t# "include_sec"; incst t;set t# "ignore_format_so"; incst t;set t# "call_align";   incst t;set t# "nobits_virtual";   incst t;set t# "has_debug";   incst t;set t# "offset_warn"
 endfunction
 
 #void
-function setpreferences(str scrpath)
+function setpreferences(vstr scrpath)
 	Str preferences=".ocompiler.txt"
 	data err#1
 	data noerr=noerror
@@ -215,7 +215,7 @@ function setpreferences(str scrpath)
 	Data preferencessize#1
 	Data ptrpreferencessize^preferencessize
 
-	setcall err prefextra(preferences,ptrpreferencessize,ptrpreferencescontent)
+	setcall err prefextra(preferences,ptrpreferencessize,ptrpreferencescontent,scrpath)
 	If err!=noerr
 		data null=0
 		#data void#1
--- ocompiler-1.orig/src/linux/files/prefextra.s
+++ ocompiler-1/src/linux/files/prefextra.s
@@ -2,44 +2,91 @@
 const variable_convention=lin_convention
 
 #err
-function prefextra(ss prefpath,sd ptrpreferencessize,sd ptrpreferencescontent)
+function prefextra(ss prefpath,sd ptrpreferencessize,sd ptrpreferencescontent,ss scrpath)
 	sd err
-	setcall err prefextra_helper(prefpath,ptrpreferencessize,ptrpreferencescontent)
+	setcall err prefextra_helper(prefpath,ptrpreferencessize,ptrpreferencescontent,scrpath)
 	if err!=(noerror)
-		Call safeMessage(err)
+		Call Message(err)
 	endif
 	return err
 endfunction
 #err
-function prefextra_helper(ss prefpath,sd ptrpreferencessize,sd ptrpreferencescontent)
+function prefextra_helper(ss prefpath,sd ptrpreferencessize,sd ptrpreferencescontent,ss scrpath)
+	sd err
+	sd s2;setcall s2 strlen(prefpath)
+	sd mem
+	sd a
+
+	#first verify in home
 	ss homestr="HOME"
 	ss envhome
-	sd err
 	setcall envhome getenv(homestr)
 	if envhome!=(NULL)
-		sd s1;sd s2;sd s3=2
-		setcall s1 strlen(envhome);setcall s2 strlen(prefpath);add s3 s1;add s3 s2
-		sd mem
+		sd s1;sd s3=2
+		setcall s1 strlen(envhome);add s3 s1;add s3 s2
 		setcall err memoryalloc(s3,#mem)
 		if err==(noerror)
 			call memtomem(mem,envhome,s1)
 			ss p;set p mem;add p s1;set p# (asciislash);inc p
 			call memtomem(p,prefpath,s2);add p s2;set p# (NULL)
-			sd a;setcall a access(mem,(F_OK))
+			setcall a access(mem,(F_OK))
 			if a==0
 				SetCall err file_get_content_ofs(mem,ptrpreferencessize,ptrpreferencescontent,(NULL))
-				call free(mem)
-				if err!=(noerror)
-					#knowing that exists but still fearing at file open
-					call safeMessage(err)
+				if err==(noerror)
+					call free(mem)
+					return (noerror)
 				endif
-				return err
+				call safeMessage(err)  #openfile has alloc err msg
 			endif
-			str er="No preferences file found in HOME. The file is here: https://raw.githubusercontent.com/colin-i/o/master/.ocompiler.txt"
-			return er
+			call free(mem)
+		else
+			return err
+		endelse
+	else
+		call Message("Getenv error on HOME.")
+	endelse
+
+	#second verify in etc, more at Makefile about etcinclude
+	sd size;setcall size strlen(scrpath)
+	include "../../etcinclude.s"
+	if size>etchelper
+		sd test;set test scrpath
+		add test size
+		sub test etchelper
+		sd cmp;setcall cmp memcmp(etc_helper,test,etchelper) #an example when testing from src folder, is not usr/bin/o / bin/o
+		if cmp==0
+			sub size etchelper
+			sd sz=3+1+1
+			sd allsize;set allsize size
+			add allsize sz
+			add allsize s2
+			setcall err memoryalloc(allsize,#mem)
+			if err==(noerror)
+				call memtomem(mem,scrpath,size)
+				set scrpath mem
+				add scrpath size
+				call memtomem(scrpath,"etc/",(3+1))
+				add scrpath (3+1)
+				call memtomem(scrpath,prefpath,s2)
+				add scrpath s2
+				set scrpath# (NULL)
+				setcall a access(mem,(F_OK))
+				if a==0
+					SetCall err file_get_content_ofs(mem,ptrpreferencessize,ptrpreferencescontent,(NULL)) #openfile has alloc err msg
+					if err==(noerror)
+						call free(mem)
+						return (noerror)
+					endif
+					Call safeMessage(err)  #openfile has alloc err msg
+				endif
+				call free(mem)
+			else
+				return err
+			endelse
 		endif
-		return err
 	endif
-	str enverr="Getenv error on HOME."
-	return enverr
+
+	call Message("No preferences file found in etc.")
+
+	return "No preferences file found in HOME. The file is here: https://raw.githubusercontent.com/colin-i/o/master/.ocompiler.txt"
 endfunction
--- ocompiler-1.orig/src/linux/files/xgetfile.s
+++ ocompiler-1/src/linux/files/xgetfile.s
@@ -5,6 +5,15 @@ if argc<1
 	call exitMessage(ptrcmdscripterr)
 endif
 
+if argc<2
+	Char cmdnoinput="O Compiler - usage: o \"filename\" [[pref1 value1]...[prefN valueN]]"
+	char moreinfo="Documentation is here: https://htmlpreview.github.io/?https://github.com/colin-i/o/blob/master/o.html"
+	ss moreinfo_helper^moreinfo
+	dec moreinfo_helper;set moreinfo_helper# (asciireturn)
+	call exitMessage(#cmdnoinput)
+EndIf
+
+
 #if the file was executed from the PATH, then the root folder it is searched
 Data argumentssize#1
 str scriptfullname#1
@@ -93,12 +102,4 @@ else
 	endif
 endelse
 
-if argc<2
-	Char cmdnoinput="O Compiler - usage: o \"filename\" [[pref1 value1]...[prefN valueN]]"
-	char moreinfo="Documentation is here: https://htmlpreview.github.io/?https://github.com/colin-i/o/blob/master/o.html"
-	ss moreinfo_helper^moreinfo
-	dec moreinfo_helper;set moreinfo_helper# (asciireturn)
-	call exitMessage(#cmdnoinput)
-EndIf
-
 set path_nofree argv1
--- ocompiler-1.orig/src/windows/files/prefextra.s
+++ ocompiler-1/src/windows/files/prefextra.s
@@ -3,6 +3,6 @@ const variable_convention=ms_convention
 
 #Const error=-1 is at header
 
-function prefextra(ss *file,sd *ptrpreferencessize,sd *ptrpreferencescontent)
+function prefextra(ss *file,sd *ptrpreferencessize,sd *ptrpreferencescontent,ss *scrpath)
 	return (error)
 endfunction
