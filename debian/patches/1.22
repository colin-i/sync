Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 audapa (1-22) lunar; urgency=medium
 .
   * cleanup
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-07-19

--- audapa-1.orig/audapa/main.py
+++ audapa-1/audapa/main.py
@@ -37,22 +37,24 @@ def main():
 import os
 import sys
 
+def cleanup_dir(d):
+	if os.path.isdir(d):
+		return d
+	return None
+def cleanup_dir_rm(d):
+	if len(os.listdir(path=d))==0:
+		os.rmdir(d)   #OSError if not empty, the check was already
+		print(d.__str__()+" removed")
+	else:
+		print(d.__str__()+" is not empty.")
 def cleanup():
 	#remove config and exit
-	c=sets.get_config_dir()
-	if os.path.isdir(c):
+	c=cleanup_dir(sets.get_config_dir())
+	if c:
 		f=sets.get_config_file()
 		if not os.path.isfile(f):
 			f=None
-	else:
-		c=None
-	p=sets.get_data_dir()
-	if os.path.isdir(p):
-		if len(os.listdir(path=p))>0:
-			print(p.__str__()+" is not empty.")
-			p=None
-	else:
-		p=None
+	p=cleanup_dir(sets.get_data_dir())
 	if c or p:
 		print("Would remove:");
 		if c:
@@ -69,16 +71,13 @@ def cleanup():
 				break
 			str += x
 		if str=="yes":
-			r=" removed"
 			if c:
 				if f:
 					os.remove(f)
-					print(f+r)
-				os.rmdir(c)
-				print(c.__str__()+r)
+					print(f+" removed")
+				cleanup_dir_rm(c)
 			if p:
-				os.rmdir(p)
-				print(p.__str__()+r)
+				cleanup_dir_rm(p)
 		else:
 			print("expecting \"yes\"")
 
