Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+92) xenial; urgency=medium
 .
   * extracode revision for last version
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-06-17

--- ocompiler-1.orig/src/files/functions/64/reloc.s
+++ ocompiler-1/src/files/functions/64/reloc.s
@@ -48,7 +48,7 @@ endfunction
 #er
 function reloc64_post_base(sd struct)
 	sd err
-	setcall err reloc64_post_base_extension(struct,(NULL))
+	setcall err reloc64_post_base_extension(struct,(reloc64_main))
 	return err
 endfunction
 #er
--- ocompiler-1.orig/src/files/functions/actions/fn.s
+++ ocompiler-1/src/files/functions/actions/fn.s
@@ -551,24 +551,20 @@ function aftercall_manipulate(sd acall_v
 		setcall af_relof reloc64_offset(normal_offset)
 
 		if af_relof!=normal_offset
-			char a64=ateaximm+ecxregnumber;data *=0
+			char a64={REX_Operand_64,ateaximm+ecxregnumber};data *=reloc64_main;data *=reloc64_main
+			char *=0xc6;char *=ecxregnumber;char val#1
 
 			setcall err adddirectrel_base(ptrextra,af_relof,global_err_ptr#,0);If err!=(noerror);Return err;EndIf
-			setcall err reloc64_ante();If err!=(noerror);Return err;EndIf
-			SetCall err addtosec(#a64,5,code);If err!=(noerror);Return err;EndIf
-			setcall err reloc64_post();If err!=(noerror);Return err;EndIf
 
-			char g64=0xc6;char *=ecxregnumber;char val#1
 			set val acall_val
-
-			SetCall err addtosec(#g64,(bsz+bsz+bsz),code)
+			SetCall err addtosec(#a64,(10+3),code)
 		else
-			char g_err=0xc6;char *=disp32regnumber
-			data *rel=0
+			char g_err=0xc6;char *=disp32regnumber;data *rel=0;char val32#1
 
 			setcall err adddirectrel_base(ptrextra,(bsz+bsz),global_err_ptr#,0);If err!=(noerror);Return err;EndIf
-			SetCall err addtosec(#g_err,6,code);If err!=(noerror);Return err;EndIf
-			SetCall err addtosec(#acall_val,(bsz),code)
+
+			set val32 acall_val
+			SetCall err addtosec(#g_err,7,code)
 		endelse
 	EndElse
 	return err
--- ocompiler-1.orig/src/files/headers/header.h
+++ ocompiler-1/src/files/headers/header.h
@@ -405,6 +405,7 @@ const convdata_init=3
 #const i386_obj_default_reloc_rah=-1
 const i386_obj_default_reloc=0
 const i386_obj_default_reloc_rah=0
+const reloc64_main=NULL
 
 const sd_as_sv_bool=0
 const sd_as_sv_get=1
