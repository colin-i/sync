Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 audapa (1-j17) jammy; urgency=medium
 .
   * minimize
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-06-29

--- /dev/null
+++ audapa-1/.github/workflows/appimage.yml
@@ -0,0 +1,173 @@
+
+on:
+ workflow_dispatch:
+  inputs:
+   ppa:
+    description: "ppa sufix"
+
+jobs:
+ build:
+  runs-on: ubuntu-22.04
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      name2=Audapa
+      sname=auda
+      #
+      mkdir -p AppDir
+      file=runtime
+      arch_ai=-x86_64
+      archfile=${file}${arch_ai}
+      kitpart () {
+       #https://github.com/AppImage/pkg2appimage
+       #in searching for fuse3, was latest
+       #urlpart=`wget -q https://github.com/AppImage/AppImageKit/releases/continuous -O - | grep "${archfile}" | head -n 1 | cut -d '"' -f 2`
+       #this is at o urlpart=AppImage/AppImageKit/releases/latest/download/${archfile}
+       #this is from a browser, not tested at this comment
+       urlpart=AppImage/AppImageKit/releases/download/continuous/${archfile}
+      }
+      if [ ! -e "${file}" ]; then
+       kitpart
+       #"pkg2appimage-.*-x86_64.AppImage"
+       wget -c https://github.com/${urlpart}
+       mv ${archfile} ${file}
+       chmod a+x ${file}
+      fi
+      if [ ! -e "${name}.deb" ]; then
+       version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
+       if [ ! -e "lp2.py" ]; then
+        wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
+        #is already sudo apt install python3-launchpadlib
+       fi
+       OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} amd64)
+       wget ${OUTPUT}/+files/${name}_${version}_all.deb -O ${name}.deb
+       dpkg -x ${name}.deb AppDir
+       #
+       mv AppDir/usr/lib/python3.10 AppDir/usr/lib/python3 #lunar 3.11 to 3 was ok on jammy. appdirs is also on python3
+       pyanm=pyaudio
+       pya=`wget -q https://raw.githubusercontent.com/colin-i/${pyanm}/master/debian/changelog -O - | head -1 | grep -Poe "[^\(]*(?=\))"`
+       pyanme=${pyanm}o
+       OUTPUT=$(python3 lp2.py ppa ${pyanme} ${pya} amd64)
+       wget ${OUTPUT}/+files/${pyanme}_${pya}_all.deb -O ${pyanm}.deb
+       dpkg -x ${pyanm}.deb AppDir
+       #
+      fi
+      #dependencies
+      downdeb () {
+       pkg=${1}
+       repo=${2}
+       src="ro.archive.ubuntu.com"
+       inter=Packages
+       fullinter=${inter}${repo}
+       if [ ! -e "${fullinter}" ]; then
+        wget http://${src}/ubuntu/dists/jammy/${repo}/binary-amd64/${inter}.xz -O ${fullinter}.xz
+        xz -d ${fullinter}.xz
+       fi
+       debfilename=`grep "^Filename.*/${pkg}_" ${fullinter}`
+       debfilename=`echo ${debfilename} | tail -1 | cut -d ' ' -f 2`
+       wget_url=http://${src}/ubuntu/${debfilename}
+       maindeb=${pkg}.deb
+       wget ${wget_url} -O ${maindeb}
+       dpkg -x ${maindeb} AppDir
+      }
+      downdeb libportaudio2 universe
+      downdeb python3-appdirs main
+      #downdeb python3-pyaudio universe
+      #
+      apd=AppDir
+      cd ${apd}
+      file2=AppRun
+      if [ ! -e "${file2}" ]; then
+       if [ -z "${urlpart}" ]; then
+        kitpart
+       fi
+       archfile2=${file2}${arch_ai}
+       urlpart=${urlpart:0:`echo ${urlpart} | grep -ob '[^/]*$' | cut -d ':' -f 1`}${archfile2}
+       wget -c https://github.com/${urlpart}
+       chmod a+x ${archfile2}
+       mv ${archfile2} ${file2}
+      fi
+      pngfile=${name}.png
+      if [ ! -e "${pngfile}" ]; then
+       wget https://github.com/colin-i/test/releases/download/1.5/${name}.png -O ${pngfile}
+       cat > ${name}.desktop <<EOF
+      [Desktop Entry]
+      Type=Application
+      Name=${name2}
+      Exec=${name}
+      Icon=${name}
+      Categories=Utility
+      EOF
+       ln -s ${pngfile} .DirIcon
+      fi
+      #launcher
+      if [ ! -e "usr/bin/${sname}" ]; then
+       echo launcher
+       cd usr/bin
+       mv ${name} ${sname}
+       #PYTHONHOME is also set by AppRun wrong
+       cat > ${name} <<EOF
+      #!/bin/bash
+      cd "\$(dirname "\$0")"
+      cd ../
+      unset PYTHONHOME
+      LD_LIBRARY_PATH="\$(pwd)/lib/x86_64-linux-gnu" \
+       PYTHONPATH="\$(pwd)/lib/python3/dist-packages" \
+       python3 bin/${sname}
+      EOF
+       chmod 755 ${name}
+       cd ../../
+      fi
+      #metadata file
+      mi=usr/share/metainfo
+      mif=${mi}/com.colin.${name}.appdata.xml
+      if [ ! -e "${mif}" ]; then
+       page=`cat ../debian/control | grep "^Homepage" | cut -d ' ' -f2`
+       srcname=`echo ${page} | grep -o "[^/]*$"`
+       mkdir -p ${mi}
+       cat > ${mif} <<EOF
+      <?xml version="1.0" encoding="UTF-8"?>
+      <!-- Copyright 2022 -->
+      <component type="desktop-application">
+       <id>com.colin.${name}</id>
+       <metadata_license>FSFAP</metadata_license>
+       <name>${name2}</name>
+       <summary>Audio wave file manipulator</summary>
+       <description>
+        <ul>
+         <li>Sound effects: loudness,spread,and edit</li>
+         <li>Sound player</li>
+         <li>Sound recorder</li>
+        </ul>
+       </description>
+       <url type="homepage">${page}</url>
+       <screenshots>
+        <screenshot type="default">
+         <caption>${name2} image</caption>
+         <image>https://raw.github.com/colin-i/${srcname}/master/arh/${name}.png</image>
+        </screenshot>
+       </screenshots>
+       <content_rating/>
+      </component>
+      EOF
+      fi
+      #
+      cd ..
+      #
+      if [ ! -e "${name}.AppImage" ]; then
+       mksquashfs AppDir ${name}.squashfs -root-owned -noappend
+       cat runtime >> ${name}.AppImage
+       cat ${name}.squashfs >> ${name}.AppImage
+       chmod a+x ${name}.AppImage
+      fi
+      #glibc=`readelf -V ${apd}/usr/bin/${name} | grep -Po "(?<= GLIBC_)[^ ]*" | sort -Vr | head -1 | sed "s/\./-/g"`
+      #echo -n ${glibc} > version #"glibc" will not be ok for upload-artifact
+   - name: artifact
+     uses: actions/upload-artifact@v3
+     with:
+      name: appimage
+      path: |
+       ./*.AppImage
+      # ./version
--- /dev/null
+++ audapa-1/.github/workflows/upapp.yml
@@ -0,0 +1,40 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ uabuild:
+  runs-on: ubuntu-latest
+  steps:
+   - uses: actions/checkout@v3
+   - name: Run a multi-line script
+     run: |
+      #proj
+      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+      #get up_url
+      wget https://github.com/colin-i/test/releases/download/1.5/${name} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+      #get appimage artifact
+      id=$(gh run list --workflow=appimage.yml -b $(git rev-parse --abbrev-ref HEAD) | cut -f7 | head -1)
+      repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o [^/]*$`
+      #
+      url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
+      url=${url:1:-1}
+      echo ${url}
+      curl -L -H "Authorization: token ${{ secrets.PAT }}" ${url} --output a.zip
+      #to env
+      unzip ./a.zip
+      echo "file=${name}.AppImage" >> $GITHUB_ENV
+      echo "fullfile=${name}.amd64.AppImage" >> $GITHUB_ENV
+     env:
+      #for gh
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.file }}
+      asset_name: ${{ env.fullfile }}
+      asset_content_type: application/x-executable
--- audapa-1.orig/arh/pub
+++ audapa-1/arh/pub
@@ -1,9 +1,17 @@
 
+#must run master that will do a release first, then here with the jammy appimage, at N appimage will be on master
+
+~/test/pyver && \
 ~/test/debinit "${1}" && \
 ~/test/pub deb && \
 ~/test/keyring2 && \
 ~/test/deb && \
 ~/test/publp && \
+~/test/ai && \
+~/test/pub appimage && \
+~/test/upapp && \
+~/test/pub upapp && \
+~/test/pub2 && \
 ~/test/publp2 && \
 ~/test/lp 0 kinetic && \
 ~/test/lp x kinetic
--- audapa-1.orig/audapa/bar.py
+++ audapa-1/audapa/bar.py
@@ -7,6 +7,9 @@ from . import sets
 from . import play
 from . import build
 
+def min(b,win):
+	win.minimize()
+	
 def cl(b,d):
 	loop.stop()
 
@@ -17,6 +20,7 @@ def init(combo):
 	box=Gtk.Box()
 	box.append(sets.colorButton(chr(input), record.start, "Record audio", input))
 	box.append(sets.colorButton(chr(0x2699), sets.sets, "Settings", combo))
+	box.append(sets.colorButton("_", min, "Minimize", combo[0]))
 	box.append(sets.colorButton("X", cl, "Exit"))
 	box.append(play.entry)
 	box.append(play.openbutton)
--- audapa-1.orig/v2
+++ audapa-1/v2
@@ -1 +1 @@
-1.0.10
\ No newline at end of file
+1.0.12
\ No newline at end of file
