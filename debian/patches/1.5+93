Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+93) xenial; urgency=medium
 .
   * critical: fix exec and nobits
Author: bc <bc@bc-HP-Pavilion-x360-Convertible>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-06-26

--- ocompiler-1.orig/arh/pub
+++ ocompiler-1/arh/pub
@@ -50,6 +50,11 @@ last=`curl https://api.github.com/repos/
 
 #plans:
 
+#vars/fns/consts and usage locations in a json:
+#	oanalyzer or ounused, dbg file log(+exec.dbg) or same, libounused/libocompiler or liboanalyzer
+#will replace grep commands
+#can be for odbg or something new
+
 #simple and or
 #={"a","b"}
 #~(page_sectionalignment-1)
@@ -57,4 +62,4 @@ last=`curl https://api.github.com/repos/
 #SizeofStackReserve against growramp?
 #at write when there is at 0x80.... or at exes it is a fixed virtual
 #there is 0x66 prefix for words and some movsw/movzw
-#rbx at stack init (is disp32, can be 32,8 or none) but need to know the number of args
+#rbx at stack init (is imm32, can be 32,8 or none) but need to know the number of args
--- ocompiler-1.orig/src/Makefile
+++ ocompiler-1/src/Makefile
@@ -65,5 +65,6 @@ test:
 	echo "test"
 	cd linux; ../o o.s nul_res_pref 1; mv o z; ${linker} ./z o.s nul_res_pref 1; diff o z
 #/home/bc/Desktop/out/libc6-i386.AppImage /home/bc/o/ocompiler-1/src/linux/z /home/bc/o/ocompiler-1/src/linux/o.s nul_res_pref 1
+#2.36-0ubuntu4 (jammy) was ok, backportpackage is working for esm packages (tested)
 
 .PHONY: all install clean distclean uninstall test
--- ocompiler-1.orig/src/files/actions/main.s
+++ ocompiler-1/src/files/actions/main.s
@@ -10,7 +10,7 @@ data dot_comma_end#1;set dot_comma_end 0
 #data logbackup#1
 
 #backup prefs between passes, this can also be here: comline args, this, actions.s
-call pref_store()
+#moved to after the format is set: call pref_store()
 
 set parses (pass_init)
 
--- ocompiler-1.orig/src/files/actions/main/index.s
+++ ocompiler-1/src/files/actions/main/index.s
@@ -97,9 +97,9 @@ if loop==1
 						#tested at function gather; FORMAT is here starting with FUNCTIONX to set the mask knowing the format
 						if formatdefined==0
 							if commandset!=(cFORMAT)
-								set nobits_virtual (No)   #this is default pe_exe format, same behavior for nobits
+								set nobits_virtual (No)     #this is default pe_exe format, same behavior for nobits
+								call backup_pref(#formatdefined)
 							endif
-							Set formatdefined 1
 						endif
 						#needing to find virtual start
 						if commandset==(cDECLARE)
@@ -191,10 +191,6 @@ if loop==1
 				Include "./index/i3.s"
 			EndElse
 			If errormsg==(noerror)
-				#after the first noncomment command, the format command cannot be changed
-				#this can be at line 0
-				if formatdefined==1;Set formatdefined 2;endif
-
 				#set when code started
 				#this can be at line 0
 				If fnavailable==two
--- ocompiler-1.orig/src/files/actions/main/index/format.s
+++ ocompiler-1/src/files/actions/main/index/format.s
@@ -1,96 +1,100 @@
 
-Data formatresponse#1
+If formatdefined==1
+	Char nomoreformats="The FORMAT command can be defined at start and only once."
+	Str ptrnomoreformats^nomoreformats
+	Set errormsg ptrnomoreformats
+else
+	Data formatresponse#1
+
+	#exe format
+	Char exeformat="EXE"
+	Str ptrexeformat^exeformat
+	SetCall formatresponse stratmemspc(pcontent,pcomsize,ptrexeformat,false)
 
-#exe format
-Char exeformat="EXE"
-Str ptrexeformat^exeformat
-SetCall formatresponse stratmemspc(pcontent,pcomsize,ptrexeformat,false)
-
-#elf format
-If formatresponse==false
-	Char elfformat="ELF"
-	Str ptrelfformat^elfformat
-	SetCall formatresponse stratmemspc(pcontent,pcomsize,ptrelfformat,false)
-	If formatresponse==true
-		Set fileformat elf_unix
-		Char elfobjformat="OBJ"
-		Str ptrelfobjformat^elfobjformat
-		Data elfobjformresp#1
-
-		SetCall elfobjformresp stringsatmemspc(pcontent,pcomsize,ptrelfobjformat,false,"64",p_is_for_64_value)
-		If elfobjformresp==true
-			sd is_so
-			setcall is_so stratmemspc(pcontent,pcomsize,"SO",false)
-			if is_so==true
-				if ignore_format_so==(No)
-					setcall errormsg addtolog_char((log_reusable),logfile)
+	#elf format
+	If formatresponse==false
+		Char elfformat="ELF"
+		Str ptrelfformat^elfformat
+		SetCall formatresponse stratmemspc(pcontent,pcomsize,ptrelfformat,false)
+		If formatresponse==true
+			Set fileformat elf_unix
+			Char elfobjformat="OBJ"
+			Str ptrelfobjformat^elfobjformat
+			Data elfobjformresp#1
+
+			SetCall elfobjformresp stringsatmemspc(pcontent,pcomsize,ptrelfobjformat,false,"64",p_is_for_64_value)
+			If elfobjformresp==true
+				sd is_so
+				setcall is_so stratmemspc(pcontent,pcomsize,"SO",false)
+				if is_so==true
+					if ignore_format_so==(No)
+						setcall errormsg addtolog_char((log_reusable),logfile)
+					endif
 				endif
-			endif
-			If errormsg==noerr
-				if p_is_for_64_value#==(TRUE)
-					set convention_64 convention_64#
-					if convention_64==(ignore_convention_input)
-						set p_is_for_64_value# (FALSE)
-					else
-						call reloc64_init()
-						if convention_64==(direct_convention_input)
-							call convdata((convdata_init),(variable_convention))
-						#cross_convention_input
-						elseif (variable_convention)==(ms_convention)
-							call convdata((convdata_init),(lin_convention))
+				If errormsg==noerr
+					if p_is_for_64_value#==(TRUE)
+						set convention_64 convention_64#
+						if convention_64==(ignore_convention_input)
+							set p_is_for_64_value# (FALSE)
 						else
-							call convdata((convdata_init),(ms_convention))
+							call reloc64_init()
+							if convention_64==(direct_convention_input)
+								call convdata((convdata_init),(variable_convention))
+							#cross_convention_input
+							elseif (variable_convention)==(ms_convention)
+								call convdata((convdata_init),(lin_convention))
+							else
+								call convdata((convdata_init),(ms_convention))
+							endelse
 						endelse
-					endelse
-				endif
-				Set object true
-				SetCall errormsg elfaddstrsym(ptrnull,null,null,null,null,null,ptrtable)
-				If errormsg==noerr
-					Char elfdata=".data"
-					Str ptrelfdata^elfdata
-					Data dataind=dataind
-					Set datastrtab namesReg
-					SetCall errormsg elfaddstrsym(ptrelfdata,null,null,STT_SECTION,(STB_LOCAL),dataind,ptrtable)
+					endif
+					Set object true
+					SetCall errormsg elfaddstrsym(ptrnull,null,null,null,null,null,ptrtable)
 					If errormsg==noerr
-						Char elftext=".text"
-						Str ptrelftext^elftext
-						Data codeind=codeind
-						Set codestrtab namesReg
-						SetCall errormsg elfaddstrsym(ptrelftext,null,null,STT_SECTION,(STB_LOCAL),codeind,ptrtable)
-						sd totallocalsymsaddedatstart=3
+						Char elfdata=".data"
+						Str ptrelfdata^elfdata
+						Data dataind=dataind
+						Set datastrtab namesReg
+						SetCall errormsg elfaddstrsym(ptrelfdata,null,null,STT_SECTION,(STB_LOCAL),dataind,ptrtable)
 						If errormsg==noerr
-							if nobits_virtual==(Yes)
-								Set dtnbstrtab namesReg
-								SetCall errormsg elfaddstrsym(".dtnb",null,null,STT_SECTION,(STB_LOCAL),(dtnbind),ptrtable)
-								inc totallocalsymsaddedatstart
-							endif
+							Char elftext=".text"
+							Str ptrelftext^elftext
+							Data codeind=codeind
+							Set codestrtab namesReg
+							SetCall errormsg elfaddstrsym(ptrelftext,null,null,STT_SECTION,(STB_LOCAL),codeind,ptrtable)
+							sd totallocalsymsaddedatstart=3
+							If errormsg==noerr
+								if nobits_virtual==(Yes)
+									Set dtnbstrtab namesReg
+									SetCall errormsg elfaddstrsym(".dtnb",null,null,STT_SECTION,(STB_LOCAL),(dtnbind),ptrtable)
+									inc totallocalsymsaddedatstart
+								endif
+							EndIf
 						EndIf
 					EndIf
-				EndIf
-				Set imagebaseoffset null
-				Set startofdata null
-			endif
-		Else
-			Data elf_imagebase=elf_imagebase
-			Set imagebaseoffset elf_imagebase
-
-			Set startofdata elf_startofdata
-
-			set nobits_virtual (No) #.dtnb is not yet at exec format
-		EndElse
+					Set imagebaseoffset null
+					Set startofdata null
+				endif
+			Else
+				Data elf_imagebase=elf_imagebase
+				Set imagebaseoffset elf_imagebase
+
+				Set startofdata elf_startofdata
+
+				set nobits_virtual (No)  #.dtnb is not yet at exec format
+			EndElse
+		EndIf
+	Else
+		set nobits_virtual (No)  #.dtnb is not yet at exe format
+	EndElse
+
+	If errormsg==noerr
+		If formatresponse==false
+			Char unrecform="Unrecognized file format."
+			Str ptrunrecform^unrecform
+			Set errormsg ptrunrecform
+		else
+			call backup_pref(#formatdefined)
+		endelse
 	EndIf
-Else
-	set nobits_virtual (No) #.dtnb is not yet at exe format
-EndElse
-
-If errormsg==noerr
-	If formatresponse==false
-		Char unrecform="Unrecognized file format."
-		Str ptrunrecform^unrecform
-		Set errormsg ptrunrecform
-	ElseIf formatdefined==2
-		Char nomoreformats="The FORMAT command can be defined at the start and only once."
-		Str ptrnomoreformats^nomoreformats
-		Set errormsg ptrnomoreformats
-	EndElseIf
-EndIf
+endelse
--- ocompiler-1.orig/src/files/functions/pref/backup.s
+++ ocompiler-1/src/files/functions/pref/backup.s
@@ -26,3 +26,8 @@ function pref_restore()
 		add src (dwsz)
 	endwhile
 endfunction
+
+function backup_pref(sd p_formatdefined)
+	set p_formatdefined# 1
+	call pref_store() #this must be after "set nobits_virtual"
+endfunction
--- /dev/null
+++ ocompiler-1/src/test32
@@ -0,0 +1,3 @@
+
+linker=/home/bc/Desktop/out/squashfs-root/lib32/ld-linux.so.2 make test
+echo $?
