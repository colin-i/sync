Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+106) xenial; urgency=medium
 .
   * fix triple cast
Author: bc <bc@bc-Type1ProductConfigId>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2023-11-25

--- ocompiler-1.orig/o.html
+++ ocompiler-1/o.html
@@ -705,7 +705,7 @@
 	<b>CallEx</b> is for prepared calls. This is a 3 argument operation. The first argument is the function name, the second argument is the arguments pointer and the third argument is the number of arguments. The arguments are passed forward respecting the size of the integer(4 bytes on 32-bits app, 8 on 64). One usage can be when there is a call with a number of arguments detected at run-time and want to pass them all to another call.
 	A "SetCallEx" trick is to wrap <b>CallEx</b> in a function and to <b>SetCall</b> that function.
 	<br>
-	<b>CallX</b>, <b>...CallX</b>, <b>CallExX</b> will call like a <b>FunctionX</b>/<b>ImportX</b>.
+	<b>CallX</b>, <b>...XCall</b>, <b>CallExX</b> will call like a <b>FunctionX</b>/<b>ImportX</b>.
 	<p>
 	Example:
 	<a class="code">
@@ -940,19 +940,18 @@
 	<tr>                                                                       <td>Xfile_function_e*</td><td>Xfile_function_e_*</td></tr>
 </table>
 <table id="selection_table">
-	<tr><td rowspan=5>Xfile_declare</td><td class="green" rowspan=5>D</td><td>Xfile_declsign_pointer</td>    <td class="red">var/fn</td></tr>
-	<tr>                                                                  <td>Xfile_declsign_reserve</td>    <td class="green">N</td></tr>
-	<tr>                                                                  <td rowspan=3>Xfile_declsign_*</td><td>Xfile_declmode_value</td> <td class="green">N</td></tr>
-	<tr>                                                                                                     <td>Xfile_declmode_group</td> <td class="blue">nr_of_args</td>           <td class="green">{N}</td></tr>
-	<tr>                                                                                                     <td>Xfile_declmode_string</td><td class="red">string<sup-r>s</sup-r></td></tr>
+	<tr><td rowspan=5>Xfile_declare</td><td class="green" rowspan=5>D</td><td>Xfile_declsign_pointer</td>     <td class="red">var/fn</td></tr>
+	<tr>                                                                  <td>Xfile_declsign_reserve</td>     <td class="green">N</td></tr>
+	<tr>                                                                  <td rowspan=3>Xfile_declsign_e*</td><td>Xfile_declmode_value</td> <td class="green">N</td></tr>
+	<tr>                                                                                                      <td>Xfile_declmode_group</td> <td class="blue">nr_of_args</td>           <td class="green">{N}</td></tr>
+	<tr>                                                                                                      <td>Xfile_declmode_string</td><td class="red">string<sup-r>s</sup-r></td></tr>
 </table>
 <table id="selection_table">
 	<tr><td rowspan=2>Xfile_action</td><td>Xfile_action_a*</td><td class="green">A</td></tr>
 	<tr>                               <td>Xfile_action_t*</td> <td class="green">VF</td></tr>
 </table>
 <table id="selection_table">
-	<tr><td rowspan=2>Xfile_action2</td><td class="green" rowspan=2>VF</td><td rowspan=2>Xfile_action2_*</td><td class="green">A</td></tr>
-	<tr>                                                                                                     <td>Xfile_arg_call</td><td class="green">CL</td></tr>
+	<tr><td>Xfile_action2</td><td class="green">VF</td><td>Xfile_action2_*</td><td class="green">A</td></tr>
 </table>
 <table id="selection_table">
 	<tr><td>Xfile_call</td>  <td rowspan=2>Xfile_call_*</td><td class="green">CL</td></tr>
@@ -971,6 +970,7 @@
 	<tr><td>Xfile_arg_number</td><td class="green">N</td></tr>
 	<tr><td>Xfile_arg_string</td><td class="red">string<sup-r>s</sup-r></td></tr>
 	<tr><td>Xfile_arg_varfn</td> <td class="green">VF</td></tr>
+	<tr><td>Xfile_arg_call</td>  <td class="green">CL</td></tr>
 </table>
 <br>Table C:
 <table id="selection_table">
@@ -1008,26 +1008,16 @@
 </table>
 <br>Table VF:
 <table id="selection_table">
-	<tr><td rowspan=4>Xfile_arg_varfn_prefix_no</td> <td rowspan=3>Xfile_arg_varfn_colon_no</td><td rowspan=2>Xfile_arg_varfn_dot_no</td><td class="red">func</td></tr>
-	<tr>                                                                                                                                 <td class="green">V</td></tr>
-	<tr>                                                                                        <td class="green">VFD</tr>
-	<tr>                                             <td class="green">VFC</td></tr>
-	<tr><td rowspan=3>Xfile_arg_varfn_prefix_yes</td><td>Xfile_arg_varfn_colon_no</td>          <td class="green">VFD*</td></tr>
-	<tr>                                             <td class="green">VFC</td></tr>
-</table>
-<br>Table VFC:
-<table id="selection_table">
-	<tr><td rowspan=2>Xfile_arg_varfn_colon_yes</td><td colspan=2>Xfile_arg_varfn_dot_no</td>                                                   <td class="red" rowspan=2>var</td><td rowspan=2>Xfile_suffix_*</td><td class="green" rowspan=2>VFD*</td></tr>
-	<tr>                                            <td>Xfile_arg_varfn_dot_yes</td>         <td class="red">func<sup-r>f</sup-r></td></tr>
-</table>
-<br>Table VFD:
-<table id="selection_table"><tr><td>Xfile_arg_varfn_dot_yes</td><td class="green">DT</td></tr></table>
-<br>Table VFD*:
+	<tr><td rowspan=3>Xfile_arg_varfn_prefix_*</td><td colspan=5>Xfile_arg_varfn_colon_no</td>                                                                                                                                                      <td rowspan=3>
 <table id="selection_table">
-	<tr><td>Xfile_arg_varfn_dot_no</td><td class="green">V</td></tr>
-	<tr><td class="green">VFD</td></tr>
+	<tr><td rowspan=2>Xfile_arg_varfn_dot_no</td><td class="red">func</td></tr>
+	<tr>                                         <td class="green">V</td></tr>
+	<tr><td>Xfile_arg_varfn_dot_yes</td>         <td class="green">DT</td></tr>
+</table></td></tr>
+	<tr>                                           <td rowspan=2>Xfile_arg_varfn_colon_yes</td><td colspan=2>Xfile_arg_varfn_dot_no</td>                                         <td class="red" rowspan=2>var</td><td rowspan=2>Xfile_suffix_*</td>
+	<tr>                                                                                       <td>Xfile_arg_varfn_dot_yes</td>         <td class="red">func<sup-r>f</sup-r></td></tr>
 </table>
-<br><div class="green">A C CD CL D DT <sup-r>f</sup-r> N <sup-r>s</sup-r> V VF VFC VFD VFD*</div>
+<br><div class="green">A C CD CL D DT <sup-r>f</sup-r> N <sup-r>s</sup-r> V VF</div>
 <h3><a name="otheroperations">XVI. Other operations</a></h3>
 <p>
 	Other commands that comes with the language.
--- ocompiler-1.orig/old
+++ ocompiler-1/old
@@ -1,4 +1,5 @@
-File ID: 1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac
+File ID: 1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O
 [{'id': 'anyoneWithLink', 'type': 'anyone', 'kind': 'drive#permission', 'role': 'reader', 'allowFileDiscovery': False}, {'id': '04979898612943849512', 'type': 'user', 'kind': 'drive#permission', 'role': 'owner'}]
+Found file: ocompiler-1-5+102.x86_64.rpm, 1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O, 2023-11-24T14:29:49.425Z, https://drive.google.com/uc?id=1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O&export=download
 Found file: ocompiler-1-5+100.x86_64.rpm, 1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac, 2023-11-17T15:39:47.661Z, https://drive.google.com/uc?id=1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac&export=download
 Found file: ocompiler-1-5+98.x86_64.rpm, 1bNGKHelihqwRjqxpb43YwfcYlx1J_L78, 2023-11-17T15:27:56.867Z, https://drive.google.com/uc?id=1bNGKHelihqwRjqxpb43YwfcYlx1J_L78&export=download
--- ocompiler-1.orig/src/files/actions/setdefdir.s
+++ ocompiler-1/src/files/actions/setdefdir.s
@@ -33,6 +33,16 @@ SetCall safecurrentdirtopath memalloc(fl
 If safecurrentdirtopath=null
 	Call errexit()
 EndIf
+
+#files
+Set fileout (openno)
+set logfile (openno)
+set xfile (openno)
+
+#scopes and pass_calls
+set stackalign (NULL)
+set scopesbag (NULL)
+
 Call memtomem(safecurrentdirtopath,safedir,wordsize)
 Data safecurrentdirloc#1
 Set safecurrentdirloc safecurrentdirtopath
--- ocompiler-1.orig/src/files/functions/actions/argstwo.s
+++ ocompiler-1/src/files/functions/actions/argstwo.s
@@ -2,6 +2,7 @@
 #err
 Function twoargs(sv ptrcontent,sd ptrsize,sd subtype,sd ptrcondition)
 	sd err;setcall err twoargs_ex(ptrcontent,ptrsize,subtype,ptrcondition,(allow_no)) #there are 2 more arguments but are not used
+	set main.tempdataReg 0 #this must be after primwrite and/or divmul, and at pass_write
 	return err
 endfunction
 
@@ -426,7 +427,6 @@ Function twoargs_ex(sv ptrcontent,sd ptr
 
 		SetCall errnr addtosec(jumpcond,conddatasz,codeptr)
 	EndElseIf
-	#call restore_argmask() #this must be after primwrite and/or divmul
 	Return errnr
 EndFunction
 
--- ocompiler-1.orig/src/files/functions/actions/enumcomma.s
+++ ocompiler-1/src/files/functions/actions/enumcomma.s
@@ -199,7 +199,7 @@ Function enumcommas(sv ptrcontent,sd ptr
 				char d_quot=asciidoublequote
 				if argsize#=d_quot
 					#look later at escapes, here only at the margins
-					#here the string ".." is in a good condition when quotes_forward was called at fn(...)
+					#here the string ".." is in a good condition when quotes_forward was called at parenthesis_size
 					sd last;set last content
 					sub last sz
 					dec argsize
--- ocompiler-1.orig/src/files/functions/argument/arg.s
+++ ocompiler-1/src/files/functions/argument/arg.s
@@ -516,42 +516,39 @@ function getarg_colon(sd content,sd args
 				setcall subtract_base stack64_base(ptrdata#)
 			endelse
 		endelse
-		char random#1
-		data *#3
-		#in case are two args
-		data d2#3
-		call tempdatapair(#random,ptrdata,#d2)
+		setcall err tempdataadd(ptrdata)
+		if err=(noerror)
+			sd pointer;set pointer ptrdata#
+			sub pointer# subtract_base
 
-		sd pointer;set pointer ptrdata#
-		sub pointer# subtract_base
-
-		#keep location, will be some disturbance if combining stack with data, but if not is ok
-		sd pointer2=maskoffset;sd data2=maskoffset
-		add pointer2 pointer
-		add data2 data
-		sd location_part;sd transformation_part
-		if is_stack!=0
-			set location_part (stack_location_bits)
-			and location_part data2#
-			set transformation_part (~stack_location_bits)
-		else
-			set location_part (location_bits)
-			and location_part data2#
-			set transformation_part (~location_bits)
-		endelse
-		and pointer2# transformation_part
-		or pointer2# location_part
+			#keep location, will be some disturbance if combining stack with data, but if not is ok
+			sd pointer2=maskoffset;sd data2=maskoffset
+			add pointer2 pointer
+			add data2 data
+			sd location_part;sd transformation_part
+			if is_stack!=0
+				set location_part (stack_location_bits)
+				and location_part data2#
+				set transformation_part (~stack_location_bits)
+			else
+				set location_part (location_bits)
+				and location_part data2#
+				set transformation_part (~location_bits)
+			endelse
+			and pointer2# transformation_part
+			or pointer2# location_part
 
-		#decide if add offset now or at runtime with sufix
-		if pointer_size!=0
-			#runtime
-			or pointer2# (suffixbit)
-			add pointer2 (masksize) #note that here is not on nameoffset, is on data#3 value from temp
-			set pointer2# pointer#
-			set pointer# data#
-		else
-			add pointer# data#
-		endelse
+			#decide if add offset now or at runtime with sufix
+			if pointer_size!=0
+				#runtime
+				or pointer2# (suffixbit)
+				add pointer2 (masksize) #note that here is not on nameoffset, is on data#3 value from temp
+				set pointer2# pointer#
+				set pointer# data#
+			else
+				add pointer# data#
+			endelse
+		endif
 	endif
 	return err
 endfunction
--- ocompiler-1.orig/src/files/functions/argument/argument.s
+++ ocompiler-1/src/files/functions/argument/argument.s
@@ -162,72 +162,70 @@ Function argument(data ptrcontent,data p
 	Data ptrdataarg^dataarg
 	Data sufix#1
 	Data ptrsufix^sufix
+	data tempdata_mark#1
 
+	set tempdata_mark main.tempdataReg
 	SetCall err arg(ptrcontent,ptrsize,ptrdataarg,ptrlowbyte,ptrsufix,forwardORcallsens,(allow_yes))
-	If err!=(noerror)
-		Return err
-	EndIf
+	If err=(noerror)
+		sd imm
+		setcall imm getisimm()
+		if imm=false
+			#Data noreg=noregnumber
+			#Data eaxreg=eaxregnumber
+			#Data intchar#1
+			#Set intchar noreg
+			If forwardORcallsens!=forward
+			#push
+				#If lowbyte==false
+				#since with 64 push data will push quad even without rex
+				#	Char push={0xff}
+				#	Char pushopcode={6}
+				#	Set op push
+				#	Set regopcode pushopcode
+				#	call stack64_op_set()
+				#Else
+				#If lowbyte==true
+				#	#prepare for eax for al
+				#	Set intchar eaxreg
+				#EndIf
+				Char pushaction={moveatprocthemem}
+				Set op pushaction
+				set regopcode (eaxregnumber)
 
-	sd imm
-	setcall imm getisimm()
-	if imm=false
-		#Data noreg=noregnumber
-		#Data eaxreg=eaxregnumber
-		#Data intchar#1
-		#Set intchar noreg
-		If forwardORcallsens!=forward
-		#push
-			#If lowbyte==false
-			#since with 64 push data will push quad even without rex
-			#	Char push={0xff}
-			#	Char pushopcode={6}
-			#	Set op push
-			#	Set regopcode pushopcode
-			#	call stack64_op_set()
-			#Else
-			#If lowbyte==true
-			#	#prepare for eax for al
-			#	Set intchar eaxreg
-			#EndIf
-			Char pushaction={moveatprocthemem}
-			Set op pushaction
-			set regopcode (eaxregnumber)
-
-			char pushadvance={0x50}
-			data pushcontinuationsize=1
-			data ptrpushcontinuation^pushadvance
-			Set ptrcontinuation ptrpushcontinuation
-			set sizeofcontinuation pushcontinuationsize
-			#EndElse
-		ElseIf lowbyte=true
-		#imm don't use one byte at the moment
-			if regprepare_bool=false
-				Dec op
-			endif
-		#Else;Set intchar regopcode
-		EndElseIf
-		sd comp_at_bigs;setcall comp_at_bigs comp_one(lowbyte,dataarg,sufix,op)
-		setcall err writeop_promotes(dataarg,op,sufix,regopcode,lowbyte,comp_at_bigs)
-		#call restore_argmask() #before this there is no err!=noerr: it is not a must, only less space
-	Else
-	#imm
-		If forwardORcallsens!=forward
-		#push
-			setcall err write_imm(dataarg,(0x68))
-		else
-		#return/exit
-			setcall err write_imm_sign(dataarg,regopcode)
-		endelse
-	EndElse
-	If err!=(noerror)
-		Return err
-	EndIf
-	If sizeofcontinuation!=zero
-		#return / exit / (only at noimm):incst/push
-		SetCall err addtosec(ptrcontinuation,sizeofcontinuation,codeptr)
-		return err
-	EndIf
-	Return (noerror)
+				char pushadvance={0x50}
+				data pushcontinuationsize=1
+				data ptrpushcontinuation^pushadvance
+				Set ptrcontinuation ptrpushcontinuation
+				set sizeofcontinuation pushcontinuationsize
+				#EndElse
+			ElseIf lowbyte=true
+			#imm don't use one byte at the moment
+				if regprepare_bool=false
+					Dec op
+				endif
+			#Else;Set intchar regopcode
+			EndElseIf
+			sd comp_at_bigs;setcall comp_at_bigs comp_one(lowbyte,dataarg,sufix,op)
+			setcall err writeop_promotes(dataarg,op,sufix,regopcode,lowbyte,comp_at_bigs)
+		Else
+		#imm
+			If forwardORcallsens!=forward
+			#push
+				setcall err write_imm(dataarg,(0x68))
+			else
+			#return/exit
+				setcall err write_imm_sign(dataarg,regopcode)
+			endelse
+		EndElse
+		If err=(noerror)
+			If sizeofcontinuation!=zero
+				#return / exit / (only at noimm):incst/push
+				SetCall err addtosec(ptrcontinuation,sizeofcontinuation,codeptr)
+			EndIf
+		EndIf
+	endif
+	set main.tempdataReg tempdata_mark ##in arg can alloc ok, then an error in arg, free here for the second case
+	return err
 endfunction
 
 #same as comp_sec
--- ocompiler-1.orig/src/files/functions/commons/getcommand.s
+++ ocompiler-1/src/files/functions/commons/getcommand.s
@@ -453,7 +453,7 @@ function commandSubtypeDeclare_to_typenu
 	return subtype
 endfunction
 #set errormsg to pointer error or return the find
-Function getcommand(data pcontent,data psize,data ptrsubtype,data ptrerrormsg,data pointercommands)
+Function getcommand(value pcontent,data psize,data ptrsubtype,data ptrerrormsg,data pointercommands)
 	Data zero=0
 	Data command#1
 	Data result#1
@@ -475,9 +475,10 @@ Function getcommand(data pcontent,data p
 		Add cursor dsz
 		Set spacebool cursor#
 
-		#implement for SetCall...
+		#implement for Set[X]Call
 		Char calldata="CALL"
-		Str call^calldata
+		vStr call^calldata
+		vstr xstr="X"
 
 		ss extstr=NULL
 
@@ -485,33 +486,32 @@ Function getcommand(data pcontent,data p
 		sv extbool^extbooldata
 
 		If command=(cPRIMSEC)
-			Set extstr call
+			Set extstr xstr
 		elseif command=(cCALL)
 		vstr call_ret_str="RET"
 			set extstr call_ret_str
 		Elseif command=(cSTARTFUNCTION)
 			sd x;setcall x func_xfile(ptrsubtype#)
 			if x!=(Xfile_function_not_x)
-				Set extstr "X" #varargs
+				Set extstr xstr ##varargs
 			endif
 		elseif command=(cCALLEX)
 			set extstr call_ret_str
 		endElseif
 
+		sd test;set test pcontent#
 		SetCall result stringsatmemspc(pcontent,psize,offset,spacebool,extstr,extbool)
 		If extbooldata=true
 		#here firstAndSecond part was recognized
 			If command=(cPRIMSEC)
 				#or first byte at subcommand to recognize the xcall at two args
-				or ptrsubtype# (x_call_flag)
+				or ptrsubtype# (primsec_flags)
 				if result=(FALSE)
-				#here there was not a space
-					setcall result stratmemspc(pcontent,psize,"X",spacebool)
-					if result=(TRUE)
-						or ptrsubtype# (x_callx_flag)
-					else
+				#here there was not a space, maybe is the deprecated ..xcall
+					setcall result stratmemspc(pcontent,psize,call,spacebool)
+					if result=(FALSE)
 						break
-					endelse
+					endif
 				endif
 			Else
 				if result=(FALSE)
@@ -532,7 +532,19 @@ Function getcommand(data pcontent,data p
 			endElse
 			return command
 		elseIf result=true
+		#here (first/onlyone)+-space was ok
 			Return command
+		elseif test!=pcontent#
+		#here first was ok but not the space
+			If command=(cPRIMSEC)
+				#here there was not extra x, maybe is the deprecated ..xcall
+				setcall result stratmemspc(pcontent,psize,call,spacebool)
+				if result=(TRUE)
+					or ptrsubtype# (x_call_flag)
+					Return command
+				endif
+			endif
+			break
 		endelseIf
 		Add pointercommands dsz
 		Set cursor pointercommands#
--- ocompiler-1.orig/src/files/functions/commons/strcommons.s
+++ ocompiler-1/src/files/functions/commons/strcommons.s
@@ -234,11 +234,9 @@ Function stringsatmemspc(data pcontent,d
 
 	If extstr!=zero
 		SetCall extbool# stratmem(tocontent,tosize,extstr)
-		if extbool#=(TRUE)
-			#to work around ...callx, and ok in other cases
-			Set pcontent# content
-			Set psize# size
-		endif
+		#to work around ...xcall, and ok in other cases
+		Set pcontent# content
+		Set psize# size
 	EndIf
 
 	If spacereq=nonzero
--- ocompiler-1.orig/src/files/functions/commons/vars.s
+++ ocompiler-1/src/files/functions/commons/vars.s
@@ -345,22 +345,23 @@ function varsufix_ex(ss content,sd size,
 			endelse
 		else
 			sd is_str
-			setcall is_str cast_resolve(type,cast,ptrdata)
-
-			If is_str=false
-				Set ptrlow# false
-			Else
-			#str ss
-				If ptrsufix#=(sufix_true)
-					if prefix#=0
-						Set ptrlow# true
-					else
-						Set ptrlow# false
-					endelse
-				Else
+			setcall is_str cast_resolve(type,cast,ptrdata,#err)
+			if err=(noerror)
+				If is_str=false
 					Set ptrlow# false
+				Else
+				#str ss
+					If ptrsufix#=(sufix_true)
+						if prefix#=0
+							Set ptrlow# true
+						else
+							Set ptrlow# false
+						endelse
+					Else
+						Set ptrlow# false
+					EndElse
 				EndElse
-			EndElse
+			endif
 		endelse
 	endif
 	return err
@@ -412,24 +413,21 @@ function cast_test(ss content,sd p_size)
 	return (no_cast)
 endfunction
 
-function tempdatapair(ss p_trick,sv ptrdata,sd data2)
-	xor p_trick# 1
-	sd test=1;and test p_trick#
-	if test=0
-		set p_trick data2
-		#add p_trick (location_and_mask)
-	else
-		inc p_trick
-	endelse
-	sd val;set val ptrdata#
-	set ptrdata# p_trick
-	set p_trick#d^ val#
-	add p_trick (maskoffset);add val (maskoffset)
-	set p_trick#d^ val#
+function tempdataadd(sv ptrdata)
+	sd err
+	sv original;set original ptrdata#
+	sv t%%ptr_tempdata
+	setcall err addtosec(original,(location_and_mask),t)
+	if err=(noerror)
+		call getcontplusReg(t,ptrdata)
+		sub ptrdata# (location_and_mask)
+		call memtomem(ptrdata#,original,(location_and_mask))
+	endif
+	return err
 endfunction
 
 #bool is_string
-function cast_resolve(sd number,sd cast,sv ptrdata)
+function cast_resolve(sd number,sd cast,sv ptrdata,sv p_error)
 	if cast=(no_cast)
 		Data stringsnumber=stringsnumber
 		Data stackstringnumber=stackstringnumber
@@ -441,15 +439,8 @@ function cast_resolve(sd number,sd cast,
 		return (FALSE)
 	endif
 	if cast!=(cast_string)
+		setcall p_error# tempdataadd(ptrdata)
 
-		#call store_argmask(data)
-
-		char random#1
-		data *#2    #ignore name
-		#in case are two args
-		data data2#2    #ignore name
-
-		call tempdatapair(#random,ptrdata,#data2)
 		sd data;set data ptrdata#
 		add data (maskoffset)
 
--- ocompiler-1.orig/src/files/functions/enumbags.s
+++ ocompiler-1/src/files/functions/enumbags.s
@@ -36,29 +36,11 @@ endfunction
 
 #no return
 Function freeclose()
-	Data value#1
-	Data zero=0
+	call platform_free()
 
+	Data zero=0
 	Call enumbags(zero)
 
-	Data negative=openno
-
-	Data ptrfileout%ptrfileout
-	Set value ptrfileout#
-	If value!=negative
-		Call close(value)
-	EndIf
-
-	data ptrlogfile%ptrlogfile
-	Set value ptrlogfile#
-	If value!=negative
-		Call close(value)
-	EndIf
-
-	if main.xfile!=negative
-		call close(main.xfile)
-	endif
-
 	#here if allocerrormsg was a submessage(included in sprintf)
 	#here at some main msgerrexits
 	call clearmessage()
@@ -66,12 +48,28 @@ Function freeclose()
 	sd p_safecurrentdirtopath%p_safecurrentdirtopath
 	if p_safecurrentdirtopath#!=(NULL)
 		call free(p_safecurrentdirtopath#)
-	endif
 
-	call platform_free()
+		Data value#1
+		Data negative=openno
 
-	call align_free()
-	call scopes_free()
+		data ptrlogfile%ptrlogfile
+		Set value ptrlogfile#
+		If value!=negative
+			Call close(value)
+		EndIf
+		if main.xfile!=negative
+			call close(main.xfile)
+		endif
+
+		call align_free()
+		call scopes_free()
+
+		Data ptrfileout%ptrfileout
+		Set value ptrfileout#
+		If value!=negative
+			Call close(value)
+		EndIf
+	endif
 EndFunction
 
 Function msgerrexit(data msg)
--- ocompiler-1.orig/src/files/functions/xfile_details.s
+++ ocompiler-1/src/files/functions/xfile_details.s
@@ -41,9 +41,9 @@ function xfile_add_declare_if(sd decltyp
 						if reloc=(FALSE)
 							setcall err xfile_add_char((Xfile_declsign_equal))
 						elseif relocx=(FALSE)
-							setcall err xfile_add_char((Xfile_declsign_reloc))
+							setcall err xfile_add_char((Xfile_declsign_ereloc))
 						else
-							setcall err xfile_add_char((Xfile_declsign_relocx))
+							setcall err xfile_add_char((Xfile_declsign_erelocx))
 						endelse
 					elseif sign=(reservesign)
 						setcall err xfile_add_char((Xfile_declsign_reserve))
--- ocompiler-1.orig/src/files/headers/commons.h
+++ ocompiler-1/src/files/headers/commons.h
@@ -62,7 +62,6 @@ Data zero=0
 Data one=1
 data two=2
 data three=3
-Data negative=negative
 Char dot="."
 
 const dw_char=10
--- ocompiler-1.orig/src/files/headers/header.h
+++ ocompiler-1/src/files/headers/header.h
@@ -232,9 +232,14 @@ Datax debugsec#1
 Datax debugsecReg#1
 Const ptr_debug^debugsecMax
 
+datax tempdataMax#1
+datax tempdata#1
+datax tempdataReg#1
+Const ptr_tempdata^tempdataMax
+
 #not yet at simple exec Const containerssize=!!-containersbegin
 const containersbegin^includesMax
-const containersalmostend^debugsecReg
+const containersalmostend^tempdataReg
 data containerssize=containersalmostend+dwsz-containersbegin
 const containerssize^containerssize
 
--- ocompiler-1.orig/src/files/headers/xfile.h
+++ ocompiler-1/src/files/headers/xfile.h
@@ -50,8 +50,8 @@ const Xfile_declfeature_throwless=2
 const Xfile_declsign_pointer=0
 const Xfile_declsign_reserve=1
 const Xfile_declsign_equal=2
-const Xfile_declsign_reloc=3
-const Xfile_declsign_relocx=4
+const Xfile_declsign_ereloc=3
+const Xfile_declsign_erelocx=4
 
 const Xfile_declmode_value=0
 const Xfile_declmode_group=1
--- ocompiler-1.orig/src/files/inits/alloc.s
+++ ocompiler-1/src/files/inits/alloc.s
@@ -49,7 +49,7 @@ Set extraMax subscope
 Set unresLocalMax mainscope
 
 set debugsecMax 0    #(subscope)
-
+set tempdataMax 0
 
 SetCall errormsg enumbags(true)
 #here is the start of mem worries for linux
--- ocompiler-1.orig/src/files/inits_top.s
+++ ocompiler-1/src/files/inits_top.s
@@ -1,10 +1,5 @@
 
 
-#files
-Set fileout (openno)
-set logfile (openno)
-set xfile (openno)
-
 #containers initialisations
 Data containersptr%%containersbegin
 #Data containerssize=containerssize
@@ -17,6 +12,3 @@ Set allocerrormsg null
 set safecurrentdirtopath (NULL)
 
 call initpreferences()
-
-set stackalign (NULL)
-set scopesbag (NULL)
--- ocompiler-1.orig/src/linux/files/xgetfile.s
+++ ocompiler-1/src/linux/files/xgetfile.s
@@ -36,7 +36,7 @@ else
 	else
 		data sizeofpath#1
 		setcall sizeofpath strlen(envpath)
-		set accessresult negative
+		set accessresult (negative)
 		while sizeofpath!=zero
 			char pathdelim=":"
 			data sizeoffolder#1
--- ocompiler-1.orig/tests/callx.s
+++ ocompiler-1/tests/callx.s
@@ -10,5 +10,5 @@ hex 144;call a(1)
 hex 144;call b(1)
 hex 144;callx a(1)
 hex 144;callx b(1)
-hex 144;setcallx a b(2)
+hex 144;setxcall a b(2)
 i3
