Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 edor (1-x48) focal; urgency=medium
 .
   * still at finds
Author: bc <bc@bc-Type1ProductConfigId>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2024-02-05

--- /dev/null
+++ edor-1/md
@@ -0,0 +1,2 @@
+
+autoreconf -i && ./configure CFLAGS=-g && cd s && ./headless
--- edor-1.orig/s/bar.c
+++ edor-1/s/bar.c
@@ -857,8 +857,6 @@ static int positiveInt_length(unsigned i
 	return x;
 }
 static void finds(bool phase,int number,int number_fix){//,bool*header_was){
-	//if(*header_was==false){if(phase/*true*/){*header_was=true;}return 0;}
-
 	char buf[maxuint+1+maxuint_nul];
 	if(number<0){
 		number*=-1;
@@ -919,16 +917,12 @@ static int find_core(WINDOW*w,size_t cur
 				number+=1;
 			}else{
 				if(number<0)number+=1;
-			//	if(forward/*true*/)number+=1;
-				//else if(number==0)finds_big_clean();//header switch
 			}
 			forward=true;
 		}else if(a==prev_key){
 			if(untouched/*true*/)number-=1;
 			else{
 				if(number>0)number-=1;
-			//	if(forward==false)number-=1;
-				//else if(number==0)finds_big_clean();//header switch
 			}
 			forward=false;
 		}else if(a==KEY_RIGHT){
@@ -976,32 +970,25 @@ static int find_core(WINDOW*w,size_t cur
 					}
 					//restore markers
 					ytext=ystart;xtext=xstart;xr=xrstart;xc=xcstart;
-					continue;
 				}
 			}
-			find_returner
+			continue;
 		}else if(a==KEY_LEFT){
 			size_t iferrory=ytext;size_t iferrorx=xtext;
+			if(number3!=getmaxx(stdscr)){//in second case this can be if total is requested
+				finds_big_clean();//wnoutrefresh when not on delimiter
+			}
 			if(untouched/*true*/){
 				ytext+=xr;xtext+=xc;
 				if(replace(cursor)/*true*/){ytext=iferrory;xtext=iferrorx;continue;}
 
-				if(number3!=getmaxx(stdscr)){
-					finds_big_clean();//wnoutrefresh when not on delimiter
-				}
 				if(number!=0){//0 is on delimiter
-					//if(forward/*true*/)number-=1;
-					//else number+=1;
-					//fprevnumber=number;
-
-					//if(delim_touch(y1,x1,cursorr)/*true*/){delimiter_touched=true;}else
 					if(ytext==y1&&xtext<x1)x1-=cursor-cursorr;//this can be on delimiter but is observed outside
 				}else delimiter_touched=true;
 
 				if(forward){xtext+=cursorr;centering2(w,&xr,&xc,true)}
 				else{centering(w,&xr,&xc)}
 				untouched=false;
-				//is_for_forward=false;
 				continue;
 			}
 			if(finding(cursor,xr,xc,forward)/*true*/){
@@ -1009,11 +996,17 @@ static int find_core(WINDOW*w,size_t cur
 
 				phase=delimiter(y1,x1,y,pos,sz,cursorr,phase);
 				if(phase/*true*/)delimiter_touched=true;
-				else if(ytext==y1&&xtext<x1)x1-=cursor-cursorr;
+				else{
+					//if delimiter_touched is true these are not required
+					if(forward/*true*/){
+						if(number<0)number++;
+					}else if(number>0)number--;
+
+					if(ytext==y1&&xtext<x1)x1-=cursor-cursorr;
+				}
 
 				if(forward){xtext+=cursorr;centering2(w,&xr,&xc,true)}
 				else{centering(w,&xr,&xc)}
-				//is_for_forward=false;
 				continue;
 			}
 			return 1;
@@ -1045,6 +1038,7 @@ static int find_core(WINDOW*w,size_t cur
 		if(delimiter_touched/*true*/){
 			y1=ytext;x1=xtext;
 			delimiter_touched=false;
+			number=0;
 		}else{
 			if(number!=0){
 				finds(phase,number,0);
