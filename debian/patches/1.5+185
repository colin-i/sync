Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 ocompiler (1-5+185) xenial; urgency=medium
 .
   * fix ""^ and pass init
Author: bc <bc@bc-desktop>

---
The information above should follow the Patch Tagging Guidelines, please
checkout https://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: (upstream|backport|vendor|other), (<patch-url>|commit:<commit-id>)
Bug: <upstream-bugtracker-url>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: (no|not-needed|<patch-forwarded-url>)
Applied-Upstream: <version>, (<commit-url>|commit:<commid-id>)
Reviewed-By: <name and email of someone who approved/reviewed the patch>
Last-Update: 2024-07-12

--- ocompiler-1.orig/old.html
+++ ocompiler-1/old.html
@@ -1,107 +1,3 @@
-File ID: 18kKOJIiGkpdOiEeAyXgyd5hjyTpkbIT1
-<p>Found file: ./ocompiler-1-5+182.x86_64.rpm, 18kKOJIiGkpdOiEeAyXgyd5hjyTpkbIT1, 2024-07-07T06:17:28.103Z, 72747, https://drive.google.com/uc?id=18kKOJIiGkpdOiEeAyXgyd5hjyTpkbIT1&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+181.x86_64.rpm, 1Oz4j0oL9o2bZusAxE2a2dQji0qDzehdf, 2024-07-05T05:59:45.098Z, 72447, https://drive.google.com/uc?id=1Oz4j0oL9o2bZusAxE2a2dQji0qDzehdf&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+179.x86_64.rpm, 1pzZGT69JrICC388rBVn6qGAYO_xWZ631, 2024-06-25T05:03:08.904Z, 72284, https://drive.google.com/uc?id=1pzZGT69JrICC388rBVn6qGAYO_xWZ631&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+177.x86_64.rpm, 1K8Jo3GynFSY5QozhkHr_RwNSufUyX-H9, 2024-06-19T05:09:17.008Z, 72433, https://drive.google.com/uc?id=1K8Jo3GynFSY5QozhkHr_RwNSufUyX-H9&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+175.x86_64.rpm, 18EX7DNiUvIP5r8glaDn0sZ6an2a0UlmO, 2024-06-15T10:53:11.558Z, 72434, https://drive.google.com/uc?id=18EX7DNiUvIP5r8glaDn0sZ6an2a0UlmO&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+174.x86_64.rpm, 1H-ksw7mzSc7hFGGNCLJ_Ii2Zt4RAh6Rt, 2024-05-28T08:32:28.164Z, 72304, https://drive.google.com/uc?id=1H-ksw7mzSc7hFGGNCLJ_Ii2Zt4RAh6Rt&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+172.x86_64.rpm, 1dawVCY6Eu6pnFhJfCDoVRqEv13FJ8Sn0, 2024-05-25T07:14:34.777Z, 69021, https://drive.google.com/uc?id=1dawVCY6Eu6pnFhJfCDoVRqEv13FJ8Sn0&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+171.x86_64.rpm, 1vDKZa1sUNh_2-H-o2q71NAsY25ebjQJy, 2024-05-10T05:33:03.198Z, 69010, https://drive.google.com/uc?id=1vDKZa1sUNh_2-H-o2q71NAsY25ebjQJy&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+169.x86_64.rpm, 1n_siMLq2V5krLIJ4jmQp5J48j0bb-2ii, 2024-05-04T11:17:26.109Z, 70754, https://drive.google.com/uc?id=1n_siMLq2V5krLIJ4jmQp5J48j0bb-2ii&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+168.x86_64.rpm, 1jKp5gDFiln3uuU_CLEdIyxwYdNF9SY_v, 2024-04-23T12:34:56.174Z, 70720, https://drive.google.com/uc?id=1jKp5gDFiln3uuU_CLEdIyxwYdNF9SY_v&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+166.x86_64.rpm, 1L2Dqr3JX-n1JjZAf9TE6e6mCpuGnMwiD, 2024-04-17T04:37:07.309Z, 70446, https://drive.google.com/uc?id=1L2Dqr3JX-n1JjZAf9TE6e6mCpuGnMwiD&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+165.x86_64.rpm, 14AMLdwMmpqiu4hRvalhhFrkqBYO2iwL5, 2024-04-14T05:32:08.547Z, 70737, https://drive.google.com/uc?id=14AMLdwMmpqiu4hRvalhhFrkqBYO2iwL5&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+164.x86_64.rpm, 1aSzpD6rTAnJYXchC1PqmaLiW0qI-P2We, 2024-04-12T11:11:11.321Z, 70282, https://drive.google.com/uc?id=1aSzpD6rTAnJYXchC1PqmaLiW0qI-P2We&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+163.x86_64.rpm, 1IKQk1JeRR8C8MBFcJGdWrdLxjHwvaMEK, 2024-04-11T08:11:16.267Z, 70250, https://drive.google.com/uc?id=1IKQk1JeRR8C8MBFcJGdWrdLxjHwvaMEK&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+158.x86_64.rpm, 1oIbl4XhEVQfhcU2wZ43MdM4B5TggA_pK, 2024-04-10T07:48:04.418Z, 70131, https://drive.google.com/uc?id=1oIbl4XhEVQfhcU2wZ43MdM4B5TggA_pK&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+155.x86_64.rpm, 1V2Ovra0KkXmgKuf1p1dhRyM0jfyK4VNq, 2024-04-05T06:31:59.783Z, 69987, https://drive.google.com/uc?id=1V2Ovra0KkXmgKuf1p1dhRyM0jfyK4VNq&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+154.x86_64.rpm, 19rIc3RSuaYS1VXQhvYLlho4cv9ZpsQ3j, 2024-03-29T12:11:08.735Z, 69945, https://drive.google.com/uc?id=19rIc3RSuaYS1VXQhvYLlho4cv9ZpsQ3j&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+145.x86_64.rpm, 1zPU9BqaKrMs8EHk5zBdnefZxhTxNiQ6w, 2024-03-08T05:47:37.878Z, 69772, https://drive.google.com/uc?id=1zPU9BqaKrMs8EHk5zBdnefZxhTxNiQ6w&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+144.x86_64.rpm, 12wMt7Pby5CEE9gb8poK7tGtnruTDvHpC, 2024-02-19T08:16:05.783Z, 69641, https://drive.google.com/uc?id=12wMt7Pby5CEE9gb8poK7tGtnruTDvHpC&export=download
-anyoneWithLink</p>
-<p>Found file: ./ocompiler-1-5+142.x86_64.rpm, 1NuUvMKNCvor96eMNljeyvbNJyXvcs0dd, 2024-02-15T06:58:30.503Z, 69735, https://drive.google.com/uc?id=1NuUvMKNCvor96eMNljeyvbNJyXvcs0dd&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+141.x86_64.rpm, 1y1hyR5Lj9M2p0Yz65U553nCxlbX2NlpS, 2024-01-07T11:47:00.292Z, 69664, https://drive.google.com/uc?id=1y1hyR5Lj9M2p0Yz65U553nCxlbX2NlpS&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+140.x86_64.rpm, 16AJ1l28fkTsCvrfV1-xRdglpff0pU0-M, 2023-12-30T05:54:08.472Z, 70133, https://drive.google.com/uc?id=16AJ1l28fkTsCvrfV1-xRdglpff0pU0-M&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+139.x86_64.rpm, 1neBDKEBlwpDL-WajhK5bLyonyBuL7hVV, 2023-12-28T13:06:09.194Z, 69619, https://drive.google.com/uc?id=1neBDKEBlwpDL-WajhK5bLyonyBuL7hVV&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+138.x86_64.rpm, 1GgN1yYhZSB8YL5EVERaNKtp_r6VIpTvl, 2023-12-24T11:55:41.262Z, 69610, https://drive.google.com/uc?id=1GgN1yYhZSB8YL5EVERaNKtp_r6VIpTvl&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+137.x86_64.rpm, 1ra0VXgFWYbvaauEEQboNbR8OMTvhegUe, 2023-12-24T04:49:39.787Z, 69592, https://drive.google.com/uc?id=1ra0VXgFWYbvaauEEQboNbR8OMTvhegUe&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+136.x86_64.rpm, 1DmTIKJ-f-LqDsrN4TrrqKDEZlwtX-wef, 2023-12-23T15:59:55.368Z, 69763, https://drive.google.com/uc?id=1DmTIKJ-f-LqDsrN4TrrqKDEZlwtX-wef&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+135.x86_64.rpm, 1eIb9HxzUBYHFtGW5mMWyj5MnoX5O1KxZ, 2023-12-23T13:56:58.588Z, 69691, https://drive.google.com/uc?id=1eIb9HxzUBYHFtGW5mMWyj5MnoX5O1KxZ&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+134.x86_64.rpm, 1dsoBW85egpSX1DLzLg0quGWy8-UPTxpa, 2023-12-23T10:21:30.371Z, 69746, https://drive.google.com/uc?id=1dsoBW85egpSX1DLzLg0quGWy8-UPTxpa&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+133.x86_64.rpm, 1A_YjZQCguHQz03-CgP822HwdMcQmbdU1, 2023-12-23T04:36:44.076Z, 69344, https://drive.google.com/uc?id=1A_YjZQCguHQz03-CgP822HwdMcQmbdU1&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+132.x86_64.rpm, 1Z3YQwRRlBDWGS-7dAKB7TgqG0-wpEOXs, 2023-12-22T13:23:42.575Z, 69395, https://drive.google.com/uc?id=1Z3YQwRRlBDWGS-7dAKB7TgqG0-wpEOXs&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+131.x86_64.rpm, 1sgkT4zZkKK_g5XJDF2X2EPcf-NG9PH9D, 2023-12-20T12:27:23.298Z, 69055, https://drive.google.com/uc?id=1sgkT4zZkKK_g5XJDF2X2EPcf-NG9PH9D&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+130.x86_64.rpm, 1mn34G3kNJ6R6qhYHjbMN-nLv4CoikayM, 2023-12-18T13:26:09.306Z, 68922, https://drive.google.com/uc?id=1mn34G3kNJ6R6qhYHjbMN-nLv4CoikayM&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+129.x86_64.rpm, 1cnDZ8cSmvJzw4mFEajOIBuMONWl9_paL, 2023-12-17T16:43:23.017Z, 68913, https://drive.google.com/uc?id=1cnDZ8cSmvJzw4mFEajOIBuMONWl9_paL&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+127.x86_64.rpm, 1b919dA9xOnF7abXvogG65aUPbSevbD1v, 2023-12-17T13:50:27.308Z, 68980, https://drive.google.com/uc?id=1b919dA9xOnF7abXvogG65aUPbSevbD1v&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+126.x86_64.rpm, 1rymbZCtmIZ_4F29mHDRN0zrgEMBKktsL, 2023-12-15T13:52:42.465Z, 68885, https://drive.google.com/uc?id=1rymbZCtmIZ_4F29mHDRN0zrgEMBKktsL&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+125.x86_64.rpm, 10Jw0V0M1d4p6K6WI4Phz9org6ILOTHpY, 2023-12-14T21:21:33.652Z, 68913, https://drive.google.com/uc?id=10Jw0V0M1d4p6K6WI4Phz9org6ILOTHpY&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+124.x86_64.rpm, 1Q-l2Ovv4njUWQ5CQSfariZ0aoe-uVaDZ, 2023-12-14T13:22:31.316Z, 68864, https://drive.google.com/uc?id=1Q-l2Ovv4njUWQ5CQSfariZ0aoe-uVaDZ&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+123.x86_64.rpm, 1fSphOsqSyTjQXwz-PgKSGncrU5-_w3kA, 2023-12-12T11:15:42.185Z, 68473, https://drive.google.com/uc?id=1fSphOsqSyTjQXwz-PgKSGncrU5-_w3kA&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+119.x86_64.rpm, 1Ugb3Ix7-f8Ho7vSayqht_EpHtMP3cCi7, 2023-12-08T09:11:30.496Z, 68834, https://drive.google.com/uc?id=1Ugb3Ix7-f8Ho7vSayqht_EpHtMP3cCi7&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+118.x86_64.rpm, 1XhJ7mNelj8C9O7peSOhDm7xTbyc09EIv, 2023-12-07T17:00:54.254Z, 68231, https://drive.google.com/uc?id=1XhJ7mNelj8C9O7peSOhDm7xTbyc09EIv&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+117.x86_64.rpm, 1mPnNxVoS7UjAO9GiSnY2KeUuwLHeBH5H, 2023-12-07T14:00:38.468Z, 68305, https://drive.google.com/uc?id=1mPnNxVoS7UjAO9GiSnY2KeUuwLHeBH5H&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+116.x86_64.rpm, 1lHE4nDmPxHwvM8AMN6t9R87BFtbQxBZS, 2023-12-07T13:05:12.249Z, 68224, https://drive.google.com/uc?id=1lHE4nDmPxHwvM8AMN6t9R87BFtbQxBZS&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+115.x86_64.rpm, 1utqWfoFjLX4nJSDlFm81-MO7-Y_4TSm5, 2023-12-06T07:31:26.997Z, 68355, https://drive.google.com/uc?id=1utqWfoFjLX4nJSDlFm81-MO7-Y_4TSm5&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+114.x86_64.rpm, 1lrJuO2v99zp24qwEeom8h2uiHroO78i8, 2023-12-04T17:08:05.785Z, 68241, https://drive.google.com/uc?id=1lrJuO2v99zp24qwEeom8h2uiHroO78i8&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+113.x86_64.rpm, 1TF6p22aESDnfeJc9YRchf1anwCp5M28C, 2023-12-04T16:26:51.426Z, 68295, https://drive.google.com/uc?id=1TF6p22aESDnfeJc9YRchf1anwCp5M28C&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+110.x86_64.rpm, 1p9pR6w1wlJ7SMN06NuZc4MAY8mRLO5bB, 2023-12-04T08:48:00.105Z, 67194, https://drive.google.com/uc?id=1p9pR6w1wlJ7SMN06NuZc4MAY8mRLO5bB&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+109.x86_64.rpm, 18QL85KhT36MCDaAHvb1sYiTriMAmBu27, 2023-11-30T13:27:20.209Z, 66907, https://drive.google.com/uc?id=18QL85KhT36MCDaAHvb1sYiTriMAmBu27&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+108.x86_64.rpm, 10roEk-tuk6POWtpOB25MFyFoqmbAhzie, 2023-11-29T15:28:07.278Z, 66568, https://drive.google.com/uc?id=10roEk-tuk6POWtpOB25MFyFoqmbAhzie&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+107.x86_64.rpm, 1E16Y8q6SiNmf4pcKMDp_ZFrnnomaoSgw, 2023-11-26T09:02:42.259Z, 66955, https://drive.google.com/uc?id=1E16Y8q6SiNmf4pcKMDp_ZFrnnomaoSgw&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+105.x86_64.rpm, 1GCbazf8mz5iyI5CgImI0SMcA2onhyji7, 2023-11-25T16:40:31.101Z, 66879, https://drive.google.com/uc?id=1GCbazf8mz5iyI5CgImI0SMcA2onhyji7&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+102.x86_64.rpm, 1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O, 2023-11-24T14:29:49.425Z, 66231, https://drive.google.com/uc?id=1Qz7lu9FxDdwAXRaG8nzhc-b4cQhH_74O&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+100.x86_64.rpm, 1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac, 2023-11-17T15:39:47.661Z, 65462, https://drive.google.com/uc?id=1Qbm2E_uMi85Gq1sJ1Yhc1CYstN8fleac&export=download
-anyoneWithLink</p>
-<p>Found file: ocompiler-1-5+98.x86_64.rpm, 1bNGKHelihqwRjqxpb43YwfcYlx1J_L78, 2023-11-17T15:27:56.867Z, 64802, https://drive.google.com/uc?id=1bNGKHelihqwRjqxpb43YwfcYlx1J_L78&export=download
+File ID: 1tkxZPO7JL4DR0VoAbQGgUoi6HDO9BrwR
+<p>Found file: ./ocompiler-1-5+184.x86_64.rpm, 1tkxZPO7JL4DR0VoAbQGgUoi6HDO9BrwR, 2024-07-12T04:41:48.080Z, 72928, https://drive.google.com/uc?id=1tkxZPO7JL4DR0VoAbQGgUoi6HDO9BrwR&export=download
 anyoneWithLink</p>
--- ocompiler-1.orig/otoc/action.oc
+++ ocompiler-1/otoc/action.oc
@@ -11,6 +11,8 @@ function action1(sv act,sv pbuffer,sd ou
 	value         *^action_tdecst
 	value         *^action_tneg
 	value         *^action_tnot
+	value         *^action_tbase
+	value         *^action_tbase #leave
 	value         *^action_tshl1
 	value         *^action_tshr1
 	value         *^action_tsar1
@@ -23,7 +25,7 @@ end
 function action_areturn(sv pbuffer,sd outfile)
 	if loop.function_start!=(NULL)
 		call fseek(outfile,loop.function_start,(SEEK_SET))
-		call fwrite(#write_long.a,\write_long.a,1,outfile)
+		call fwrite(#write_long.a,(write_long_cast),1,outfile)
 		sd n;set n fseek(outfile,0,(SEEK_END)) #it's tested, is not 0 on that 32 app example, so the pointer is not moved
 		if n!=0
 			call aftercallenable()
@@ -39,7 +41,7 @@ function action_aexit(sv pbuffer,sd outf
 end
 function action_tinc(sv pbuffer,sd outfile)
 	call varfunc(pbuffer,outfile)
-	char a="++"^
+	char a={asciiplus,asciiplus}
 	callg write(outfile,#a,\.a)
 end
 function action_tincst(sv pbuffer,sd outfile)
@@ -48,7 +50,7 @@ function action_tincst(sv pbuffer,sd out
 end
 function action_tdec(sv pbuffer,sd outfile)
 	call varfunc(pbuffer,outfile)
-	char a="--"^
+	char a={asciihyphen,asciihyphen}
 	callg write(outfile,#a,\.a)
 end
 function action_tdecst(sv pbuffer,sd outfile)
@@ -56,17 +58,44 @@ function action_tdecst(sv pbuffer,sd out
 	callg write(outfile,#action_tdec.a,\action_tdec.a)
 end
 function action_tneg(sv pbuffer,sd outfile)
-	callg varfunc(pbuffer,outfile)
+	char a=asciihyphen
+	callg actionsimple(pbuffer,a,outfile)
 end
 function action_tnot(sv pbuffer,sd outfile)
-	callg varfunc(pbuffer,outfile)
+	char a=asciinot
+	char *=asciihyphen   #this is fast for notneg function
+	callg actionsimple(pbuffer,a,outfile)
+end
+function action_tbase(sv pbuffer)
+	call unimplemented_start("base/leave")
+	call varfunc(pbuffer)
+	call unimplemented_end()
 end
 function action_tshl1(sv pbuffer,sd outfile)
-	callg varfunc(pbuffer,outfile)
+	char a={asciileft,asciileft}
+	callg actionshift1(pbuffer,#a,signed,outfile)
 end
 function action_tshr1(sv pbuffer,sd outfile)
-	callg varfunc(pbuffer,outfile)
+	char a={asciiright,asciiright}
+	callg actionshift1(pbuffer,#a,unsigned,outfile)
 end
 function action_tsar1(sv pbuffer,sd outfile)
-	callg varfunc(pbuffer,outfile)
+	callg actionshift1(pbuffer,#action_tshr1.a,signed,outfile)
+end
+
+function actionsimple(sv pbuffer,sd act,sd outfile)
+	sd replay;set replay pbuffer#
+	call varfunc(pbuffer,outfile)
+	call writee(outfile)
+	call write(outfile,#act,1)
+	callg write_longcast(outfile,#replay)
+end
+function actionshift1(sv pbuffer,ss act,sd ex,sd outfile)
+	sd replay;set replay pbuffer#
+	call varfunc(pbuffer,outfile)
+	call writee(outfile)
+	call write_longcast_ex(outfile,#replay,ex)
+	call write(outfile,act,2)
+	char a="1"^
+	callg write(outfile,#a,1)
 end
--- ocompiler-1.orig/otoc/ascii.h
+++ ocompiler-1/otoc/ascii.h
@@ -6,13 +6,17 @@ const asciidquote=0x22
 const asciiasterisk=0x2a
 const asciiparenthesisleft=0x28
 const asciiparenthesisright=0x29
+const asciiplus=0x2b
 const asciicomma=0x2c
+const asciihyphen=0x2d
 const asciidot=0x2e
 const asciisemicolon=0x3b
-const asciiequal=0x3d
+const asciileft=0x3c
+const asciiright=0x3e
 const asciisquareleft=0x5B
 const asciisquareright=0x5D
 const asciibs=0x5C
 const asciic=0x63
 const asciicurlyleft=0x7b
 const asciicurlyright=0x7d
+const asciinot=0x7e
--- ocompiler-1.orig/otoc/decl.oc
+++ ocompiler-1/otoc/decl.oc
@@ -26,7 +26,7 @@ function decl(sv pbuffer,sd outfile,ss p
 	if pfield#!=(Xfile_declfield_const)
 		if pfield#=(Xfile_declfield_data)
 			charx data#1;call get_char(pbuffer,#data)
-			charx signed#1;call get_char(pbuffer,#signed)
+			charx sign#1;call get_char(pbuffer,#sign)
 		end
 		call get_char(pbuffer,ptype)
 		charx feature#1;call get_char(pbuffer,#feature)
@@ -70,7 +70,7 @@ function intByte(sd outfile)
 	call write(outfile,#byte.a,\byte.a)
 end
 function long(sd outfile)
-	call write(outfile,#write_long.a,\write_long.a)
+	call write(outfile,#write_long.a,(write_long_cast))
 end
 #function longByte()end
 function longWord(sd outfile)
--- ocompiler-1.orig/otoc/loop.oc
+++ ocompiler-1/otoc/loop.oc
@@ -21,6 +21,7 @@ const TRUE=1
 include "xfile.h"
 #const Xfile_last=Xfile_line
 const Xfile_aftercall_declarative=Xfile_aftercall_import # less or equal
+const Xfile_cond_first=Xfile_cond_greatequalunsign
 include "ascii.h"
 
 include "mem.oc"
@@ -138,21 +139,24 @@ end
 
 #aftercalli *
 
-function write_void(sd outfile,sd pointer,sd size)
-	char a="void "^
-	call write(outfile,#a,\.a)
-	callg write(outfile,pointer,size)
+function unimplemented()
+	call puts("unimplemented")
+	call aftercallenable()
 end
+
 function write_long(sd outfile,sd pointer,sd size)
-	char a="long*"^
-	call write(outfile,#a,\.a)
+const write_long_cast_start=\
+	char a="long"^
+	char *point=asciiasterisk
+const write_long_cast=\-write_long_cast_start
+	call write(outfile,#a,(write_long_cast))
 	callg write(outfile,pointer,size)
 end
 
 include "action.oc"
 include "decl.oc"
-include "number.oc"
 include "var.oc"
+include "number.oc"
 
 function comment(sd outfile,sv pbuffer)
 	char a="//"^
@@ -210,8 +214,7 @@ function functiondef(sd outfile,sv pbuff
 		set dest dest#
 		call dest(pbuffer,outfile)
 		call writer(outfile)
-		call writecl(outfile)
-		callg writenl(outfile)
+		callg writecln(outfile)
 		ret
 	end
 	call aftercallenable()
@@ -258,8 +261,7 @@ function declare(sd outfile,sv pbuffer)
 			if trim=(Xfile_declmode_string_pop_yes)
 				call write_popstring(pointer,sz,outfile)
 				if type!=(Xfile_decltype_byte) #why check here and not above? to let popstring to be normal and check for 0 size and write to file (is more easy at debug)
-					call puts("unimplemented") # char*={'a','b','c',0} is not "abc" ,downgrade to char? the sizeof and pointers then
-					call aftercallenable()
+					call unimplemented() # char*={'a','b','c',0} is not "abc" ,downgrade to char? the sizeof and pointers then
 				end
 			else
 				call write_string(pointer,sz,outfile)
@@ -289,11 +291,7 @@ function action2(sd outfile,sv pbuffer)
 		elseif a2=(Xfile_action2_remu)
 			set a2 (Xfile_action2_rem)
 		end
-
-		call writel(outfile)
-		call write(outfile,#write_long.a,\write_long.a-1)
-		call writer(outfile)
-		call varfunc(#replay,outfile)
+		call write_longcast(outfile,#replay)
 		call write(outfile,#a2,1)
 	end
 
@@ -305,13 +303,13 @@ function call(sd outfile,sv pbuffer)
 	call cll(pbuffer,outfile)
 	callg writetn(outfile)
 end
-function callex(sd outfile,sv pbuffer)
+function callex(sd *outfile,sv pbuffer)
 	call unimplemented_start("callex")  #at some structures is complicated
 	char c#1;call get_char(pbuffer,#c)
-	call cal(pbuffer,outfile)
-	call varfunc(pbuffer,outfile)
-	call arg(pbuffer,outfile)
-	call writetn(outfile)
+	call cal(pbuffer) #,outfile
+	call varfunc(pbuffer) #,outfile
+	call arg(pbuffer) #,outfile
+	call writetn() #outfile
 	call unimplemented_end()
 end
 function if(sd outfile,sv pbuffer)
@@ -367,11 +365,11 @@ function aftercall(sd *outfile,sv pbuffe
 		end
 	end
 end
-function hex(sd outfile,sv pbuffer)
+function hex(sd *outfile,sv pbuffer)
 	call unimplemented_start("hex")
 	datax args#1;call get_data(pbuffer,#args)
 	sd n=0;while n!=args
-		call number(pbuffer,outfile)
+		call number(pbuffer) #,outfile
 		inc n
 	end
 	call unimplemented_end()
@@ -393,8 +391,8 @@ function interrupt(sd outfile)
 end
 function line(sd outfile)
 	call fseek(outfile,-1,(SEEK_CUR)) #this one and lineend comment
-	char a=asciisemicolon
-	callg write(outfile,#a,1)
+	#char a=asciisemicolon
+	#callg write(outfile,#a,1)
 end
 
 function write(sd outfile,ss buf,sd sz)
@@ -424,8 +422,7 @@ function writecr(sd outfile)
 	callg write(outfile,#a,1)
 end
 function writee(sd outfile)
-	char a=asciiequal
-	callg write(outfile,#a,1)
+	callg write(outfile,#cond.eq,1)
 end
 function writel(sd outfile)
 	char a=asciiparenthesisleft
@@ -460,6 +457,38 @@ function writet(sd outfile)
 	callg write(outfile,#sc,1)
 end
 
+function signed()
+end
+function unsigned(sd outfile)
+	char a="unsigned "^
+	callg write(outfile,#a,\.a)
+end
+function write_longcast_ex_ex(sd outfile,sd pbuffer,sv sign,sv fn)
+	call writel(outfile)
+	call sign(outfile)
+	call write(outfile,#write_long.a,\write_long.a)
+	call writer(outfile)
+	callg fn(pbuffer,outfile)
+end
+function write_longcast_ex(sd outfile,sd pbuffer,sv sign)
+	callg write_longcast_ex_ex(outfile,pbuffer,sign,varfunc)
+end
+function write_longcast_arg(sd outfile,sd pbuffer)
+	callg write_longcast_ex_ex(outfile,pbuffer,unsigned,arg)
+end
+function write_longcast(sd outfile,sd pbuffer)
+	callg write_longcast_ex(outfile,pbuffer,signed)
+end
+function write_void(sd outfile,sd pointer,sd size)
+	char a="void "^
+	call write(outfile,#a,\.a)
+	callg write(outfile,pointer,size)
+end
+
+function writecln(sd outfile)
+	call writecl(outfile)
+	callg writenl(outfile)
+end
 function writen(sd outfile,ss buf,sd sz)
 	call write(outfile,buf,sz)
 	callg writenl(outfile)
--- ocompiler-1.orig/otoc/number.oc
+++ ocompiler-1/otoc/number.oc
@@ -17,7 +17,7 @@ include "number.h"
 		mult f :
 		add f #functions
 		set f f#
-		call f(pbuffer,outfile)
+		call f(outfile,pbuffer)
 		call get_char(pbuffer,#item)
 	end
 end
@@ -50,17 +50,14 @@ function number_text_dec(sv pbuffer,sd o
 	call get_string(pbuffer,#sz,#pointer)
 	callg write(outfile,pointer,sz)
 end
-function number_text_oct(sv pbuffer)
-	datax sz#1;valuex pointer#1
-	call get_string(pbuffer,#sz,#pointer)
+function number_text_oct(sv pbuffer,sd outfile)
+	callg number_text_dec(pbuffer,outfile)
 end
-function number_text_hex(sv pbuffer)
-	datax sz#1;valuex pointer#1
-	call get_string(pbuffer,#sz,#pointer)
+function number_text_hex(sv pbuffer,sd outfile)
+	callg number_text_dec(pbuffer,outfile)
 end
-function number_text_const(sv pbuffer)
-	datax sz#1;valuex pointer#1
-	call get_string(pbuffer,#sz,#pointer)
+function number_text_const(sv pbuffer,sd outfile)
+	callg number_text_dec(pbuffer,outfile)
 end
 function number_func_size(sv pbuffer)
 	datax sz#1;valuex pointer#1
@@ -77,45 +74,108 @@ function number_var_offset(sv pbuffer,sd
 	callg dot(pbuffer,outfile)
 end
 
-function normal(sv pbuffer,sd outfile)
+function normal(sd outfile,sv pbuffer)
 	callg numbertype(pbuffer,outfile)
 end
-function neg(sv pbuffer,sd outfile)
+function neg(sd outfile,sv pbuffer)
+	call write(outfile,#action_tdec.a,1)
 	callg numbertype(pbuffer,outfile)
 end
-function not(sv pbuffer,sd outfile)
+function not(sd outfile,sv pbuffer)
+	call write(outfile,#action_tnot.a,1)
 	callg numbertype(pbuffer,outfile)
 end
-function notneg(sv pbuffer,sd outfile)
+function notneg(sd outfile,sv pbuffer)
+	call write(outfile,#action_tnot.a,2)
 	callg numbertype(pbuffer,outfile)
 end
-function open();end
-function close();end
-function add();end
-function sub();end
-function mul();end
-function div();end
-function divu();end
-function and();end
-function or();end
-function xor();end
-function pow();end
-function rem();end
-function remu();end
-function shl();end
-function sar();end
-function shr();end
-function equal();end
-function inequal();end
-function less();end
-function greater();end
-function lessequal();end
-function greaterequal();end
-function logicaland();end
-function logicalor();end
-function unsignedless();end
-function unsignedgreater();end
-function unsignedlessequal();end
-function unsignedgreaterequal();end
-function parity();end
-function odd();end
+function open()
+#	writel
+end
+function close()
+#	writer
+end
+function add(sd outfile)
+	callg write(outfile,#action_tinc.a,1)
+end
+function sub(sd outfile)
+	callg write(outfile,#action_tdec.a,1)
+end
+function mul()
+#	write_long.point
+end
+function div()
+#	comment.a
+end
+function divu()
+#	div
+end
+function and()
+#	asciiand,
+end
+function or()
+#	asciior,
+end
+function xor()
+#	asciicirc
+end
+function pow()
+#	unimplemented
+end
+function rem()
+#	asciipercent
+end
+function remu()
+#	rem
+end
+function shl()
+#	action_tshl1
+end
+function sar()
+#	action_tshr1
+end
+function shr()
+#	action_tshr1
+end
+function equal()
+#	cond.eq
+end
+function inequal()
+#	cond.ne
+end
+function less()
+#	action_tshl1
+end
+function greater()
+#	action_tshr1
+end
+function lessequal()
+#	cond.le
+end
+function greaterequal()
+#	cond.ge
+end
+function logicaland()
+#	and
+end
+function logicalor()
+#	or
+end
+function unsignedless()
+#	less
+end
+function unsignedgreater()
+#	greater
+end
+function unsignedlessequal()
+#	lessequal
+end
+function unsignedgreaterequal()
+#	greaterequal
+end
+function parity()
+#	unimplemented
+end
+function odd()
+#	unimplemented
+end
--- ocompiler-1.orig/otoc/var.oc
+++ ocompiler-1/otoc/var.oc
@@ -78,11 +78,62 @@ end
 #CD structure
 function cond(sv pbuffer,sd outfile)
 	call writel(outfile)
-	call arg(pbuffer,outfile)
+
+	#here is not o,must know signed/unsigned at start
+	sd replay;set replay pbuffer#
+	set loop.allowwrite (FALSE)
+	call arg(pbuffer) #,outfile
+	set loop.allowwrite (TRUE)
 	charx cnd#1;call get_char(pbuffer,#cnd)
-	call arg(pbuffer,outfile)
+
+const unimplemented=-1
+const unsigned_cond=0
+const signed_cond=1
+	char conds=unsigned_cond;char *=">="^
+	char     *=unsigned_cond;char *=asciinul;char *="<"^
+	char     *=signed_cond;  char *ne="!="^
+	char     *=signed_cond;  char eq="=="^
+	char     *=unsigned_cond;char *=asciinul;char *=">"^
+	char     *=unsigned_cond;char *="<="^
+	char     *=unimplemented;char *#2
+	char     *=unimplemented;char *#2
+	char     *=unimplemented;char *#2  #notparity
+	char     *=unimplemented;char *#2  #parity
+	char     *=signed_cond;  char *ge=">="^
+	char     *=signed_cond;  char *=asciinul;char *="<"^
+	char     *=signed_cond;  char *=asciinul;char *=">"^
+	char     *=signed_cond;  char *le="<="^
+
+	sub cnd (Xfile_cond_first)
+	ss set=1+2
+	mult set cnd
+	add set #conds
+	sd type;set type set#
+	inc set
+
+	if type=(unsigned_cond)
+		call write_longcast_arg(outfile,#replay)
+	elseif type=(signed_cond)
+		call arg(#replay,outfile)
+	else
+		call unimplemented()
+	end
+
+	if set#=(asciinul)
+		inc set
+		call write(outfile,set,1)
+	else
+		call write(outfile,set,2)
+	end
+
+	if type=(unsigned_cond)
+		call write_longcast_arg(outfile,pbuffer)
+	else
+		call arg(pbuffer,outfile)
+	end
+
 	call writer(outfile)
-	callg writecl(outfile)
+	callg writecln(outfile)
 end
 
 #DoT
--- ocompiler-1.orig/src/files/functions/dataassign.oc
+++ ocompiler-1/src/files/functions/dataassign.oc
@@ -418,6 +418,7 @@ Function dataassign(sd ptrcontent,sd ptr
 			if err=(noerror)
 				call advancecursors(ptrcontent,ptrsize,value)
 				sub value escapes
+				call stepcursors(ptrcontent,ptrsize) # is the last quote
 				subcall value string_pop(ptrcontent,ptrsize)
 				add punitsize# value
 				call advancecursors(ptrcontent,ptrsize,ptrsize#)
--- ocompiler-1.orig/src/files/headers/xfile.h
+++ ocompiler-1/src/files/headers/xfile.h
@@ -232,6 +232,7 @@ const Xfile_call_normal=0
 const Xfile_call_ret=1
 
 const Xfile_cond_greatequalunsign=0x82
+# const Xfile_cond_first=Xfile_cond_greatequalunsign
 const Xfile_cond_lessunsign=0x83
 const Xfile_cond_notequal=0x84
 const Xfile_cond_equal=0x85
--- ocompiler-1.orig/tests/.expected/a.out.c
+++ ocompiler-1/tests/.expected/a.out.c
@@ -6,8 +6,8 @@ line
 char c1=1;
 char c2[]={2,3};
 char c3[]="45";
-short c5=1;;int c6=1;;char* c7=1;;long* c8=1;
-char* c9="";;short* ca=1;;int* cb=1;
+short c5=1;int c6=1;char* c7=1;long* c8=1;
+char* c9="";short* ca=1;int* cb=1;
 char cc[]={9,97,122};
 #define a1 1
 char a[3];
@@ -17,10 +17,18 @@ a++;
 a--;
 c++;
 c--;
+c=-(long)c;
+c=~(long)c;
+;
+;
+c=(long)c<<1;
+c=(unsigned long)c>>1;
+c=(long)c>>1;
 return c;
 }
 void f(){
-if(22){return;
+if(2==2){
+return;
 }
 }
 long*puts();
@@ -35,12 +43,26 @@ c1=(long)c1%1;
 c1=(long)c1%1;
 c1=(long)c1&1;
 c1=(long)c1|1;
-b=(long)b^1;;intern(1,"q\nw\re\tr",a);
+b=(long)b^1;intern(1,"q\nw\re\tr",a);
 b=puts();
-if(11){}
-while(12){}
+if(1==1){
+//elseif 1!!1
+//elseif 1!1
+}
+if(1!=1){}
+if(1<1){}
+if(1>1){}
+if(1<=1){}
+if(1>=1){}
+if((unsigned long)1<(unsigned long)1){}
+if((unsigned long)1>(unsigned long)1){}
+if((unsigned long)1<=(unsigned long)1){}
+if((unsigned long)1>=(unsigned long)1){}
+while(1==2){
+}
 {
 }
-__builtin_trap();
+char z=0xff+077+12-3;
+char z2=a1;char z3=-a1;char z4=~a1;char z5=~-a1;__builtin_trap();
 return 2;
 }
--- ocompiler-1.orig/tests/.expected/a.out.oc.log
+++ ocompiler-1/tests/.expected/a.out.oc.log
@@ -3,4 +3,4 @@ na.out.oc
 ninclude.h
 q
 q
-x0000003a
+x0000003f
--- ocompiler-1.orig/tests/.expected/a.out.oc.x.txt
+++ ocompiler-1/tests/.expected/a.out.oc.x.txt
@@ -6,14 +6,22 @@ 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
-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
+AAAAYwAHBgAAAAEAAABjAAcHAAAAAQAAAGMABwgAAAABAAAAYwAHCQAAAAEAAABjAAcKAAAAAQAA
+AGMABwsAAAABAAAAYwAHDAAAAAEAAABjAAcAAgAAAAEAAABjABEFAQAAAGYAAAAAAAsAAAMBAAAA
+Mh+FAAADAQAAADIfEhEREwEAAABhFAABAAAAYgQAAABwdXRzBQQAAABtYWluAwAAAAAACAAAAAEA
+AABiAEUCAAAAAQAAAGIACAAAAAEAAABiACsAAAMBAAAAMR8IAAAAAQAAAGIALQAAAwEAAAAxHwgA
+AAABAAAAYgAqAAADAQAAADEfCAAAAAIAAABjMQAvAAADAQAAADEfCAAAAAIAAABjMQBEAAADAQAA
+ADEfCAAAAAIAAABjMQAlAAADAQAAADEfCAAAAAIAAABjMQBSAAADAQAAADEfCAAAAAIAAABjMQAm
+AAADAQAAADEfCAAAAAIAAABjMQB8AAADAQAAADEfCAAAAAEAAABiAF4AAAMBAAAAMR8WAwAAAAEA
+HwIBHwMCKxAAAwEAAAAxKwAEAgAAADAxKwAFAwAAADB4MisABwYAAABpbnRlcm4rAAgGAAAAaW50
+ZXJuKwAJBgAAAGludGVybgEAAABhACsACgYAAABpbnRlcm4BAAAAYQAYHxoJAAAGAAAAaW50ZXJu
+AwAAAAIAAQEEAAAAbWFpbgEAAABhAAEEAAAAbWFpbgEAAABhAAEHAAAAcQp3DWUJcgAAAwEAAAAx
+HwgAAAABAAAAYgBFAwAEAAAAcHV0cwAAAAALAAADAQAAADEfhQAAAwEAAAAxHwALAAAAZWxzZWlm
+IDEhITEACgAAAGVsc2VpZiAxITERCwAAAwEAAAAxH4QAAAMBAAAAMR8aEQsAAAMBAAAAMR+NAAAD
+AQAAADEfGhELAAADAQAAADEfjgAAAwEAAAAxHxoRCwAAAwEAAAAxH48AAAMBAAAAMR8aEQsAAAMB
+AAAAMR+MAAADAQAAADEfGhELAAADAQAAADEfgwAAAwEAAAAxHxoRCwAAAwEAAAAxH4YAAAMBAAAA
+MR8aEQsAAAMBAAAAMR+HAAADAQAAADEfGhELAAADAQAAADEfggAAAwEAAAAxHxoRCgAAAQAAAGIA
+AAABAAAAYgAAAAMBAAAAMR8NAAADAQAAADEfhQAAAwEAAAAyHxARDg8RBgIAAAAAAQAAAHoCAAAF
+BAAAADB4ZmYrAAQDAAAAMDc3KwADAgAAADEyLQADAQAAADMfBgIAAAAAAgAAAHoyAgAABgIAAABh
+MR8aBgIAAAAAAgAAAHozAgABBgIAAABhMR8aBgIAAAAAAgAAAHo0AgACBgIAAABhMR8aBgIAAAAA
+AgAAAHo1AgADBgIAAABhMR8aFQABAwAAAHRzdBcGAAAAeF9maWxlARkHAQAAAwEAAAAyHw==
--- ocompiler-1.orig/tests/.expected/a.out.txt
+++ ocompiler-1/tests/.expected/a.out.txt
@@ -1,9 +1,9 @@
-f0VMRgEBAQAAAAAAAAAAAAIAAwABAAAAmZQECDQAAADUAAAAAAAAADQAIAAFACgAAwABAAEAAAAA
-BAAAAIQECACEBAg7AAAAOwAAAAYAAAAAEAAAAQAAADsEAAA7lAQIO5QECKMBAACjAQAABQAAAAAQ
-AAADAAAA3gUAAN6VBAjelQQIEwAAABMAAAAEAAAAAQAAAAIAAADxBQAA8aUECPGlBAhQAAAAUAAA
-AAQAAAABAAAAAQAAAPEFAADxpQQI8aUECJYAAACWAAAABgAAAAAQAAAEAAAAAAAAAAAAAAAAAAAA
-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAMAAAACAAAAYaYECGEGAAAWAAAAAAAAAAAAAAAB
-AAAAAAAAAA0AAAAGAAAAAwAAAPGlBAjxBQAAUAAAAAEAAAAAAAAAAQAAAAgAAAAAAAAAAAAAAAAA
+f0VMRgEBAQAAAAAAAAAAAAIAAwABAAAA35QECDQAAADUAAAAAAAAADQAIAAFACgAAwABAAEAAAAA
+BAAAAIQECACEBAg/AAAAPwAAAAYAAAAAEAAAAQAAAD8EAAA/lAQIP5QECIICAACCAgAABQAAAAAQ
+AAADAAAAwQYAAMGWBAjBlgQIEwAAABMAAAAEAAAAAQAAAAIAAADUBgAA1KYECNSmBAhQAAAAUAAA
+AAQAAAABAAAAAQAAANQGAADUpgQI1KYECJYAAACWAAAABgAAAAAQAAAEAAAAAAAAAAAAAAAAAAAA
+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAMAAAACAAAARKcECEQHAAAWAAAAAAAAAAAAAAAB
+AAAAAAAAAA0AAAAGAAAAAwAAANSmBAjUBgAAUAAAAAEAAAAAAAAAAQAAAAgAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
@@ -16,15 +16,19 @@ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEC
-AzQ1AAEAAAABAAAAAQAAAAEAAAAahAQIAAEAAAABAAAACWF6AAAAJoQECAAAAABxCncNZQlyAAAA
-i4QkBAAAAKMthAQIU1WL7Ivcui2EBAj/ArothAQI/wq6FAAAAAPVgwIEuhQAAAAD1YMqBLoUAAAA
-A9WLAslbw1NVi+yL3LgCAAAAuQIAAAA5wQ+FAwAAAMlbw8lbw1NVi+yL3LophAQIiwK6KYQECIkC
-uAEAAAC6KYQECAECuAEAAAC6KYQECCkCuQEAAAC6KYQECIsC9+G6KYQECIkCsQG6AIQECIoCD7rg
-B3MFxsT/6wPGxAD2+YgCsQG6AIQECIoCxsQA9vGIArEBugCEBAiKAg+64AdzBcbE/+sDxsQA9vmI
-IrEBugCEBAiKAsbEAPbxiCKwAboAhAQIIAKwAboAhAQICAK4AQAAALophAQIMQL8zkiL47pMhAQI
-D7YCULoxhAQIi8JQaAEAAADozf7//4vjuIOmBAj/ELophAQIiQK4AQAAALkBAAAAOcEPhQUAAADp
-AAAAAIvjuQEAAAC6KYQECIsCgfkAAAAAdAf/yf80iOvxuCmEBAj/ELgCAAAAuQEAAAA5wQ+FBQAA
-AOnp////zLgBAAAAx8MCAAAAzYAvbGliL2xkLWxpbnV4LnNvLjIAAQAAAAAAAAAEAAAAQaYECAYA
-AABRpgQICwAAABAAAAAFAAAAYaYECAoAAAAWAAAABwAAAHemBAgIAAAADAAAAAkAAAAMAAAAAAAA
-AAAAAAABAAAAAQAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAEgAAAGEAYgAALmR5bnN0cgAuZHluYW1p
-YwCDpgQIAQAAAAAAAAAAAAAA
+AzQ1AAEAAAABAAAAAQAAAAEAAAAahAQIAAEAAAABAAAACWF6AAAAJoQECAAAAABxCncNZQlyAEcB
+//4CAIuEJAQAAACjLYQECFNVi+yL3LothAQI/wK6LYQECP8KuhQAAAAD1YMCBLoUAAAAA9WDKgS6
+FAAAAAPV9xq6FAAAAAPV9xK6FAAAAAPViSq6FAAAAAPViyrJW8O6FAAAAAPV0SK6FAAAAAPV0Sq6
+FAAAAAPV0Tq6FAAAAAPViwLJW8NTVYvsi9y4AgAAALkCAAAAOcEPhQMAAADJW8PJW8NTVYvsi9y6
+KYQECIsCuimEBAiJArgBAAAAuimEBAgBArgBAAAAuimEBAgpArkBAAAAuimEBAiLAvfhuimEBAiJ
+ArEBugCEBAiKAg+64AdzBcbE/+sDxsQA9vmIArEBugCEBAiKAsbEAPbxiAKxAboAhAQIigIPuuAH
+cwXGxP/rA8bEAPb5iCKxAboAhAQIigLGxAD28YgisAG6AIQECCACsAG6AIQECAgCuAEAAAC6KYQE
+CDEC/M5Mi+O6TIQECA+2AlC6MYQECIvCUGgBAAAA6Iv+//+L47hmpwQI/xC6KYQECIkCuAEAAAC5
+AQAAADnBD4UAAAAAuAEAAAC5AQAAADnBD4QAAAAAuAEAAAC5AQAAADnBD40AAAAAuAEAAAC5AQAA
+ADnBD44AAAAAuAEAAAC5AQAAADnBD48AAAAAuAEAAAC5AQAAADnBD4wAAAAAuAEAAAC5AQAAADnB
+D4MAAAAAuAEAAAC5AQAAADnBD4YAAAAAuAEAAAC5AQAAADnBD4cAAAAAuAEAAAC5AQAAADnBD4IA
+AAAAi+O5AQAAALophAQIiwKB+QAAAAB0B//J/zSI6/G4KYQECP8QuAIAAAC5AQAAADnBD4UFAAAA
+6en////MuAEAAADHwwIAAADNgC9saWIvbGQtbGludXguc28uMgABAAAAAAAAAAQAAAAkpwQIBgAA
+ADSnBAgLAAAAEAAAAAUAAABEpwQICgAAABYAAAAHAAAAWqcECAgAAAAMAAAACQAAAAwAAAAAAAAA
+AAAAAAEAAAABAAAAAAAAAAAAAAACAAAAAAAAAAAAAAASAAAAYQBiAAAuZHluc3RyAC5keW5hbWlj
+AGanBAgBAAAAAAAAAAAAAAA=
--- ocompiler-1.orig/tests/a.out.oc
+++ ocompiler-1/tests/a.out.oc
@@ -27,6 +27,13 @@ function intern(data a,sd b,sv c) #comme
 	dec a
 	incst c
 	decst c
+	neg c
+	not c
+	base c
+	leave c
+	shl1 c
+	shr1 c
+	sar1 c
 	return c
 end
 function f()
@@ -56,9 +63,20 @@ hex -:,~\,~-\\+(1+01+0x2+\intern+\\inter
 ;
 call intern(1,"q\nw\re\tr",main.a:main.a)
 set b puts()
+
 if 1=1
-else
+#elseif 1!!1
+#elseif 1!1
 end
+if 1!=1;end
+if 1<1;end
+if 1>1;end
+if 1<=1;end
+if 1>=1;end
+if 1<^1;end
+if 1>^1;end
+if 1<=^1;end
+if 1>=^1;end
 
 callex b b 1
 while 1=2
@@ -68,6 +86,9 @@ whiletrue
 	break
 end
 
+char z=0xff+077+12-3
+char z2=a1;char z3=-a1;char z4=~a1;char z5=~-a1;
+
 aftercall *tst
 override x_file 1
 i3
--- ocompiler-1.orig/tests/d
+++ ocompiler-1/tests/d
@@ -2,6 +2,6 @@
 ./x ${1} && \
 ../otoc/otoc ${1}.oc.x && \
 cat ${1}.c && {
-	cc ${1}.c
+	cc -w ${1}.c
 	mv ${1}.c .expected
 }
